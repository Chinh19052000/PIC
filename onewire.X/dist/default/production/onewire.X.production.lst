

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Feb 24 22:11:24 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    29                           	dabs	1,0x7E,2
    30  0000                     
    31                           ; Version 2.20
    32                           ; Generated 12/02/2020 GMT
    33                           ; 
    34                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F887 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     	;# 
    66  0001                     	;# 
    67  0002                     	;# 
    68  0003                     	;# 
    69  0004                     	;# 
    70  0005                     	;# 
    71  0006                     	;# 
    72  0007                     	;# 
    73  0008                     	;# 
    74  0009                     	;# 
    75  000A                     	;# 
    76  000B                     	;# 
    77  000C                     	;# 
    78  000D                     	;# 
    79  000E                     	;# 
    80  000E                     	;# 
    81  000F                     	;# 
    82  0010                     	;# 
    83  0011                     	;# 
    84  0012                     	;# 
    85  0013                     	;# 
    86  0014                     	;# 
    87  0015                     	;# 
    88  0015                     	;# 
    89  0016                     	;# 
    90  0017                     	;# 
    91  0018                     	;# 
    92  0019                     	;# 
    93  001A                     	;# 
    94  001B                     	;# 
    95  001B                     	;# 
    96  001C                     	;# 
    97  001D                     	;# 
    98  001E                     	;# 
    99  001F                     	;# 
   100  0081                     	;# 
   101  0085                     	;# 
   102  0086                     	;# 
   103  0087                     	;# 
   104  0088                     	;# 
   105  0089                     	;# 
   106  008C                     	;# 
   107  008D                     	;# 
   108  008E                     	;# 
   109  008F                     	;# 
   110  0090                     	;# 
   111  0091                     	;# 
   112  0092                     	;# 
   113  0093                     	;# 
   114  0093                     	;# 
   115  0093                     	;# 
   116  0094                     	;# 
   117  0095                     	;# 
   118  0096                     	;# 
   119  0097                     	;# 
   120  0098                     	;# 
   121  0099                     	;# 
   122  009A                     	;# 
   123  009B                     	;# 
   124  009C                     	;# 
   125  009D                     	;# 
   126  009E                     	;# 
   127  009F                     	;# 
   128  0105                     	;# 
   129  0107                     	;# 
   130  0108                     	;# 
   131  0109                     	;# 
   132  010C                     	;# 
   133  010C                     	;# 
   134  010D                     	;# 
   135  010E                     	;# 
   136  010F                     	;# 
   137  0185                     	;# 
   138  0187                     	;# 
   139  0188                     	;# 
   140  0189                     	;# 
   141  018C                     	;# 
   142  018D                     	;# 
   143  0000                     	;# 
   144  0001                     	;# 
   145  0002                     	;# 
   146  0003                     	;# 
   147  0004                     	;# 
   148  0005                     	;# 
   149  0006                     	;# 
   150  0007                     	;# 
   151  0008                     	;# 
   152  0009                     	;# 
   153  000A                     	;# 
   154  000B                     	;# 
   155  000C                     	;# 
   156  000D                     	;# 
   157  000E                     	;# 
   158  000E                     	;# 
   159  000F                     	;# 
   160  0010                     	;# 
   161  0011                     	;# 
   162  0012                     	;# 
   163  0013                     	;# 
   164  0014                     	;# 
   165  0015                     	;# 
   166  0015                     	;# 
   167  0016                     	;# 
   168  0017                     	;# 
   169  0018                     	;# 
   170  0019                     	;# 
   171  001A                     	;# 
   172  001B                     	;# 
   173  001B                     	;# 
   174  001C                     	;# 
   175  001D                     	;# 
   176  001E                     	;# 
   177  001F                     	;# 
   178  0081                     	;# 
   179  0085                     	;# 
   180  0086                     	;# 
   181  0087                     	;# 
   182  0088                     	;# 
   183  0089                     	;# 
   184  008C                     	;# 
   185  008D                     	;# 
   186  008E                     	;# 
   187  008F                     	;# 
   188  0090                     	;# 
   189  0091                     	;# 
   190  0092                     	;# 
   191  0093                     	;# 
   192  0093                     	;# 
   193  0093                     	;# 
   194  0094                     	;# 
   195  0095                     	;# 
   196  0096                     	;# 
   197  0097                     	;# 
   198  0098                     	;# 
   199  0099                     	;# 
   200  009A                     	;# 
   201  009B                     	;# 
   202  009C                     	;# 
   203  009D                     	;# 
   204  009E                     	;# 
   205  009F                     	;# 
   206  0105                     	;# 
   207  0107                     	;# 
   208  0108                     	;# 
   209  0109                     	;# 
   210  010C                     	;# 
   211  010C                     	;# 
   212  010D                     	;# 
   213  010E                     	;# 
   214  010F                     	;# 
   215  0185                     	;# 
   216  0187                     	;# 
   217  0188                     	;# 
   218  0189                     	;# 
   219  018C                     	;# 
   220  018D                     	;# 
   221  0000                     	;# 
   222  0001                     	;# 
   223  0002                     	;# 
   224  0003                     	;# 
   225  0004                     	;# 
   226  0005                     	;# 
   227  0006                     	;# 
   228  0007                     	;# 
   229  0008                     	;# 
   230  0009                     	;# 
   231  000A                     	;# 
   232  000B                     	;# 
   233  000C                     	;# 
   234  000D                     	;# 
   235  000E                     	;# 
   236  000E                     	;# 
   237  000F                     	;# 
   238  0010                     	;# 
   239  0011                     	;# 
   240  0012                     	;# 
   241  0013                     	;# 
   242  0014                     	;# 
   243  0015                     	;# 
   244  0015                     	;# 
   245  0016                     	;# 
   246  0017                     	;# 
   247  0018                     	;# 
   248  0019                     	;# 
   249  001A                     	;# 
   250  001B                     	;# 
   251  001B                     	;# 
   252  001C                     	;# 
   253  001D                     	;# 
   254  001E                     	;# 
   255  001F                     	;# 
   256  0081                     	;# 
   257  0085                     	;# 
   258  0086                     	;# 
   259  0087                     	;# 
   260  0088                     	;# 
   261  0089                     	;# 
   262  008C                     	;# 
   263  008D                     	;# 
   264  008E                     	;# 
   265  008F                     	;# 
   266  0090                     	;# 
   267  0091                     	;# 
   268  0092                     	;# 
   269  0093                     	;# 
   270  0093                     	;# 
   271  0093                     	;# 
   272  0094                     	;# 
   273  0095                     	;# 
   274  0096                     	;# 
   275  0097                     	;# 
   276  0098                     	;# 
   277  0099                     	;# 
   278  009A                     	;# 
   279  009B                     	;# 
   280  009C                     	;# 
   281  009D                     	;# 
   282  009E                     	;# 
   283  009F                     	;# 
   284  0105                     	;# 
   285  0107                     	;# 
   286  0108                     	;# 
   287  0109                     	;# 
   288  010C                     	;# 
   289  010C                     	;# 
   290  010D                     	;# 
   291  010E                     	;# 
   292  010F                     	;# 
   293  0185                     	;# 
   294  0187                     	;# 
   295  0188                     	;# 
   296  0189                     	;# 
   297  018C                     	;# 
   298  018D                     	;# 
   299  0000                     	;# 
   300  0001                     	;# 
   301  0002                     	;# 
   302  0003                     	;# 
   303  0004                     	;# 
   304  0005                     	;# 
   305  0006                     	;# 
   306  0007                     	;# 
   307  0008                     	;# 
   308  0009                     	;# 
   309  000A                     	;# 
   310  000B                     	;# 
   311  000C                     	;# 
   312  000D                     	;# 
   313  000E                     	;# 
   314  000E                     	;# 
   315  000F                     	;# 
   316  0010                     	;# 
   317  0011                     	;# 
   318  0012                     	;# 
   319  0013                     	;# 
   320  0014                     	;# 
   321  0015                     	;# 
   322  0015                     	;# 
   323  0016                     	;# 
   324  0017                     	;# 
   325  0018                     	;# 
   326  0019                     	;# 
   327  001A                     	;# 
   328  001B                     	;# 
   329  001B                     	;# 
   330  001C                     	;# 
   331  001D                     	;# 
   332  001E                     	;# 
   333  001F                     	;# 
   334  0081                     	;# 
   335  0085                     	;# 
   336  0086                     	;# 
   337  0087                     	;# 
   338  0088                     	;# 
   339  0089                     	;# 
   340  008C                     	;# 
   341  008D                     	;# 
   342  008E                     	;# 
   343  008F                     	;# 
   344  0090                     	;# 
   345  0091                     	;# 
   346  0092                     	;# 
   347  0093                     	;# 
   348  0093                     	;# 
   349  0093                     	;# 
   350  0094                     	;# 
   351  0095                     	;# 
   352  0096                     	;# 
   353  0097                     	;# 
   354  0098                     	;# 
   355  0099                     	;# 
   356  009A                     	;# 
   357  009B                     	;# 
   358  009C                     	;# 
   359  009D                     	;# 
   360  009E                     	;# 
   361  009F                     	;# 
   362  0105                     	;# 
   363  0107                     	;# 
   364  0108                     	;# 
   365  0109                     	;# 
   366  010C                     	;# 
   367  010C                     	;# 
   368  010D                     	;# 
   369  010E                     	;# 
   370  010F                     	;# 
   371  0185                     	;# 
   372  0187                     	;# 
   373  0188                     	;# 
   374  0189                     	;# 
   375  018C                     	;# 
   376  018D                     	;# 
   377                           
   378                           	psect	idataBANK0
   379  0301                     __pidataBANK0:
   380                           
   381                           ;initializer for _temp
   382  0301  3430               	retlw	48
   383  0302  3430               	retlw	48
   384  0303  3430               	retlw	48
   385  0304  342E               	retlw	46
   386  0305  3430               	retlw	48
   387  0306  3430               	retlw	48
   388  0307  3430               	retlw	48
   389  0308  3430               	retlw	48
   390  0309  3420               	retlw	32
   391  030A  3443               	retlw	67
   392  030B  3400               	retlw	0
   393  0031                     _RB1	set	49
   394  0041                     _RD1	set	65
   395  0045                     _RD5	set	69
   396  0044                     _RD4	set	68
   397  0043                     _RD3	set	67
   398  0042                     _RD2	set	66
   399  0040                     _RD0	set	64
   400  0431                     _TRISB1	set	1073
   401  0445                     _TRISD5	set	1093
   402  0444                     _TRISD4	set	1092
   403  0443                     _TRISD3	set	1091
   404  0442                     _TRISD2	set	1090
   405  0441                     _TRISD1	set	1089
   406  0440                     _TRISD0	set	1088
   407  0189                     _ANSELH	set	393
   408                           
   409                           	psect	strings
   410  0003                     __pstrings:
   411  0003                     stringtab:
   412  0003                     __stringtab:
   413                           
   414                           ;	String table - string pointers are 1 byte each
   415  0003  1BFF               	btfsc	btemp+1,7
   416  0004  280D               	ljmp	stringcode
   417  0005  1383               	bcf	3,7
   418  0006  187F               	btfsc	btemp+1,0
   419  0007  1783               	bsf	3,7
   420  0008  0800               	movf	0,w
   421  0009  0A84               	incf	4,f
   422  000A  1903               	skipnz
   423  000B  0AFF               	incf	btemp+1,f
   424  000C  0008               	return
   425  000D                     stringcode:
   426  000D                     stringdir:
   427  000D  3000               	movlw	high stringdir
   428  000E  008A               	movwf	10
   429  000F  0804               	movf	4,w
   430  0010  0A84               	incf	4,f
   431  0011  0782               	addwf	2,f
   432  0012                     __stringbase:
   433  0012  3400               	retlw	0
   434  0013                     __end_of__stringtab:
   435  0013                     STR_1:
   436  0013  3454               	retlw	84	;'T'
   437  0014  3465               	retlw	101	;'e'
   438  0015  346D               	retlw	109	;'m'
   439  0016  3470               	retlw	112	;'p'
   440  0017  3465               	retlw	101	;'e'
   441  0018  3472               	retlw	114	;'r'
   442  0019  3461               	retlw	97	;'a'
   443  001A  3474               	retlw	116	;'t'
   444  001B  3475               	retlw	117	;'u'
   445  001C  3472               	retlw	114	;'r'
   446  001D  3465               	retlw	101	;'e'
   447  001E  343A               	retlw	58	;':'
   448  001F  3400               	retlw	0
   449  0020                     STR_2:
   450  0020  3420               	retlw	32	;' '
   451  0021  3420               	retlw	32	;' '
   452  0022  3445               	retlw	69	;'E'
   453  0023  3472               	retlw	114	;'r'
   454  0024  3472               	retlw	114	;'r'
   455  0025  346F               	retlw	111	;'o'
   456  0026  3472               	retlw	114	;'r'
   457  0027  3421               	retlw	33	;'!'
   458  0028  3420               	retlw	32	;' '
   459  0029  3420               	retlw	32	;' '
   460  002A  3400               	retlw	0
   461                           
   462                           	psect	cinit
   463  07EB                     start_initialization:	
   464                           ; #config settings
   465                           
   466  07EB                     __initialization:
   467                           
   468                           ; Initialize objects allocated to BANK0
   469  07EB  1383               	bcf	3,7	;select IRP bank0
   470  07EC  302B               	movlw	low (__pdataBANK0+11)
   471  07ED  00FD               	movwf	btemp+-1
   472  07EE  3003               	movlw	high __pidataBANK0
   473  07EF  00FE               	movwf	btemp
   474  07F0  3001               	movlw	low __pidataBANK0
   475  07F1  00FF               	movwf	btemp+1
   476  07F2  3020               	movlw	low __pdataBANK0
   477  07F3  0084               	movwf	4
   478  07F4  120A  118A  2310  120A  118A  	fcall	init_ram0
   479                           
   480                           ; Clear objects allocated to BANK0
   481  07F9  01B5               	clrf	__pbssBANK0& (0+127)
   482  07FA  01B6               	clrf	(__pbssBANK0+1)& (0+127)
   483                           
   484                           ; Clear objects allocated to BITBANK0
   485  07FB  01B4               	clrf	(__pbitbssBANK0/(0+8))& (0+127)
   486  07FC                     end_of_initialization:	
   487                           ;End of C runtime variable initialization code
   488                           
   489  07FC                     __end_of__initialization:
   490  07FC  0183               	clrf	3
   491  07FD  120A  118A  2E5F   	ljmp	_main	;jump to C main() function
   492                           
   493                           	psect	bitbssBANK0
   494  01A0                     __pbitbssBANK0:
   495  01A0                     ds18b20_read_bit@value:
   496  01A0                     	ds	1
   497  01A1                     _RS:
   498  01A1                     	ds	1
   499                           
   500                           	psect	bssBANK0
   501  0035                     __pbssBANK0:
   502  0035                     _raw_temp:
   503  0035                     	ds	2
   504                           
   505                           	psect	dataBANK0
   506  0020                     __pdataBANK0:
   507  0020                     _temp:
   508  0020                     	ds	11
   509                           
   510                           	psect	inittext
   511  030C                     init_fetch0:	
   512                           ;	Called with low address in FSR and high address in W
   513                           
   514  030C  087E               	movf	btemp,w
   515  030D  008A               	movwf	10
   516  030E  087F               	movf	btemp+1,w
   517  030F  0082               	movwf	2
   518  0310                     init_ram0:	
   519                           ;Called with:
   520                           ;	high address of idata address in btemp 
   521                           ;	low address of idata address in btemp+1 
   522                           ;	low address of data in FSR
   523                           ;	high address + 1 of data in btemp-1
   524                           
   525  0310  120A  118A  230C  120A  118A  	fcall	init_fetch0
   526  0315  0080               	movwf	0
   527  0316  0A84               	incf	4,f
   528  0317  0804               	movf	4,w
   529  0318  067D               	xorwf	btemp+-1,w
   530  0319  1903               	btfsc	3,2
   531  031A  3400               	retlw	0
   532  031B  0AFF               	incf	btemp+1,f
   533  031C  1903               	btfsc	3,2
   534  031D  0AFE               	incf	btemp,f
   535  031E  2B10               	goto	init_ram0
   536                           
   537                           	psect	cstackCOMMON
   538  0070                     __pcstackCOMMON:
   539  0070                     ?_ds18b20_read:
   540  0070                     ?_ds18b20_start:	
   541                           ; 1 bit 
   542                           
   543  0070                     ?_ds18b20_read_bit:	
   544                           ; 1 bit 
   545                           
   546  0070                     ?_LCD_begin:	
   547                           ; 1 bit 
   548                           
   549  0070                     ?_main:	
   550                           ; 1 bytes @ 0x0
   551                           
   552  0070                     ?_LCD_writeNibble:	
   553                           ; 1 bytes @ 0x0
   554                           
   555  0070                     ??_LCD_writeNibble:	
   556                           ; 1 bytes @ 0x0
   557                           
   558  0070                     ?_LCD_cmd:	
   559                           ; 1 bytes @ 0x0
   560                           
   561  0070                     ??_ds18b20_start:	
   562                           ; 1 bytes @ 0x0
   563                           
   564  0070                     ?_ds18b20_write_bit:	
   565                           ; 1 bytes @ 0x0
   566                           
   567  0070                     ??_ds18b20_write_bit:	
   568                           ; 1 bytes @ 0x0
   569                           
   570  0070                     ?_ds18b20_write_byte:	
   571                           ; 1 bytes @ 0x0
   572                           
   573  0070                     ??_ds18b20_read_bit:	
   574                           ; 1 bytes @ 0x0
   575                           
   576  0070                     ?_ds18b20_read_byte:	
   577                           ; 1 bytes @ 0x0
   578                           
   579  0070                     ?___wmul:	
   580                           ; 1 bytes @ 0x0
   581                           
   582  0070                     ___wmul@multiplier:	
   583                           ; 2 bytes @ 0x0
   584                           
   585                           
   586                           ; 2 bytes @ 0x0
   587  0070                     	ds	1
   588  0071                     ??_ds18b20_read_byte:
   589  0071                     LCD_writeNibble@n:	
   590                           ; 1 bytes @ 0x1
   591                           
   592  0071                     ds18b20_write_bit@value:	
   593                           ; 1 bytes @ 0x1
   594                           
   595                           
   596                           ; 1 bytes @ 0x1
   597  0071                     	ds	1
   598  0072                     ?_LCD_print:
   599  0072                     ??_LCD_cmd:	
   600                           ; 1 bytes @ 0x2
   601                           
   602  0072                     ??_ds18b20_write_byte:	
   603                           ; 1 bytes @ 0x2
   604                           
   605  0072                     LCD_print@LCD_Str:	
   606                           ; 1 bytes @ 0x2
   607                           
   608  0072                     ___wmul@multiplicand:	
   609                           ; 2 bytes @ 0x2
   610                           
   611                           
   612                           ; 2 bytes @ 0x2
   613  0072                     	ds	1
   614  0073                     ds18b20_write_byte@value:
   615  0073                     ds18b20_read_byte@value:	
   616                           ; 1 bytes @ 0x3
   617                           
   618                           
   619                           ; 1 bytes @ 0x3
   620  0073                     	ds	1
   621  0074                     ??_LCD_print:
   622  0074                     ??___wmul:	
   623                           ; 1 bytes @ 0x4
   624                           
   625  0074                     LCD_cmd@Command:	
   626                           ; 1 bytes @ 0x4
   627                           
   628  0074                     ds18b20_write_byte@i:	
   629                           ; 1 bytes @ 0x4
   630                           
   631  0074                     ds18b20_read_byte@i:	
   632                           ; 1 bytes @ 0x4
   633                           
   634  0074                     ___wmul@product:	
   635                           ; 1 bytes @ 0x4
   636                           
   637                           
   638                           ; 2 bytes @ 0x4
   639  0074                     	ds	1
   640  0075                     ??_LCD_begin:
   641  0075                     ?_LCD_goTo:	
   642                           ; 1 bytes @ 0x5
   643                           
   644  0075                     ??_ds18b20_read:	
   645                           ; 1 bytes @ 0x5
   646                           
   647  0075                     LCD_goTo@row:	
   648                           ; 1 bytes @ 0x5
   649                           
   650  0075                     LCD_print@i:	
   651                           ; 1 bytes @ 0x5
   652                           
   653                           
   654                           ; 1 bytes @ 0x5
   655  0075                     	ds	1
   656  0076                     ??_LCD_goTo:
   657  0076                     ?___lwdiv:	
   658                           ; 1 bytes @ 0x6
   659                           
   660  0076                     ___lwdiv@divisor:	
   661                           ; 2 bytes @ 0x6
   662                           
   663                           
   664                           ; 2 bytes @ 0x6
   665  0076                     	ds	1
   666  0077                     ds18b20_read@raw_temp_value:
   667                           
   668                           ; 1 bytes @ 0x7
   669  0077                     	ds	1
   670  0078                     LCD_goTo@col:
   671  0078                     ___lwdiv@dividend:	
   672                           ; 1 bytes @ 0x8
   673                           
   674                           
   675                           ; 2 bytes @ 0x8
   676  0078                     	ds	2
   677  007A                     ??___lwdiv:
   678                           
   679                           ; 1 bytes @ 0xA
   680  007A                     	ds	1
   681  007B                     ___lwdiv@quotient:
   682                           
   683                           ; 2 bytes @ 0xB
   684  007B                     	ds	2
   685  007D                     ___lwdiv@counter:
   686                           
   687                           ; 1 bytes @ 0xD
   688  007D                     	ds	1
   689                           
   690                           	psect	cstackBANK0
   691  002B                     __pcstackBANK0:
   692  002B                     ?___lwmod:
   693  002B                     ___lwmod@divisor:	
   694                           ; 2 bytes @ 0x0
   695                           
   696                           
   697                           ; 2 bytes @ 0x0
   698  002B                     	ds	2
   699  002D                     ___lwmod@dividend:
   700                           
   701                           ; 2 bytes @ 0x2
   702  002D                     	ds	2
   703  002F                     ??___lwmod:
   704                           
   705                           ; 1 bytes @ 0x4
   706  002F                     	ds	1
   707  0030                     ___lwmod@counter:
   708                           
   709                           ; 1 bytes @ 0x5
   710  0030                     	ds	1
   711  0031                     ??_main:
   712                           
   713                           ; 1 bytes @ 0x6
   714  0031                     	ds	3
   715                           
   716                           	psect	maintext
   717  065F                     __pmaintext:	
   718 ;;
   719 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   720 ;;
   721 ;; *************** function _main *****************
   722 ;; Defined at:
   723 ;;		line 33 in file "main.c"
   724 ;; Parameters:    Size  Location     Type
   725 ;;		None
   726 ;; Auto vars:     Size  Location     Type
   727 ;;		None
   728 ;; Return value:  Size  Location     Type
   729 ;;                  1    wreg      void 
   730 ;; Registers used:
   731 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   732 ;; Tracked objects:
   733 ;;		On entry : B00/0
   734 ;;		On exit  : 0/0
   735 ;;		Unchanged: 0/0
   736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   737 ;;      Params:         0       0       0       0       0
   738 ;;      Locals:         0       0       0       0       0
   739 ;;      Temps:          0       3       0       0       0
   740 ;;      Totals:         0       3       0       0       0
   741 ;;Total ram usage:        3 bytes
   742 ;; Hardware stack levels required when called:    3
   743 ;; This function calls:
   744 ;;		_LCD_begin
   745 ;;		_LCD_goTo
   746 ;;		_LCD_print
   747 ;;		___lwdiv
   748 ;;		___lwmod
   749 ;;		___wmul
   750 ;;		_ds18b20_read
   751 ;; This function is called by:
   752 ;;		Startup code after reset
   753 ;; This function uses a non-reentrant model
   754 ;;
   755                           
   756                           
   757                           ;psect for function _main
   758  065F                     _main:
   759  065F                     l1260:	
   760                           ;incstack = 0
   761                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   762                           
   763                           
   764                           ;main.c: 34:     ANSELH = 0;
   765  065F  1683               	bsf	3,5	;RP0=1, select bank3
   766  0660  1703               	bsf	3,6	;RP1=1, select bank3
   767  0661  0189               	clrf	9	;volatile
   768  0662                     l1262:
   769                           
   770                           ;main.c: 35:     _delay((unsigned long)((1000)*(8000000/4000.0)));
   771  0662  300B               	movlw	11
   772  0663  1283               	bcf	3,5	;RP0=0, select bank0
   773  0664  1303               	bcf	3,6	;RP1=0, select bank0
   774  0665  00B3               	movwf	??_main+2
   775  0666  3026               	movlw	38
   776  0667  00B2               	movwf	??_main+1
   777  0668  305D               	movlw	93
   778  0669  00B1               	movwf	??_main
   779  066A                     u1057:
   780  066A  0BB1               	decfsz	??_main,f
   781  066B  2E6A               	goto	u1057
   782  066C  0BB2               	decfsz	??_main+1,f
   783  066D  2E6A               	goto	u1057
   784  066E  0BB3               	decfsz	??_main+2,f
   785  066F  2E6A               	goto	u1057
   786  0670                     l1264:
   787                           
   788                           ;main.c: 36:     LCD_begin();
   789  0670  120A  118A  25CC  120A  118A  	fcall	_LCD_begin
   790  0675                     l1266:
   791                           
   792                           ;main.c: 37:     LCD_goTo(3, 1);
   793  0675  01F5               	clrf	LCD_goTo@row
   794  0676  0AF5               	incf	LCD_goTo@row,f
   795  0677  3003               	movlw	3
   796  0678  120A  118A  2416  120A  118A  	fcall	_LCD_goTo
   797  067D                     l1268:
   798                           
   799                           ;main.c: 38:     LCD_print("Temperature:");
   800  067D  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   801  067E  00F2               	movwf	LCD_print@LCD_Str
   802  067F  3080               	movlw	128
   803  0680  00F3               	movwf	LCD_print@LCD_Str+1
   804  0681  120A  118A  24CC  120A  118A  	fcall	_LCD_print
   805  0686                     l1270:
   806                           
   807                           ;main.c: 39:     temp[8] = 223;
   808  0686  30DF               	movlw	223
   809  0687  1283               	bcf	3,5	;RP0=0, select bank0
   810  0688  1303               	bcf	3,6	;RP1=0, select bank0
   811  0689  00B1               	movwf	??_main
   812  068A  0831               	movf	??_main,w
   813  068B  00A8               	movwf	_temp+8
   814  068C                     l1272:
   815                           
   816                           ;main.c: 41:         if (ds18b20_read(&raw_temp)) {
   817  068C  3035               	movlw	(low (_raw_temp| 0))& (0+255)
   818  068D  120A  118A  2515  120A  118A  	fcall	_ds18b20_read
   819  0692  1C03               	btfss	3,0
   820  0693  2E95               	goto	u1001
   821  0694  2E96               	goto	u1000
   822  0695                     u1001:
   823  0695  2FC4               	goto	l1302
   824  0696                     u1000:
   825  0696                     l1274:
   826                           
   827                           ;main.c: 42:             if (raw_temp & 0x8000)
   828  0696  1283               	bcf	3,5	;RP0=0, select bank0
   829  0697  1303               	bcf	3,6	;RP1=0, select bank0
   830  0698  1FB6               	btfss	_raw_temp+1,7
   831  0699  2E9B               	goto	u1011
   832  069A  2E9C               	goto	u1010
   833  069B                     u1011:
   834  069B  2EA6               	goto	l1280
   835  069C                     u1010:
   836  069C                     l1276:
   837                           
   838                           ;main.c: 43:             {;main.c: 44:                 temp[0] = '-';
   839  069C  302D               	movlw	45
   840  069D  00B1               	movwf	??_main
   841  069E  0831               	movf	??_main,w
   842  069F  00A0               	movwf	_temp
   843  06A0                     l1278:
   844                           
   845                           ;main.c: 45:                 raw_temp = (~raw_temp) + 1;
   846  06A0  09B5               	comf	_raw_temp,f
   847  06A1  09B6               	comf	_raw_temp+1,f
   848  06A2  0AB5               	incf	_raw_temp,f
   849  06A3  1903               	skipnz
   850  06A4  0AB6               	incf	_raw_temp+1,f
   851                           
   852                           ;main.c: 46:             }
   853  06A5  2EC3               	goto	l1286
   854  06A6                     l1280:
   855                           
   856                           ;main.c: 48:                 if ((raw_temp >> 4) >= 100)
   857  06A6  0836               	movf	_raw_temp+1,w
   858  06A7  00B2               	movwf	??_main+1
   859  06A8  0835               	movf	_raw_temp,w
   860  06A9  00B1               	movwf	??_main
   861  06AA  3004               	movlw	4
   862  06AB                     u1025:
   863  06AB  1003               	clrc
   864  06AC  0CB2               	rrf	??_main+1,f
   865  06AD  0CB1               	rrf	??_main,f
   866  06AE  3EFF               	addlw	-1
   867  06AF  1D03               	skipz
   868  06B0  2EAB               	goto	u1025
   869  06B1  3000               	movlw	0
   870  06B2  0232               	subwf	??_main+1,w
   871  06B3  3064               	movlw	100
   872  06B4  1903               	skipnz
   873  06B5  0231               	subwf	??_main,w
   874  06B6  1C03               	skipc
   875  06B7  2EB9               	goto	u1031
   876  06B8  2EBA               	goto	u1030
   877  06B9                     u1031:
   878  06B9  2EBF               	goto	l1284
   879  06BA                     u1030:
   880  06BA                     l1282:
   881                           
   882                           ;main.c: 49:                     temp[0] = '1';
   883  06BA  3031               	movlw	49
   884  06BB  00B1               	movwf	??_main
   885  06BC  0831               	movf	??_main,w
   886  06BD  00A0               	movwf	_temp
   887  06BE  2EC3               	goto	l1286
   888  06BF                     l1284:
   889                           
   890                           ;main.c: 51:                     temp[0] = ' ';
   891  06BF  3020               	movlw	32
   892  06C0  00B1               	movwf	??_main
   893  06C1  0831               	movf	??_main,w
   894  06C2  00A0               	movwf	_temp
   895  06C3                     l1286:
   896                           
   897                           ;main.c: 54:             temp[1] = ((raw_temp >> 4) / 10) % 10 + '0';
   898  06C3  300A               	movlw	10
   899  06C4  00AB               	movwf	___lwmod@divisor
   900  06C5  3000               	movlw	0
   901  06C6  00AC               	movwf	___lwmod@divisor+1
   902  06C7  300A               	movlw	10
   903  06C8  00F6               	movwf	___lwdiv@divisor
   904  06C9  3000               	movlw	0
   905  06CA  00F7               	movwf	___lwdiv@divisor+1
   906  06CB  0E35               	swapf	_raw_temp,w
   907  06CC  390F               	andlw	15
   908  06CD  00F8               	movwf	___lwdiv@dividend
   909  06CE  0E36               	swapf	_raw_temp+1,w
   910  06CF  39F0               	andlw	240
   911  06D0  04F8               	iorwf	___lwdiv@dividend,f
   912  06D1  0E36               	swapf	_raw_temp+1,w
   913  06D2  390F               	andlw	15
   914  06D3  00F9               	movwf	___lwdiv@dividend+1
   915  06D4  120A  118A  2488  120A  118A  	fcall	___lwdiv
   916  06D9  0877               	movf	?___lwdiv+1,w
   917  06DA  1283               	bcf	3,5	;RP0=0, select bank0
   918  06DB  1303               	bcf	3,6	;RP1=0, select bank0
   919  06DC  00AE               	movwf	___lwmod@dividend+1
   920  06DD  0876               	movf	?___lwdiv,w
   921  06DE  00AD               	movwf	___lwmod@dividend
   922  06DF  120A  118A  244C  120A  118A  	fcall	___lwmod
   923  06E4  1283               	bcf	3,5	;RP0=0, select bank0
   924  06E5  1303               	bcf	3,6	;RP1=0, select bank0
   925  06E6  082B               	movf	?___lwmod,w
   926  06E7  3E30               	addlw	48
   927  06E8  00B1               	movwf	??_main
   928  06E9  0831               	movf	??_main,w
   929  06EA  00A1               	movwf	_temp+1
   930  06EB                     l1288:
   931                           
   932                           ;main.c: 55:             temp[2] = (raw_temp >> 4) % 10 + '0';
   933  06EB  300A               	movlw	10
   934  06EC  00AB               	movwf	___lwmod@divisor
   935  06ED  3000               	movlw	0
   936  06EE  00AC               	movwf	___lwmod@divisor+1
   937  06EF  0E35               	swapf	_raw_temp,w
   938  06F0  390F               	andlw	15
   939  06F1  00AD               	movwf	___lwmod@dividend
   940  06F2  0E36               	swapf	_raw_temp+1,w
   941  06F3  39F0               	andlw	240
   942  06F4  04AD               	iorwf	___lwmod@dividend,f
   943  06F5  0E36               	swapf	_raw_temp+1,w
   944  06F6  390F               	andlw	15
   945  06F7  00AE               	movwf	___lwmod@dividend+1
   946  06F8  120A  118A  244C  120A  118A  	fcall	___lwmod
   947  06FD  1283               	bcf	3,5	;RP0=0, select bank0
   948  06FE  1303               	bcf	3,6	;RP1=0, select bank0
   949  06FF  082B               	movf	?___lwmod,w
   950  0700  3E30               	addlw	48
   951  0701  00B1               	movwf	??_main
   952  0702  0831               	movf	??_main,w
   953  0703  00A2               	movwf	_temp+2
   954  0704                     l1290:
   955                           
   956                           ;main.c: 58:             temp[4] = ((raw_temp & 0x0F) * 625) / 1000 + '0';
   957  0704  30E8               	movlw	232
   958  0705  00F6               	movwf	___lwdiv@divisor
   959  0706  3003               	movlw	3
   960  0707  00F7               	movwf	___lwdiv@divisor+1
   961  0708  300F               	movlw	15
   962  0709  0535               	andwf	_raw_temp,w
   963  070A  00F0               	movwf	___wmul@multiplier
   964  070B  3000               	movlw	0
   965  070C  0536               	andwf	_raw_temp+1,w
   966  070D  00F1               	movwf	___wmul@multiplier+1
   967  070E  3071               	movlw	113
   968  070F  00F2               	movwf	___wmul@multiplicand
   969  0710  3002               	movlw	2
   970  0711  00F3               	movwf	___wmul@multiplicand+1
   971  0712  120A  118A  239E  120A  118A  	fcall	___wmul
   972  0717  0871               	movf	?___wmul+1,w
   973  0718  00F9               	movwf	___lwdiv@dividend+1
   974  0719  0870               	movf	?___wmul,w
   975  071A  00F8               	movwf	___lwdiv@dividend
   976  071B  120A  118A  2488  120A  118A  	fcall	___lwdiv
   977  0720  0876               	movf	?___lwdiv,w
   978  0721  3E30               	addlw	48
   979  0722  1283               	bcf	3,5	;RP0=0, select bank0
   980  0723  1303               	bcf	3,6	;RP1=0, select bank0
   981  0724  00B1               	movwf	??_main
   982  0725  0831               	movf	??_main,w
   983  0726  00A4               	movwf	_temp+4
   984  0727                     l1292:
   985                           
   986                           ;main.c: 59:             temp[5] = (((raw_temp & 0x0F) * 625) / 100) % 10 + '0';
   987  0727  300A               	movlw	10
   988  0728  00AB               	movwf	___lwmod@divisor
   989  0729  3000               	movlw	0
   990  072A  00AC               	movwf	___lwmod@divisor+1
   991  072B  3064               	movlw	100
   992  072C  00F6               	movwf	___lwdiv@divisor
   993  072D  3000               	movlw	0
   994  072E  00F7               	movwf	___lwdiv@divisor+1
   995  072F  300F               	movlw	15
   996  0730  0535               	andwf	_raw_temp,w
   997  0731  00F0               	movwf	___wmul@multiplier
   998  0732  3000               	movlw	0
   999  0733  0536               	andwf	_raw_temp+1,w
  1000  0734  00F1               	movwf	___wmul@multiplier+1
  1001  0735  3071               	movlw	113
  1002  0736  00F2               	movwf	___wmul@multiplicand
  1003  0737  3002               	movlw	2
  1004  0738  00F3               	movwf	___wmul@multiplicand+1
  1005  0739  120A  118A  239E  120A  118A  	fcall	___wmul
  1006  073E  0871               	movf	?___wmul+1,w
  1007  073F  00F9               	movwf	___lwdiv@dividend+1
  1008  0740  0870               	movf	?___wmul,w
  1009  0741  00F8               	movwf	___lwdiv@dividend
  1010  0742  120A  118A  2488  120A  118A  	fcall	___lwdiv
  1011  0747  0877               	movf	?___lwdiv+1,w
  1012  0748  1283               	bcf	3,5	;RP0=0, select bank0
  1013  0749  1303               	bcf	3,6	;RP1=0, select bank0
  1014  074A  00AE               	movwf	___lwmod@dividend+1
  1015  074B  0876               	movf	?___lwdiv,w
  1016  074C  00AD               	movwf	___lwmod@dividend
  1017  074D  120A  118A  244C  120A  118A  	fcall	___lwmod
  1018  0752  1283               	bcf	3,5	;RP0=0, select bank0
  1019  0753  1303               	bcf	3,6	;RP1=0, select bank0
  1020  0754  082B               	movf	?___lwmod,w
  1021  0755  3E30               	addlw	48
  1022  0756  00B1               	movwf	??_main
  1023  0757  0831               	movf	??_main,w
  1024  0758  00A5               	movwf	_temp+5
  1025  0759                     l1294:
  1026                           
  1027                           ;main.c: 60:             temp[6] = (((raw_temp & 0x0F) * 625) / 10) % 10 + '0';
  1028  0759  300A               	movlw	10
  1029  075A  00AB               	movwf	___lwmod@divisor
  1030  075B  3000               	movlw	0
  1031  075C  00AC               	movwf	___lwmod@divisor+1
  1032  075D  300A               	movlw	10
  1033  075E  00F6               	movwf	___lwdiv@divisor
  1034  075F  3000               	movlw	0
  1035  0760  00F7               	movwf	___lwdiv@divisor+1
  1036  0761  300F               	movlw	15
  1037  0762  0535               	andwf	_raw_temp,w
  1038  0763  00F0               	movwf	___wmul@multiplier
  1039  0764  3000               	movlw	0
  1040  0765  0536               	andwf	_raw_temp+1,w
  1041  0766  00F1               	movwf	___wmul@multiplier+1
  1042  0767  3071               	movlw	113
  1043  0768  00F2               	movwf	___wmul@multiplicand
  1044  0769  3002               	movlw	2
  1045  076A  00F3               	movwf	___wmul@multiplicand+1
  1046  076B  120A  118A  239E  120A  118A  	fcall	___wmul
  1047  0770  0871               	movf	?___wmul+1,w
  1048  0771  00F9               	movwf	___lwdiv@dividend+1
  1049  0772  0870               	movf	?___wmul,w
  1050  0773  00F8               	movwf	___lwdiv@dividend
  1051  0774  120A  118A  2488  120A  118A  	fcall	___lwdiv
  1052  0779  0877               	movf	?___lwdiv+1,w
  1053  077A  1283               	bcf	3,5	;RP0=0, select bank0
  1054  077B  1303               	bcf	3,6	;RP1=0, select bank0
  1055  077C  00AE               	movwf	___lwmod@dividend+1
  1056  077D  0876               	movf	?___lwdiv,w
  1057  077E  00AD               	movwf	___lwmod@dividend
  1058  077F  120A  118A  244C  120A  118A  	fcall	___lwmod
  1059  0784  1283               	bcf	3,5	;RP0=0, select bank0
  1060  0785  1303               	bcf	3,6	;RP1=0, select bank0
  1061  0786  082B               	movf	?___lwmod,w
  1062  0787  3E30               	addlw	48
  1063  0788  00B1               	movwf	??_main
  1064  0789  0831               	movf	??_main,w
  1065  078A  00A6               	movwf	_temp+6
  1066  078B                     l1296:
  1067                           
  1068                           ;main.c: 61:             temp[7] = ((raw_temp & 0x0F) * 625) % 10 + '0';
  1069  078B  300A               	movlw	10
  1070  078C  00AB               	movwf	___lwmod@divisor
  1071  078D  3000               	movlw	0
  1072  078E  00AC               	movwf	___lwmod@divisor+1
  1073  078F  300F               	movlw	15
  1074  0790  0535               	andwf	_raw_temp,w
  1075  0791  00F0               	movwf	___wmul@multiplier
  1076  0792  3000               	movlw	0
  1077  0793  0536               	andwf	_raw_temp+1,w
  1078  0794  00F1               	movwf	___wmul@multiplier+1
  1079  0795  3071               	movlw	113
  1080  0796  00F2               	movwf	___wmul@multiplicand
  1081  0797  3002               	movlw	2
  1082  0798  00F3               	movwf	___wmul@multiplicand+1
  1083  0799  120A  118A  239E  120A  118A  	fcall	___wmul
  1084  079E  0871               	movf	?___wmul+1,w
  1085  079F  1283               	bcf	3,5	;RP0=0, select bank0
  1086  07A0  1303               	bcf	3,6	;RP1=0, select bank0
  1087  07A1  00AE               	movwf	___lwmod@dividend+1
  1088  07A2  0870               	movf	?___wmul,w
  1089  07A3  00AD               	movwf	___lwmod@dividend
  1090  07A4  120A  118A  244C  120A  118A  	fcall	___lwmod
  1091  07A9  1283               	bcf	3,5	;RP0=0, select bank0
  1092  07AA  1303               	bcf	3,6	;RP1=0, select bank0
  1093  07AB  082B               	movf	?___lwmod,w
  1094  07AC  3E30               	addlw	48
  1095  07AD  00B1               	movwf	??_main
  1096  07AE  0831               	movf	??_main,w
  1097  07AF  00A7               	movwf	_temp+7
  1098  07B0                     l1298:
  1099                           
  1100                           ;main.c: 63:             LCD_goTo(4, 2);
  1101  07B0  3002               	movlw	2
  1102  07B1  00B1               	movwf	??_main
  1103  07B2  0831               	movf	??_main,w
  1104  07B3  00F5               	movwf	LCD_goTo@row
  1105  07B4  3004               	movlw	4
  1106  07B5  120A  118A  2416  120A  118A  	fcall	_LCD_goTo
  1107  07BA                     l1300:
  1108                           
  1109                           ;main.c: 64:             LCD_print(temp);
  1110  07BA  3020               	movlw	(low (_temp| 0))& (0+255)
  1111  07BB  00F2               	movwf	LCD_print@LCD_Str
  1112  07BC  3000               	movlw	0
  1113  07BD  00F3               	movwf	LCD_print@LCD_Str+1
  1114  07BE  120A  118A  24CC  120A  118A  	fcall	_LCD_print
  1115                           
  1116                           ;main.c: 65:         }
  1117  07C3  2FD9               	goto	l1306
  1118  07C4                     l1302:
  1119                           
  1120                           ;main.c: 67:             LCD_goTo(4, 2);
  1121  07C4  3002               	movlw	2
  1122  07C5  1283               	bcf	3,5	;RP0=0, select bank0
  1123  07C6  1303               	bcf	3,6	;RP1=0, select bank0
  1124  07C7  00B1               	movwf	??_main
  1125  07C8  0831               	movf	??_main,w
  1126  07C9  00F5               	movwf	LCD_goTo@row
  1127  07CA  3004               	movlw	4
  1128  07CB  120A  118A  2416  120A  118A  	fcall	_LCD_goTo
  1129  07D0                     l1304:
  1130                           
  1131                           ;main.c: 68:             LCD_print("  Error!  ");
  1132  07D0  300E               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1133  07D1  00F2               	movwf	LCD_print@LCD_Str
  1134  07D2  3080               	movlw	128
  1135  07D3  00F3               	movwf	LCD_print@LCD_Str+1
  1136  07D4  120A  118A  24CC  120A  118A  	fcall	_LCD_print
  1137  07D9                     l1306:
  1138                           
  1139                           ;main.c: 71:         _delay((unsigned long)((1000)*(8000000/4000.0)));
  1140  07D9  300B               	movlw	11
  1141  07DA  1283               	bcf	3,5	;RP0=0, select bank0
  1142  07DB  1303               	bcf	3,6	;RP1=0, select bank0
  1143  07DC  00B3               	movwf	??_main+2
  1144  07DD  3026               	movlw	38
  1145  07DE  00B2               	movwf	??_main+1
  1146  07DF  305D               	movlw	93
  1147  07E0  00B1               	movwf	??_main
  1148  07E1                     u1067:
  1149  07E1  0BB1               	decfsz	??_main,f
  1150  07E2  2FE1               	goto	u1067
  1151  07E3  0BB2               	decfsz	??_main+1,f
  1152  07E4  2FE1               	goto	u1067
  1153  07E5  0BB3               	decfsz	??_main+2,f
  1154  07E6  2FE1               	goto	u1067
  1155  07E7  2E8C               	goto	l1272
  1156  07E8  120A  118A  2800   	ljmp	start
  1157  07EB                     __end_of_main:
  1158                           
  1159                           	psect	text1
  1160  0515                     __ptext1:	
  1161 ;; *************** function _ds18b20_read *****************
  1162 ;; Defined at:
  1163 ;;		line 75 in file "PIC_18DSB20.c"
  1164 ;; Parameters:    Size  Location     Type
  1165 ;;  raw_temp_val    1    wreg     PTR unsigned int 
  1166 ;;		 -> raw_temp(2), 
  1167 ;; Auto vars:     Size  Location     Type
  1168 ;;  raw_temp_val    1    7[COMMON] PTR unsigned int 
  1169 ;;		 -> raw_temp(2), 
  1170 ;; Return value:  Size  Location     Type
  1171 ;;		None               void
  1172 ;; Registers used:
  1173 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1174 ;; Tracked objects:
  1175 ;;		On entry : 0/0
  1176 ;;		On exit  : 0/0
  1177 ;;		Unchanged: 0/0
  1178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1179 ;;      Params:         0       0       0       0       0
  1180 ;;      Locals:         1       0       0       0       0
  1181 ;;      Temps:          2       0       0       0       0
  1182 ;;      Totals:         3       0       0       0       0
  1183 ;;Total ram usage:        3 bytes
  1184 ;; Hardware stack levels used:    1
  1185 ;; Hardware stack levels required when called:    2
  1186 ;; This function calls:
  1187 ;;		_ds18b20_read_byte
  1188 ;;		_ds18b20_start
  1189 ;;		_ds18b20_write_byte
  1190 ;; This function is called by:
  1191 ;;		_main
  1192 ;; This function uses a non-reentrant model
  1193 ;;
  1194                           
  1195                           
  1196                           ;psect for function _ds18b20_read
  1197  0515                     _ds18b20_read:
  1198                           
  1199                           ;incstack = 0
  1200                           ; Regs used in _ds18b20_read: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1201                           ;ds18b20_read@raw_temp_value stored from wreg
  1202  0515  00F7               	movwf	ds18b20_read@raw_temp_value
  1203  0516                     l1172:
  1204                           
  1205                           ;PIC_18DSB20.c: 75: __bit ds18b20_read(uint16_t *raw_temp_value);PIC_18DSB20.c: 76: {;PI
      +                          C_18DSB20.c: 77:   if (!ds18b20_start())
  1206  0516  120A  118A  23C3  120A  118A  	fcall	_ds18b20_start
  1207  051B  1803               	btfsc	3,0
  1208  051C  2D1E               	goto	u801
  1209  051D  2D1F               	goto	u800
  1210  051E                     u801:
  1211  051E  2D21               	goto	l1178
  1212  051F                     u800:
  1213  051F                     l1174:
  1214                           
  1215                           ;PIC_18DSB20.c: 78:     return 0;
  1216  051F  1003               	clrc
  1217  0520  2D6F               	goto	l124
  1218  0521                     l1178:
  1219                           
  1220                           ;PIC_18DSB20.c: 80:   ds18b20_write_byte(0xCC);
  1221  0521  30CC               	movlw	204
  1222  0522  120A  118A  231F  120A  118A  	fcall	_ds18b20_write_byte
  1223                           
  1224                           ;PIC_18DSB20.c: 81:   ds18b20_write_byte(0x44);
  1225  0527  3044               	movlw	68
  1226  0528  120A  118A  231F  120A  118A  	fcall	_ds18b20_write_byte
  1227  052D                     l1180:	
  1228                           ;PIC_18DSB20.c: 83:   while(ds18b20_read_byte() == 0);
  1229                           
  1230  052D  120A  118A  2358  120A  118A  	fcall	_ds18b20_read_byte
  1231  0532  3A00               	xorlw	0
  1232  0533  1903               	skipnz
  1233  0534  2D36               	goto	u811
  1234  0535  2D37               	goto	u810
  1235  0536                     u811:
  1236  0536  2D2D               	goto	l1180
  1237  0537                     u810:
  1238  0537                     l1182:
  1239                           
  1240                           ;PIC_18DSB20.c: 85:   if (!ds18b20_start())
  1241  0537  120A  118A  23C3  120A  118A  	fcall	_ds18b20_start
  1242  053C  1803               	btfsc	3,0
  1243  053D  2D3F               	goto	u821
  1244  053E  2D40               	goto	u820
  1245  053F                     u821:
  1246  053F  2D41               	goto	l1188
  1247  0540                     u820:
  1248  0540  2D1F               	goto	l1174
  1249  0541                     l1188:
  1250                           
  1251                           ;PIC_18DSB20.c: 88:   ds18b20_write_byte(0xCC);
  1252  0541  30CC               	movlw	204
  1253  0542  120A  118A  231F  120A  118A  	fcall	_ds18b20_write_byte
  1254                           
  1255                           ;PIC_18DSB20.c: 89:   ds18b20_write_byte(0xBE);
  1256  0547  30BE               	movlw	190
  1257  0548  120A  118A  231F  120A  118A  	fcall	_ds18b20_write_byte
  1258  054D                     l1190:
  1259                           
  1260                           ;PIC_18DSB20.c: 92:   *raw_temp_value = ds18b20_read_byte();
  1261  054D  120A  118A  2358  120A  118A  	fcall	_ds18b20_read_byte
  1262  0552  00F5               	movwf	??_ds18b20_read
  1263  0553  01F6               	clrf	??_ds18b20_read+1
  1264  0554  0877               	movf	ds18b20_read@raw_temp_value,w
  1265  0555  0084               	movwf	4
  1266  0556  0875               	movf	??_ds18b20_read,w
  1267  0557  1383               	bcf	3,7	;select IRP bank0
  1268  0558  0080               	movwf	0
  1269  0559  0A84               	incf	4,f
  1270  055A  0876               	movf	??_ds18b20_read+1,w
  1271  055B  0080               	movwf	0
  1272  055C                     l1192:
  1273                           
  1274                           ;PIC_18DSB20.c: 94:   *raw_temp_value |= (uint16_t)(ds18b20_read_byte() << 8);
  1275  055C  120A  118A  2358  120A  118A  	fcall	_ds18b20_read_byte
  1276  0561  00F5               	movwf	??_ds18b20_read
  1277  0562  01F6               	clrf	??_ds18b20_read+1
  1278  0563  0875               	movf	??_ds18b20_read,w
  1279  0564  00F6               	movwf	??_ds18b20_read+1
  1280  0565  01F5               	clrf	??_ds18b20_read
  1281  0566  0877               	movf	ds18b20_read@raw_temp_value,w
  1282  0567  0084               	movwf	4
  1283  0568  0875               	movf	??_ds18b20_read,w
  1284  0569  1383               	bcf	3,7	;select IRP bank0
  1285  056A  0480               	iorwf	0,f
  1286  056B  0A84               	incf	4,f
  1287  056C  0876               	movf	??_ds18b20_read+1,w
  1288  056D  0480               	iorwf	0,f
  1289  056E                     l1194:
  1290                           
  1291                           ;PIC_18DSB20.c: 96:   return 1;
  1292  056E  1403               	setc
  1293  056F                     l124:
  1294  056F  0008               	return
  1295  0570                     __end_of_ds18b20_read:
  1296                           
  1297                           	psect	text2
  1298  031F                     __ptext2:	
  1299 ;; *************** function _ds18b20_write_byte *****************
  1300 ;; Defined at:
  1301 ;;		line 42 in file "PIC_18DSB20.c"
  1302 ;; Parameters:    Size  Location     Type
  1303 ;;  value           1    wreg     unsigned char 
  1304 ;; Auto vars:     Size  Location     Type
  1305 ;;  value           1    3[COMMON] unsigned char 
  1306 ;;  i               1    4[COMMON] unsigned char 
  1307 ;; Return value:  Size  Location     Type
  1308 ;;                  1    wreg      void 
  1309 ;; Registers used:
  1310 ;;		wreg, status,2, status,0, pclath, cstack
  1311 ;; Tracked objects:
  1312 ;;		On entry : 0/0
  1313 ;;		On exit  : 0/0
  1314 ;;		Unchanged: 0/0
  1315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1316 ;;      Params:         0       0       0       0       0
  1317 ;;      Locals:         2       0       0       0       0
  1318 ;;      Temps:          1       0       0       0       0
  1319 ;;      Totals:         3       0       0       0       0
  1320 ;;Total ram usage:        3 bytes
  1321 ;; Hardware stack levels used:    1
  1322 ;; Hardware stack levels required when called:    1
  1323 ;; This function calls:
  1324 ;;		_ds18b20_write_bit
  1325 ;; This function is called by:
  1326 ;;		_ds18b20_read
  1327 ;; This function uses a non-reentrant model
  1328 ;;
  1329                           
  1330                           
  1331                           ;psect for function _ds18b20_write_byte
  1332  031F                     _ds18b20_write_byte:
  1333                           
  1334                           ;incstack = 0
  1335                           ; Regs used in _ds18b20_write_byte: [wreg+status,2+status,0+pclath+cstack]
  1336                           ;ds18b20_write_byte@value stored from wreg
  1337  031F  00F3               	movwf	ds18b20_write_byte@value
  1338  0320                     l1092:
  1339                           
  1340                           ;PIC_18DSB20.c: 42: void ds18b20_write_byte(uint8_t value);PIC_18DSB20.c: 43: {;PIC_18DS
      +                          B20.c: 44:   for(uint8_t i = 0; i < 8; i++)
  1341  0320  01F4               	clrf	ds18b20_write_byte@i
  1342  0321                     l1098:
  1343                           
  1344                           ;PIC_18DSB20.c: 45:     ds18b20_write_bit(value >> i);
  1345  0321  0873               	movf	ds18b20_write_byte@value,w
  1346  0322  00F2               	movwf	??_ds18b20_write_byte
  1347  0323  0A74               	incf	ds18b20_write_byte@i,w
  1348  0324  2B27               	goto	u744
  1349  0325                     u745:
  1350  0325  1003               	clrc
  1351  0326  0CF2               	rrf	??_ds18b20_write_byte,f
  1352  0327                     u744:
  1353  0327  3EFF               	addlw	-1
  1354  0328  1D03               	skipz
  1355  0329  2B25               	goto	u745
  1356  032A  0872               	movf	??_ds18b20_write_byte,w
  1357  032B  120A  118A  233B  120A  118A  	fcall	_ds18b20_write_bit
  1358  0330                     l1100:
  1359  0330  3001               	movlw	1
  1360  0331  00F2               	movwf	??_ds18b20_write_byte
  1361  0332  0872               	movf	??_ds18b20_write_byte,w
  1362  0333  07F4               	addwf	ds18b20_write_byte@i,f
  1363  0334                     l1102:
  1364  0334  3008               	movlw	8
  1365  0335  0274               	subwf	ds18b20_write_byte@i,w
  1366  0336  1C03               	skipc
  1367  0337  2B39               	goto	u751
  1368  0338  2B3A               	goto	u750
  1369  0339                     u751:
  1370  0339  2B21               	goto	l1098
  1371  033A                     u750:
  1372  033A                     l106:
  1373  033A  0008               	return
  1374  033B                     __end_of_ds18b20_write_byte:
  1375                           
  1376                           	psect	text3
  1377  033B                     __ptext3:	
  1378 ;; *************** function _ds18b20_write_bit *****************
  1379 ;; Defined at:
  1380 ;;		line 29 in file "PIC_18DSB20.c"
  1381 ;; Parameters:    Size  Location     Type
  1382 ;;  value           1    wreg     unsigned char 
  1383 ;; Auto vars:     Size  Location     Type
  1384 ;;  value           1    1[COMMON] unsigned char 
  1385 ;; Return value:  Size  Location     Type
  1386 ;;                  1    wreg      void 
  1387 ;; Registers used:
  1388 ;;		wreg
  1389 ;; Tracked objects:
  1390 ;;		On entry : 0/0
  1391 ;;		On exit  : 0/0
  1392 ;;		Unchanged: 0/0
  1393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1394 ;;      Params:         0       0       0       0       0
  1395 ;;      Locals:         1       0       0       0       0
  1396 ;;      Temps:          1       0       0       0       0
  1397 ;;      Totals:         2       0       0       0       0
  1398 ;;Total ram usage:        2 bytes
  1399 ;; Hardware stack levels used:    1
  1400 ;; This function calls:
  1401 ;;		Nothing
  1402 ;; This function is called by:
  1403 ;;		_ds18b20_write_byte
  1404 ;; This function uses a non-reentrant model
  1405 ;;
  1406                           
  1407                           
  1408                           ;psect for function _ds18b20_write_bit
  1409  033B                     _ds18b20_write_bit:
  1410                           
  1411                           ;incstack = 0
  1412                           ; Regs used in _ds18b20_write_bit: [wreg]
  1413                           ;ds18b20_write_bit@value stored from wreg
  1414  033B  00F1               	movwf	ds18b20_write_bit@value
  1415  033C                     l1042:
  1416                           
  1417                           ;PIC_18DSB20.c: 29: void ds18b20_write_bit(uint8_t value);PIC_18DSB20.c: 30: {;PIC_18DSB
      +                          20.c: 31:   RB1 = 0;
  1418  033C  1283               	bcf	3,5	;RP0=0, select bank0
  1419  033D  1303               	bcf	3,6	;RP1=0, select bank0
  1420  033E  1086               	bcf	6,1	;volatile
  1421                           
  1422                           ;PIC_18DSB20.c: 32:   TRISB1 = 0;
  1423  033F  1683               	bsf	3,5	;RP0=1, select bank1
  1424  0340  1303               	bcf	3,6	;RP1=0, select bank1
  1425  0341  1086               	bcf	6,1	;volatile
  1426                           
  1427                           ;PIC_18DSB20.c: 33:   _delay((unsigned long)((2)*(8000000/4000000.0)));
  1428  0342  2B43               	nop2	;2 cycle nop
  1429  0343  2B44               	nop2	;2 cycle nop
  1430                           
  1431                           ;PIC_18DSB20.c: 35:   RB1 = (__bit)value;
  1432  0344  1871               	btfsc	ds18b20_write_bit@value,0
  1433  0345  2B47               	goto	u661
  1434  0346  2B4B               	goto	u660
  1435  0347                     u661:
  1436  0347  1283               	bcf	3,5	;RP0=0, select bank0
  1437  0348  1303               	bcf	3,6	;RP1=0, select bank0
  1438  0349  1486               	bsf	6,1	;volatile
  1439  034A  2B4E               	goto	u674
  1440  034B                     u660:
  1441  034B  1283               	bcf	3,5	;RP0=0, select bank0
  1442  034C  1303               	bcf	3,6	;RP1=0, select bank0
  1443  034D  1086               	bcf	6,1	;volatile
  1444  034E                     u674:
  1445  034E                     l1044:
  1446                           
  1447                           ;PIC_18DSB20.c: 36:   _delay((unsigned long)((80)*(8000000/4000000.0)));
  1448  034E  3035               	movlw	53
  1449  034F  00F0               	movwf	??_ds18b20_write_bit
  1450  0350                     u1077:
  1451  0350  0BF0               	decfsz	??_ds18b20_write_bit,f
  1452  0351  2B50               	goto	u1077
  1453  0352                     l1046:
  1454                           
  1455                           ;PIC_18DSB20.c: 38:   TRISB1 = 1;
  1456  0352  1683               	bsf	3,5	;RP0=1, select bank1
  1457  0353  1303               	bcf	3,6	;RP1=0, select bank1
  1458  0354  1486               	bsf	6,1	;volatile
  1459  0355                     l1048:
  1460                           
  1461                           ;PIC_18DSB20.c: 39:   _delay((unsigned long)((2)*(8000000/4000000.0)));
  1462  0355  2B56               	nop2	;2 cycle nop
  1463  0356  2B57               	nop2	;2 cycle nop
  1464  0357                     l101:
  1465  0357  0008               	return
  1466  0358                     __end_of_ds18b20_write_bit:
  1467                           
  1468                           	psect	text4
  1469  03C3                     __ptext4:	
  1470 ;; *************** function _ds18b20_start *****************
  1471 ;; Defined at:
  1472 ;;		line 11 in file "PIC_18DSB20.c"
  1473 ;; Parameters:    Size  Location     Type
  1474 ;;		None
  1475 ;; Auto vars:     Size  Location     Type
  1476 ;;		None
  1477 ;; Return value:  Size  Location     Type
  1478 ;;		None               void
  1479 ;; Registers used:
  1480 ;;		wreg, status,2, status,0
  1481 ;; Tracked objects:
  1482 ;;		On entry : 0/0
  1483 ;;		On exit  : 0/0
  1484 ;;		Unchanged: 0/0
  1485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1486 ;;      Params:         0       0       0       0       0
  1487 ;;      Locals:         0       0       0       0       0
  1488 ;;      Temps:          1       0       0       0       0
  1489 ;;      Totals:         1       0       0       0       0
  1490 ;;Total ram usage:        1 bytes
  1491 ;; Hardware stack levels used:    1
  1492 ;; This function calls:
  1493 ;;		Nothing
  1494 ;; This function is called by:
  1495 ;;		_ds18b20_read
  1496 ;; This function uses a non-reentrant model
  1497 ;;
  1498                           
  1499                           
  1500                           ;psect for function _ds18b20_start
  1501  03C3                     _ds18b20_start:
  1502  03C3                     l1074:	
  1503                           ;incstack = 0
  1504                           ; Regs used in _ds18b20_start: [wreg+status,2+status,0]
  1505                           
  1506                           
  1507                           ;PIC_18DSB20.c: 13:   RB1 = 0;
  1508  03C3  1283               	bcf	3,5	;RP0=0, select bank0
  1509  03C4  1303               	bcf	3,6	;RP1=0, select bank0
  1510  03C5  1086               	bcf	6,1	;volatile
  1511                           
  1512                           ;PIC_18DSB20.c: 14:   TRISB1 = 0;
  1513  03C6  1683               	bsf	3,5	;RP0=1, select bank1
  1514  03C7  1303               	bcf	3,6	;RP1=0, select bank1
  1515  03C8  1086               	bcf	6,1	;volatile
  1516  03C9                     l1076:
  1517                           
  1518                           ;PIC_18DSB20.c: 15:   _delay((unsigned long)((500)*(8000000/4000000.0)));
  1519  03C9  30C7               	movlw	199
  1520  03CA  00F0               	movwf	??_ds18b20_start
  1521  03CB                     u1087:
  1522  03CB  2BCC               	nop2
  1523  03CC  0BF0               	decfsz	??_ds18b20_start,f
  1524  03CD  2BCB               	goto	u1087
  1525  03CE  2BCF               	nop2
  1526  03CF  2BD0               	nop2
  1527  03D0                     l1078:
  1528                           
  1529                           ;PIC_18DSB20.c: 17:   TRISB1 = 1;
  1530  03D0  1683               	bsf	3,5	;RP0=1, select bank1
  1531  03D1  1303               	bcf	3,6	;RP1=0, select bank1
  1532  03D2  1486               	bsf	6,1	;volatile
  1533                           
  1534                           ;PIC_18DSB20.c: 18:   _delay((unsigned long)((100)*(8000000/4000000.0)));
  1535  03D3  3042               	movlw	66
  1536  03D4  00F0               	movwf	??_ds18b20_start
  1537  03D5                     u1097:
  1538  03D5  0BF0               	decfsz	??_ds18b20_start,f
  1539  03D6  2BD5               	goto	u1097
  1540  03D7  0000               	nop
  1541  03D8                     l1080:
  1542                           
  1543                           ;PIC_18DSB20.c: 20:   if (!RB1)
  1544  03D8  1283               	bcf	3,5	;RP0=0, select bank0
  1545  03D9  1303               	bcf	3,6	;RP1=0, select bank0
  1546  03DA  1886               	btfsc	6,1	;volatile
  1547  03DB  2BDD               	goto	u731
  1548  03DC  2BDE               	goto	u730
  1549  03DD                     u731:
  1550  03DD  2BE7               	goto	l1088
  1551  03DE                     u730:
  1552  03DE                     l1082:
  1553                           
  1554                           ;PIC_18DSB20.c: 21:   {;PIC_18DSB20.c: 22:     _delay((unsigned long)((400)*(8000000/400
      +                          0000.0)));
  1555  03DE  309F               	movlw	159
  1556  03DF  00F0               	movwf	??_ds18b20_start
  1557  03E0                     u1107:
  1558  03E0  2BE1               	nop2
  1559  03E1  0BF0               	decfsz	??_ds18b20_start,f
  1560  03E2  2BE0               	goto	u1107
  1561  03E3  2BE4               	nop2
  1562  03E4  2BE5               	nop2
  1563  03E5                     l1084:
  1564                           
  1565                           ;PIC_18DSB20.c: 23:     return 1;
  1566  03E5  1403               	setc
  1567  03E6  2BE8               	goto	l98
  1568  03E7                     l1088:
  1569                           
  1570                           ;PIC_18DSB20.c: 26:   return 0;
  1571  03E7  1003               	clrc
  1572  03E8                     l98:
  1573  03E8  0008               	return
  1574  03E9                     __end_of_ds18b20_start:
  1575                           
  1576                           	psect	text5
  1577  0358                     __ptext5:	
  1578 ;; *************** function _ds18b20_read_byte *****************
  1579 ;; Defined at:
  1580 ;;		line 65 in file "PIC_18DSB20.c"
  1581 ;; Parameters:    Size  Location     Type
  1582 ;;		None
  1583 ;; Auto vars:     Size  Location     Type
  1584 ;;  i               1    4[COMMON] unsigned char 
  1585 ;;  value           1    3[COMMON] unsigned char 
  1586 ;; Return value:  Size  Location     Type
  1587 ;;                  1    wreg      unsigned char 
  1588 ;; Registers used:
  1589 ;;		wreg, status,2, status,0, pclath, cstack
  1590 ;; Tracked objects:
  1591 ;;		On entry : 0/0
  1592 ;;		On exit  : 0/0
  1593 ;;		Unchanged: 0/0
  1594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1595 ;;      Params:         0       0       0       0       0
  1596 ;;      Locals:         2       0       0       0       0
  1597 ;;      Temps:          2       0       0       0       0
  1598 ;;      Totals:         4       0       0       0       0
  1599 ;;Total ram usage:        4 bytes
  1600 ;; Hardware stack levels used:    1
  1601 ;; Hardware stack levels required when called:    1
  1602 ;; This function calls:
  1603 ;;		_ds18b20_read_bit
  1604 ;; This function is called by:
  1605 ;;		_ds18b20_read
  1606 ;; This function uses a non-reentrant model
  1607 ;;
  1608                           
  1609                           
  1610                           ;psect for function _ds18b20_read_byte
  1611  0358                     _ds18b20_read_byte:
  1612  0358                     l1104:	
  1613                           ;incstack = 0
  1614                           ; Regs used in _ds18b20_read_byte: [wreg+status,2+status,0+pclath+cstack]
  1615                           
  1616                           
  1617                           ;PIC_18DSB20.c: 67:   uint8_t value = 0;
  1618  0358  01F3               	clrf	ds18b20_read_byte@value
  1619                           
  1620                           ;PIC_18DSB20.c: 69:   for(uint8_t i = 0; i < 8; i++)
  1621  0359  01F4               	clrf	ds18b20_read_byte@i
  1622  035A                     l1110:
  1623                           
  1624                           ;PIC_18DSB20.c: 70:     value |= ds18b20_read_bit() << i;
  1625  035A  120A  118A  237A  120A  118A  	fcall	_ds18b20_read_bit
  1626  035F  3000               	movlw	0
  1627  0360  1803               	skipnc
  1628  0361  3001               	movlw	1
  1629  0362  00F1               	movwf	??_ds18b20_read_byte
  1630  0363  0A74               	incf	ds18b20_read_byte@i,w
  1631  0364  2B67               	goto	u764
  1632  0365                     u765:
  1633  0365  1003               	clrc
  1634  0366  0DF1               	rlf	??_ds18b20_read_byte,f
  1635  0367                     u764:
  1636  0367  3EFF               	addlw	-1
  1637  0368  1D03               	skipz
  1638  0369  2B65               	goto	u765
  1639  036A  0871               	movf	??_ds18b20_read_byte,w
  1640  036B  00F2               	movwf	??_ds18b20_read_byte+1
  1641  036C  0872               	movf	??_ds18b20_read_byte+1,w
  1642  036D  04F3               	iorwf	ds18b20_read_byte@value,f
  1643  036E                     l1112:
  1644  036E  3001               	movlw	1
  1645  036F  00F1               	movwf	??_ds18b20_read_byte
  1646  0370  0871               	movf	??_ds18b20_read_byte,w
  1647  0371  07F4               	addwf	ds18b20_read_byte@i,f
  1648  0372                     l1114:
  1649  0372  3008               	movlw	8
  1650  0373  0274               	subwf	ds18b20_read_byte@i,w
  1651  0374  1C03               	skipc
  1652  0375  2B77               	goto	u771
  1653  0376  2B78               	goto	u770
  1654  0377                     u771:
  1655  0377  2B5A               	goto	l1110
  1656  0378                     u770:
  1657  0378                     l1116:
  1658                           
  1659                           ;PIC_18DSB20.c: 72:   return value;
  1660  0378  0873               	movf	ds18b20_read_byte@value,w
  1661  0379                     l120:
  1662  0379  0008               	return
  1663  037A                     __end_of_ds18b20_read_byte:
  1664                           
  1665                           	psect	text6
  1666  037A                     __ptext6:	
  1667 ;; *************** function _ds18b20_read_bit *****************
  1668 ;; Defined at:
  1669 ;;		line 48 in file "PIC_18DSB20.c"
  1670 ;; Parameters:    Size  Location     Type
  1671 ;;		None
  1672 ;; Auto vars:     Size  Location     Type
  1673 ;;		None
  1674 ;; Return value:  Size  Location     Type
  1675 ;;		None               void
  1676 ;; Registers used:
  1677 ;;		wreg, status,2, status,0
  1678 ;; Tracked objects:
  1679 ;;		On entry : 0/0
  1680 ;;		On exit  : 0/0
  1681 ;;		Unchanged: 0/0
  1682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1683 ;;      Params:         0       0       0       0       0
  1684 ;;      Locals:         0       0       0       0       0
  1685 ;;      Temps:          1       0       0       0       0
  1686 ;;      Totals:         1       0       0       0       0
  1687 ;;Total ram usage:        1 bytes
  1688 ;; Hardware stack levels used:    1
  1689 ;; This function calls:
  1690 ;;		Nothing
  1691 ;; This function is called by:
  1692 ;;		_ds18b20_read_byte
  1693 ;; This function uses a non-reentrant model
  1694 ;;
  1695                           
  1696                           
  1697                           ;psect for function _ds18b20_read_bit
  1698  037A                     _ds18b20_read_bit:
  1699  037A                     l1050:	
  1700                           ;incstack = 0
  1701                           ; Regs used in _ds18b20_read_bit: [wreg+status,2+status,0]
  1702                           
  1703                           
  1704                           ;PIC_18DSB20.c: 50:   static __bit value;;PIC_18DSB20.c: 52:   RB1 = 0;
  1705  037A  1283               	bcf	3,5	;RP0=0, select bank0
  1706  037B  1303               	bcf	3,6	;RP1=0, select bank0
  1707  037C  1086               	bcf	6,1	;volatile
  1708                           
  1709                           ;PIC_18DSB20.c: 53:   TRISB1 = 0;
  1710  037D  1683               	bsf	3,5	;RP0=1, select bank1
  1711  037E  1303               	bcf	3,6	;RP1=0, select bank1
  1712  037F  1086               	bcf	6,1	;volatile
  1713                           
  1714                           ;PIC_18DSB20.c: 54:   _delay((unsigned long)((2)*(8000000/4000000.0)));
  1715  0380  2B81               	nop2	;2 cycle nop
  1716  0381  2B82               	nop2	;2 cycle nop
  1717                           
  1718                           ;PIC_18DSB20.c: 56:   TRISB1 = 1;
  1719  0382  1683               	bsf	3,5	;RP0=1, select bank1
  1720  0383  1303               	bcf	3,6	;RP1=0, select bank1
  1721  0384  1486               	bsf	6,1	;volatile
  1722  0385                     l1052:
  1723                           
  1724                           ;PIC_18DSB20.c: 57:   _delay((unsigned long)((5)*(8000000/4000000.0)));
  1725  0385  3003               	movlw	3
  1726  0386  00F0               	movwf	??_ds18b20_read_bit
  1727  0387                     u1117:
  1728  0387  0BF0               	decfsz	??_ds18b20_read_bit,f
  1729  0388  2B87               	goto	u1117
  1730  0389                     l1054:
  1731                           
  1732                           ;PIC_18DSB20.c: 59:   value = RB1;
  1733  0389  1283               	bcf	3,5	;RP0=0, select bank0
  1734  038A  1303               	bcf	3,6	;RP1=0, select bank0
  1735  038B  1034               	bcf	ds18b20_read_bit@value/(0+8),ds18b20_read_bit@value& (0+7)
  1736  038C  1C86               	btfss	6,1	;volatile
  1737  038D  2B8F               	goto	u685
  1738  038E  1434               	bsf	ds18b20_read_bit@value/(0+8),ds18b20_read_bit@value& (0+7)
  1739  038F                     u685:
  1740                           
  1741                           ;PIC_18DSB20.c: 60:   _delay((unsigned long)((100)*(8000000/4000000.0)));
  1742  038F  3042               	movlw	66
  1743  0390  00F0               	movwf	??_ds18b20_read_bit
  1744  0391                     u1127:
  1745  0391  0BF0               	decfsz	??_ds18b20_read_bit,f
  1746  0392  2B91               	goto	u1127
  1747  0393  0000               	nop
  1748  0394                     l1056:
  1749                           
  1750                           ;PIC_18DSB20.c: 62:   return value;
  1751  0394  1283               	bcf	3,5	;RP0=0, select bank0
  1752  0395  1303               	bcf	3,6	;RP1=0, select bank0
  1753  0396  1834               	btfsc	ds18b20_read_bit@value/(0+8),ds18b20_read_bit@value& (0+7)
  1754  0397  2B99               	goto	u691
  1755  0398  2B9A               	goto	u690
  1756  0399                     u691:
  1757  0399  2B9C               	goto	l1060
  1758  039A                     u690:
  1759  039A                     l1058:
  1760  039A  1003               	clrc
  1761  039B  2B9D               	goto	l115
  1762  039C                     l1060:
  1763  039C  1403               	setc
  1764  039D                     l115:
  1765  039D  0008               	return
  1766  039E                     __end_of_ds18b20_read_bit:
  1767                           
  1768                           	psect	text7
  1769  039E                     __ptext7:	
  1770 ;; *************** function ___wmul *****************
  1771 ;; Defined at:
  1772 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  1773 ;; Parameters:    Size  Location     Type
  1774 ;;  multiplier      2    0[COMMON] unsigned int 
  1775 ;;  multiplicand    2    2[COMMON] unsigned int 
  1776 ;; Auto vars:     Size  Location     Type
  1777 ;;  product         2    4[COMMON] unsigned int 
  1778 ;; Return value:  Size  Location     Type
  1779 ;;                  2    0[COMMON] unsigned int 
  1780 ;; Registers used:
  1781 ;;		wreg, status,2, status,0
  1782 ;; Tracked objects:
  1783 ;;		On entry : 0/0
  1784 ;;		On exit  : 0/0
  1785 ;;		Unchanged: 0/0
  1786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1787 ;;      Params:         4       0       0       0       0
  1788 ;;      Locals:         2       0       0       0       0
  1789 ;;      Temps:          0       0       0       0       0
  1790 ;;      Totals:         6       0       0       0       0
  1791 ;;Total ram usage:        6 bytes
  1792 ;; Hardware stack levels used:    1
  1793 ;; This function calls:
  1794 ;;		Nothing
  1795 ;; This function is called by:
  1796 ;;		_main
  1797 ;; This function uses a non-reentrant model
  1798 ;;
  1799                           
  1800                           
  1801                           ;psect for function ___wmul
  1802  039E                     ___wmul:
  1803  039E                     l1198:	
  1804                           ;incstack = 0
  1805                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1806                           
  1807  039E  01F4               	clrf	___wmul@product
  1808  039F  01F5               	clrf	___wmul@product+1
  1809  03A0                     l1200:
  1810  03A0  1C70               	btfss	___wmul@multiplier,0
  1811  03A1  2BA3               	goto	u831
  1812  03A2  2BA4               	goto	u830
  1813  03A3                     u831:
  1814  03A3  2BAA               	goto	l214
  1815  03A4                     u830:
  1816  03A4                     l1202:
  1817  03A4  0872               	movf	___wmul@multiplicand,w
  1818  03A5  07F4               	addwf	___wmul@product,f
  1819  03A6  1803               	skipnc
  1820  03A7  0AF5               	incf	___wmul@product+1,f
  1821  03A8  0873               	movf	___wmul@multiplicand+1,w
  1822  03A9  07F5               	addwf	___wmul@product+1,f
  1823  03AA                     l214:
  1824  03AA  3001               	movlw	1
  1825  03AB                     u845:
  1826  03AB  1003               	clrc
  1827  03AC  0DF2               	rlf	___wmul@multiplicand,f
  1828  03AD  0DF3               	rlf	___wmul@multiplicand+1,f
  1829  03AE  3EFF               	addlw	-1
  1830  03AF  1D03               	skipz
  1831  03B0  2BAB               	goto	u845
  1832  03B1                     l1204:
  1833  03B1  3001               	movlw	1
  1834  03B2                     u855:
  1835  03B2  1003               	clrc
  1836  03B3  0CF1               	rrf	___wmul@multiplier+1,f
  1837  03B4  0CF0               	rrf	___wmul@multiplier,f
  1838  03B5  3EFF               	addlw	-1
  1839  03B6  1D03               	skipz
  1840  03B7  2BB2               	goto	u855
  1841  03B8                     l1206:
  1842  03B8  0870               	movf	___wmul@multiplier,w
  1843  03B9  0471               	iorwf	___wmul@multiplier+1,w
  1844  03BA  1D03               	btfss	3,2
  1845  03BB  2BBD               	goto	u861
  1846  03BC  2BBE               	goto	u860
  1847  03BD                     u861:
  1848  03BD  2BA0               	goto	l1200
  1849  03BE                     u860:
  1850  03BE                     l1208:
  1851  03BE  0875               	movf	___wmul@product+1,w
  1852  03BF  00F1               	movwf	?___wmul+1
  1853  03C0  0874               	movf	___wmul@product,w
  1854  03C1  00F0               	movwf	?___wmul
  1855  03C2                     l216:
  1856  03C2  0008               	return
  1857  03C3                     __end_of___wmul:
  1858                           
  1859                           	psect	text8
  1860  044C                     __ptext8:	
  1861 ;; *************** function ___lwmod *****************
  1862 ;; Defined at:
  1863 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  1864 ;; Parameters:    Size  Location     Type
  1865 ;;  divisor         2    0[BANK0 ] unsigned int 
  1866 ;;  dividend        2    2[BANK0 ] unsigned int 
  1867 ;; Auto vars:     Size  Location     Type
  1868 ;;  counter         1    5[BANK0 ] unsigned char 
  1869 ;; Return value:  Size  Location     Type
  1870 ;;                  2    0[BANK0 ] unsigned int 
  1871 ;; Registers used:
  1872 ;;		wreg, status,2, status,0
  1873 ;; Tracked objects:
  1874 ;;		On entry : 0/0
  1875 ;;		On exit  : 0/0
  1876 ;;		Unchanged: 0/0
  1877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1878 ;;      Params:         0       4       0       0       0
  1879 ;;      Locals:         0       1       0       0       0
  1880 ;;      Temps:          0       1       0       0       0
  1881 ;;      Totals:         0       6       0       0       0
  1882 ;;Total ram usage:        6 bytes
  1883 ;; Hardware stack levels used:    1
  1884 ;; This function calls:
  1885 ;;		Nothing
  1886 ;; This function is called by:
  1887 ;;		_main
  1888 ;; This function uses a non-reentrant model
  1889 ;;
  1890                           
  1891                           
  1892                           ;psect for function ___lwmod
  1893  044C                     ___lwmod:
  1894  044C                     l1238:	
  1895                           ;incstack = 0
  1896                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1897                           
  1898  044C  1283               	bcf	3,5	;RP0=0, select bank0
  1899  044D  1303               	bcf	3,6	;RP1=0, select bank0
  1900  044E  082B               	movf	___lwmod@divisor,w
  1901  044F  042C               	iorwf	___lwmod@divisor+1,w
  1902  0450  1903               	btfsc	3,2
  1903  0451  2C53               	goto	u941
  1904  0452  2C54               	goto	u940
  1905  0453                     u941:
  1906  0453  2C83               	goto	l1256
  1907  0454                     u940:
  1908  0454                     l1240:
  1909  0454  01B0               	clrf	___lwmod@counter
  1910  0455  0AB0               	incf	___lwmod@counter,f
  1911  0456  2C62               	goto	l1246
  1912  0457                     l1242:
  1913  0457  3001               	movlw	1
  1914  0458                     u955:
  1915  0458  1003               	clrc
  1916  0459  0DAB               	rlf	___lwmod@divisor,f
  1917  045A  0DAC               	rlf	___lwmod@divisor+1,f
  1918  045B  3EFF               	addlw	-1
  1919  045C  1D03               	skipz
  1920  045D  2C58               	goto	u955
  1921  045E                     l1244:
  1922  045E  3001               	movlw	1
  1923  045F  00AF               	movwf	??___lwmod
  1924  0460  082F               	movf	??___lwmod,w
  1925  0461  07B0               	addwf	___lwmod@counter,f
  1926  0462                     l1246:
  1927  0462  1FAC               	btfss	___lwmod@divisor+1,7
  1928  0463  2C65               	goto	u961
  1929  0464  2C66               	goto	u960
  1930  0465                     u961:
  1931  0465  2C57               	goto	l1242
  1932  0466                     u960:
  1933  0466                     l1248:
  1934  0466  082C               	movf	___lwmod@divisor+1,w
  1935  0467  022E               	subwf	___lwmod@dividend+1,w
  1936  0468  1D03               	skipz
  1937  0469  2C6C               	goto	u975
  1938  046A  082B               	movf	___lwmod@divisor,w
  1939  046B  022D               	subwf	___lwmod@dividend,w
  1940  046C                     u975:
  1941  046C  1C03               	skipc
  1942  046D  2C6F               	goto	u971
  1943  046E  2C70               	goto	u970
  1944  046F                     u971:
  1945  046F  2C76               	goto	l1252
  1946  0470                     u970:
  1947  0470                     l1250:
  1948  0470  082B               	movf	___lwmod@divisor,w
  1949  0471  02AD               	subwf	___lwmod@dividend,f
  1950  0472  082C               	movf	___lwmod@divisor+1,w
  1951  0473  1C03               	skipc
  1952  0474  03AE               	decf	___lwmod@dividend+1,f
  1953  0475  02AE               	subwf	___lwmod@dividend+1,f
  1954  0476                     l1252:
  1955  0476  3001               	movlw	1
  1956  0477                     u985:
  1957  0477  1003               	clrc
  1958  0478  0CAC               	rrf	___lwmod@divisor+1,f
  1959  0479  0CAB               	rrf	___lwmod@divisor,f
  1960  047A  3EFF               	addlw	-1
  1961  047B  1D03               	skipz
  1962  047C  2C77               	goto	u985
  1963  047D                     l1254:
  1964  047D  3001               	movlw	1
  1965  047E  02B0               	subwf	___lwmod@counter,f
  1966  047F  1D03               	btfss	3,2
  1967  0480  2C82               	goto	u991
  1968  0481  2C83               	goto	u990
  1969  0482                     u991:
  1970  0482  2C66               	goto	l1248
  1971  0483                     u990:
  1972  0483                     l1256:
  1973  0483  082E               	movf	___lwmod@dividend+1,w
  1974  0484  00AC               	movwf	?___lwmod+1
  1975  0485  082D               	movf	___lwmod@dividend,w
  1976  0486  00AB               	movwf	?___lwmod
  1977  0487                     l496:
  1978  0487  0008               	return
  1979  0488                     __end_of___lwmod:
  1980                           
  1981                           	psect	text9
  1982  0488                     __ptext9:	
  1983 ;; *************** function ___lwdiv *****************
  1984 ;; Defined at:
  1985 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  1986 ;; Parameters:    Size  Location     Type
  1987 ;;  divisor         2    6[COMMON] unsigned int 
  1988 ;;  dividend        2    8[COMMON] unsigned int 
  1989 ;; Auto vars:     Size  Location     Type
  1990 ;;  quotient        2   11[COMMON] unsigned int 
  1991 ;;  counter         1   13[COMMON] unsigned char 
  1992 ;; Return value:  Size  Location     Type
  1993 ;;                  2    6[COMMON] unsigned int 
  1994 ;; Registers used:
  1995 ;;		wreg, status,2, status,0
  1996 ;; Tracked objects:
  1997 ;;		On entry : 0/0
  1998 ;;		On exit  : 0/0
  1999 ;;		Unchanged: 0/0
  2000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2001 ;;      Params:         4       0       0       0       0
  2002 ;;      Locals:         3       0       0       0       0
  2003 ;;      Temps:          1       0       0       0       0
  2004 ;;      Totals:         8       0       0       0       0
  2005 ;;Total ram usage:        8 bytes
  2006 ;; Hardware stack levels used:    1
  2007 ;; This function calls:
  2008 ;;		Nothing
  2009 ;; This function is called by:
  2010 ;;		_main
  2011 ;; This function uses a non-reentrant model
  2012 ;;
  2013                           
  2014                           
  2015                           ;psect for function ___lwdiv
  2016  0488                     ___lwdiv:
  2017  0488                     l1212:	
  2018                           ;incstack = 0
  2019                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2020                           
  2021  0488  01FB               	clrf	___lwdiv@quotient
  2022  0489  01FC               	clrf	___lwdiv@quotient+1
  2023  048A                     l1214:
  2024  048A  0876               	movf	___lwdiv@divisor,w
  2025  048B  0477               	iorwf	___lwdiv@divisor+1,w
  2026  048C  1903               	btfsc	3,2
  2027  048D  2C8F               	goto	u871
  2028  048E  2C90               	goto	u870
  2029  048F                     u871:
  2030  048F  2CC7               	goto	l1234
  2031  0490                     u870:
  2032  0490                     l1216:
  2033  0490  01FD               	clrf	___lwdiv@counter
  2034  0491  0AFD               	incf	___lwdiv@counter,f
  2035  0492  2C9E               	goto	l1222
  2036  0493                     l1218:
  2037  0493  3001               	movlw	1
  2038  0494                     u885:
  2039  0494  1003               	clrc
  2040  0495  0DF6               	rlf	___lwdiv@divisor,f
  2041  0496  0DF7               	rlf	___lwdiv@divisor+1,f
  2042  0497  3EFF               	addlw	-1
  2043  0498  1D03               	skipz
  2044  0499  2C94               	goto	u885
  2045  049A                     l1220:
  2046  049A  3001               	movlw	1
  2047  049B  00FA               	movwf	??___lwdiv
  2048  049C  087A               	movf	??___lwdiv,w
  2049  049D  07FD               	addwf	___lwdiv@counter,f
  2050  049E                     l1222:
  2051  049E  1FF7               	btfss	___lwdiv@divisor+1,7
  2052  049F  2CA1               	goto	u891
  2053  04A0  2CA2               	goto	u890
  2054  04A1                     u891:
  2055  04A1  2C93               	goto	l1218
  2056  04A2                     u890:
  2057  04A2                     l1224:
  2058  04A2  3001               	movlw	1
  2059  04A3                     u905:
  2060  04A3  1003               	clrc
  2061  04A4  0DFB               	rlf	___lwdiv@quotient,f
  2062  04A5  0DFC               	rlf	___lwdiv@quotient+1,f
  2063  04A6  3EFF               	addlw	-1
  2064  04A7  1D03               	skipz
  2065  04A8  2CA3               	goto	u905
  2066  04A9  0877               	movf	___lwdiv@divisor+1,w
  2067  04AA  0279               	subwf	___lwdiv@dividend+1,w
  2068  04AB  1D03               	skipz
  2069  04AC  2CAF               	goto	u915
  2070  04AD  0876               	movf	___lwdiv@divisor,w
  2071  04AE  0278               	subwf	___lwdiv@dividend,w
  2072  04AF                     u915:
  2073  04AF  1C03               	skipc
  2074  04B0  2CB2               	goto	u911
  2075  04B1  2CB3               	goto	u910
  2076  04B2                     u911:
  2077  04B2  2CBA               	goto	l1230
  2078  04B3                     u910:
  2079  04B3                     l1226:
  2080  04B3  0876               	movf	___lwdiv@divisor,w
  2081  04B4  02F8               	subwf	___lwdiv@dividend,f
  2082  04B5  0877               	movf	___lwdiv@divisor+1,w
  2083  04B6  1C03               	skipc
  2084  04B7  03F9               	decf	___lwdiv@dividend+1,f
  2085  04B8  02F9               	subwf	___lwdiv@dividend+1,f
  2086  04B9                     l1228:
  2087  04B9  147B               	bsf	___lwdiv@quotient,0
  2088  04BA                     l1230:
  2089  04BA  3001               	movlw	1
  2090  04BB                     u925:
  2091  04BB  1003               	clrc
  2092  04BC  0CF7               	rrf	___lwdiv@divisor+1,f
  2093  04BD  0CF6               	rrf	___lwdiv@divisor,f
  2094  04BE  3EFF               	addlw	-1
  2095  04BF  1D03               	skipz
  2096  04C0  2CBB               	goto	u925
  2097  04C1                     l1232:
  2098  04C1  3001               	movlw	1
  2099  04C2  02FD               	subwf	___lwdiv@counter,f
  2100  04C3  1D03               	btfss	3,2
  2101  04C4  2CC6               	goto	u931
  2102  04C5  2CC7               	goto	u930
  2103  04C6                     u931:
  2104  04C6  2CA2               	goto	l1224
  2105  04C7                     u930:
  2106  04C7                     l1234:
  2107  04C7  087C               	movf	___lwdiv@quotient+1,w
  2108  04C8  00F7               	movwf	?___lwdiv+1
  2109  04C9  087B               	movf	___lwdiv@quotient,w
  2110  04CA  00F6               	movwf	?___lwdiv
  2111  04CB                     l486:
  2112  04CB  0008               	return
  2113  04CC                     __end_of___lwdiv:
  2114                           
  2115                           	psect	text10
  2116  04CC                     __ptext10:	
  2117 ;; *************** function _LCD_print *****************
  2118 ;; Defined at:
  2119 ;;		line 62 in file "lcd.c"
  2120 ;; Parameters:    Size  Location     Type
  2121 ;;  LCD_Str         2    2[COMMON] PTR unsigned char 
  2122 ;;		 -> STR_2(11), temp(11), STR_1(13), 
  2123 ;; Auto vars:     Size  Location     Type
  2124 ;;  i               1    5[COMMON] unsigned char 
  2125 ;; Return value:  Size  Location     Type
  2126 ;;                  1    wreg      void 
  2127 ;; Registers used:
  2128 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2129 ;; Tracked objects:
  2130 ;;		On entry : 0/0
  2131 ;;		On exit  : 0/0
  2132 ;;		Unchanged: 0/0
  2133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2134 ;;      Params:         2       0       0       0       0
  2135 ;;      Locals:         1       0       0       0       0
  2136 ;;      Temps:          1       0       0       0       0
  2137 ;;      Totals:         4       0       0       0       0
  2138 ;;Total ram usage:        4 bytes
  2139 ;; Hardware stack levels used:    1
  2140 ;; Hardware stack levels required when called:    1
  2141 ;; This function calls:
  2142 ;;		_LCD_writeNibble
  2143 ;; This function is called by:
  2144 ;;		_main
  2145 ;; This function uses a non-reentrant model
  2146 ;;
  2147                           
  2148                           
  2149                           ;psect for function _LCD_print
  2150  04CC                     _LCD_print:
  2151  04CC                     l1162:	
  2152                           ;incstack = 0
  2153                           ; Regs used in _LCD_print: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2154                           
  2155                           
  2156                           ;lcd.c: 62: void LCD_print(char* LCD_Str);lcd.c: 63: {;lcd.c: 64:   uint8_t i = 0;
  2157  04CC  01F5               	clrf	LCD_print@i
  2158  04CD                     l1164:
  2159                           
  2160                           ;lcd.c: 65:   RS = 1;
  2161  04CD  1283               	bcf	3,5	;RP0=0, select bank0
  2162  04CE  1303               	bcf	3,6	;RP1=0, select bank0
  2163  04CF  14B4               	bsf	_RS/(0+8),_RS& (0+7)
  2164                           
  2165                           ;lcd.c: 66:   while(LCD_Str[i] != '\0')
  2166  04D0  2D01               	goto	l1170
  2167  04D1                     l1166:
  2168                           
  2169                           ;lcd.c: 67:   {;lcd.c: 68:     LCD_writeNibble(LCD_Str[i] >> 4);
  2170  04D1  0875               	movf	LCD_print@i,w
  2171  04D2  0772               	addwf	LCD_print@LCD_Str,w
  2172  04D3  0084               	movwf	4
  2173  04D4  0873               	movf	LCD_print@LCD_Str+1,w
  2174  04D5  1803               	skipnc
  2175  04D6  0A73               	incf	LCD_print@LCD_Str+1,w
  2176  04D7  00FF               	movwf	btemp+1
  2177  04D8  120A  118A  2003  120A  118A  	fcall	stringtab
  2178  04DD  00F4               	movwf	??_LCD_print
  2179  04DE  3004               	movlw	4
  2180  04DF                     u785:
  2181  04DF  1003               	clrc
  2182  04E0  0CF4               	rrf	??_LCD_print,f
  2183  04E1  3EFF               	addlw	-1
  2184  04E2  1D03               	skipz
  2185  04E3  2CDF               	goto	u785
  2186  04E4  0874               	movf	??_LCD_print,w
  2187  04E5  120A  118A  2570  120A  118A  	fcall	_LCD_writeNibble
  2188                           
  2189                           ;lcd.c: 69:     LCD_writeNibble(LCD_Str[i++] );
  2190  04EA  0875               	movf	LCD_print@i,w
  2191  04EB  0772               	addwf	LCD_print@LCD_Str,w
  2192  04EC  0084               	movwf	4
  2193  04ED  0873               	movf	LCD_print@LCD_Str+1,w
  2194  04EE  1803               	skipnc
  2195  04EF  0A73               	incf	LCD_print@LCD_Str+1,w
  2196  04F0  1283               	bcf	3,5	;RP0=0, select bank0
  2197  04F1  1303               	bcf	3,6	;RP1=0, select bank0
  2198  04F2  00FF               	movwf	btemp+1
  2199  04F3  120A  118A  2003  120A  118A  	fcall	stringtab
  2200  04F8  120A  118A  2570  120A  118A  	fcall	_LCD_writeNibble
  2201  04FD                     l1168:
  2202  04FD  3001               	movlw	1
  2203  04FE  00F4               	movwf	??_LCD_print
  2204  04FF  0874               	movf	??_LCD_print,w
  2205  0500  07F5               	addwf	LCD_print@i,f
  2206  0501                     l1170:
  2207                           
  2208                           ;lcd.c: 66:   while(LCD_Str[i] != '\0')
  2209  0501  0875               	movf	LCD_print@i,w
  2210  0502  0772               	addwf	LCD_print@LCD_Str,w
  2211  0503  0084               	movwf	4
  2212  0504  0873               	movf	LCD_print@LCD_Str+1,w
  2213  0505  1803               	skipnc
  2214  0506  0A73               	incf	LCD_print@LCD_Str+1,w
  2215  0507  1283               	bcf	3,5	;RP0=0, select bank0
  2216  0508  1303               	bcf	3,6	;RP1=0, select bank0
  2217  0509  00FF               	movwf	btemp+1
  2218  050A  120A  118A  2003  120A  118A  	fcall	stringtab
  2219  050F  3A00               	xorlw	0
  2220  0510  1D03               	skipz
  2221  0511  2D13               	goto	u791
  2222  0512  2D14               	goto	u790
  2223  0513                     u791:
  2224  0513  2CD1               	goto	l1166
  2225  0514                     u790:
  2226  0514                     l85:
  2227  0514  0008               	return
  2228  0515                     __end_of_LCD_print:
  2229                           
  2230                           	psect	text11
  2231  0416                     __ptext11:	
  2232 ;; *************** function _LCD_goTo *****************
  2233 ;; Defined at:
  2234 ;;		line 36 in file "lcd.c"
  2235 ;; Parameters:    Size  Location     Type
  2236 ;;  col             1    wreg     unsigned char 
  2237 ;;  row             1    5[COMMON] unsigned char 
  2238 ;; Auto vars:     Size  Location     Type
  2239 ;;  col             1    8[COMMON] unsigned char 
  2240 ;; Return value:  Size  Location     Type
  2241 ;;                  1    wreg      void 
  2242 ;; Registers used:
  2243 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2244 ;; Tracked objects:
  2245 ;;		On entry : 0/0
  2246 ;;		On exit  : 0/0
  2247 ;;		Unchanged: 0/0
  2248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2249 ;;      Params:         1       0       0       0       0
  2250 ;;      Locals:         1       0       0       0       0
  2251 ;;      Temps:          2       0       0       0       0
  2252 ;;      Totals:         4       0       0       0       0
  2253 ;;Total ram usage:        4 bytes
  2254 ;; Hardware stack levels used:    1
  2255 ;; Hardware stack levels required when called:    2
  2256 ;; This function calls:
  2257 ;;		_LCD_cmd
  2258 ;; This function is called by:
  2259 ;;		_main
  2260 ;; This function uses a non-reentrant model
  2261 ;;
  2262                           
  2263                           
  2264                           ;psect for function _LCD_goTo
  2265  0416                     _LCD_goTo:
  2266                           
  2267                           ;incstack = 0
  2268                           ; Regs used in _LCD_goTo: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2269                           ;LCD_goTo@col stored from wreg
  2270  0416  00F8               	movwf	LCD_goTo@col
  2271  0417                     l1146:
  2272                           
  2273                           ;lcd.c: 36: void LCD_goTo(uint8_t col, uint8_t row);lcd.c: 37: {;lcd.c: 38:   switch(row
      +                          )
  2274  0417  2C38               	goto	l1156
  2275  0418                     l1148:
  2276                           
  2277                           ;lcd.c: 41:       LCD_cmd(0xC0 + col - 1);
  2278  0418  0878               	movf	LCD_goTo@col,w
  2279  0419  3EBF               	addlw	191
  2280  041A  120A  118A  23E9  120A  118A  	fcall	_LCD_cmd
  2281                           
  2282                           ;lcd.c: 42:       break;
  2283  041F  2C4B               	goto	l76
  2284  0420                     l1150:
  2285                           
  2286                           ;lcd.c: 44:       LCD_cmd(0x94 + col - 1);
  2287  0420  0878               	movf	LCD_goTo@col,w
  2288  0421  3E93               	addlw	147
  2289  0422  120A  118A  23E9  120A  118A  	fcall	_LCD_cmd
  2290                           
  2291                           ;lcd.c: 45:       break;
  2292  0427  2C4B               	goto	l76
  2293  0428                     l1152:
  2294                           
  2295                           ;lcd.c: 47:       LCD_cmd(0xD4 + col - 1);
  2296  0428  0878               	movf	LCD_goTo@col,w
  2297  0429  3ED3               	addlw	211
  2298  042A  120A  118A  23E9  120A  118A  	fcall	_LCD_cmd
  2299                           
  2300                           ;lcd.c: 48:     break;
  2301  042F  2C4B               	goto	l76
  2302  0430                     l1154:
  2303                           
  2304                           ;lcd.c: 50:       LCD_cmd(0x80 + col - 1);
  2305  0430  0878               	movf	LCD_goTo@col,w
  2306  0431  3E7F               	addlw	127
  2307  0432  120A  118A  23E9  120A  118A  	fcall	_LCD_cmd
  2308                           
  2309                           ;lcd.c: 51:   }
  2310  0437  2C4B               	goto	l76
  2311  0438                     l1156:
  2312  0438  0875               	movf	LCD_goTo@row,w
  2313  0439  00F6               	movwf	??_LCD_goTo
  2314  043A  01F7               	clrf	??_LCD_goTo+1
  2315                           
  2316                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2317                           ; Switch size 1, requested type "simple"
  2318                           ; Number of cases is 1, Range of values is 0 to 0
  2319                           ; switch strategies available:
  2320                           ; Name         Instructions Cycles
  2321                           ; simple_byte            4     3 (average)
  2322                           ; direct_byte           11     8 (fixed)
  2323                           ; jumptable            260     6 (fixed)
  2324                           ;	Chosen strategy is simple_byte
  2325  043B  0877               	movf	??_LCD_goTo+1,w
  2326  043C  3A00               	xorlw	0	; case 0
  2327  043D  1903               	skipnz
  2328  043E  2C40               	goto	l1332
  2329  043F  2C30               	goto	l1154
  2330  0440                     l1332:
  2331                           
  2332                           ; Switch size 1, requested type "simple"
  2333                           ; Number of cases is 3, Range of values is 2 to 4
  2334                           ; switch strategies available:
  2335                           ; Name         Instructions Cycles
  2336                           ; simple_byte           10     6 (average)
  2337                           ; direct_byte           20    11 (fixed)
  2338                           ; jumptable            263     9 (fixed)
  2339                           ;	Chosen strategy is simple_byte
  2340  0440  0876               	movf	??_LCD_goTo,w
  2341  0441  3A02               	xorlw	2	; case 2
  2342  0442  1903               	skipnz
  2343  0443  2C18               	goto	l1148
  2344  0444  3A01               	xorlw	1	; case 3
  2345  0445  1903               	skipnz
  2346  0446  2C20               	goto	l1150
  2347  0447  3A07               	xorlw	7	; case 4
  2348  0448  1903               	skipnz
  2349  0449  2C28               	goto	l1152
  2350  044A  2C30               	goto	l1154
  2351  044B                     l76:
  2352  044B  0008               	return
  2353  044C                     __end_of_LCD_goTo:
  2354                           
  2355                           	psect	text12
  2356  05CC                     __ptext12:	
  2357 ;; *************** function _LCD_begin *****************
  2358 ;; Defined at:
  2359 ;;		line 73 in file "lcd.c"
  2360 ;; Parameters:    Size  Location     Type
  2361 ;;		None
  2362 ;; Auto vars:     Size  Location     Type
  2363 ;;		None
  2364 ;; Return value:  Size  Location     Type
  2365 ;;                  1    wreg      void 
  2366 ;; Registers used:
  2367 ;;		wreg, status,2, status,0, pclath, cstack
  2368 ;; Tracked objects:
  2369 ;;		On entry : 0/0
  2370 ;;		On exit  : 0/0
  2371 ;;		Unchanged: 0/0
  2372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2373 ;;      Params:         0       0       0       0       0
  2374 ;;      Locals:         0       0       0       0       0
  2375 ;;      Temps:          2       0       0       0       0
  2376 ;;      Totals:         2       0       0       0       0
  2377 ;;Total ram usage:        2 bytes
  2378 ;; Hardware stack levels used:    1
  2379 ;; Hardware stack levels required when called:    2
  2380 ;; This function calls:
  2381 ;;		_LCD_cmd
  2382 ;; This function is called by:
  2383 ;;		_main
  2384 ;; This function uses a non-reentrant model
  2385 ;;
  2386                           
  2387                           
  2388                           ;psect for function _LCD_begin
  2389  05CC                     _LCD_begin:
  2390  05CC                     l1120:	
  2391                           ;incstack = 0
  2392                           ; Regs used in _LCD_begin: [wreg+status,2+status,0+pclath+cstack]
  2393                           
  2394                           
  2395                           ;lcd.c: 75:   RS = 0;
  2396  05CC  1283               	bcf	3,5	;RP0=0, select bank0
  2397  05CD  1303               	bcf	3,6	;RP1=0, select bank0
  2398  05CE  10B4               	bcf	_RS/(0+8),_RS& (0+7)
  2399                           
  2400                           ;lcd.c: 77:   RD0 = 0;
  2401  05CF  1008               	bcf	8,0	;volatile
  2402                           
  2403                           ;lcd.c: 78:   RD1 = 0;
  2404  05D0  1088               	bcf	8,1	;volatile
  2405                           
  2406                           ;lcd.c: 79:   RD2 = 0;
  2407  05D1  1108               	bcf	8,2	;volatile
  2408                           
  2409                           ;lcd.c: 80:   RD3 = 0;
  2410  05D2  1188               	bcf	8,3	;volatile
  2411                           
  2412                           ;lcd.c: 81:   RD4 = 0;
  2413  05D3  1208               	bcf	8,4	;volatile
  2414                           
  2415                           ;lcd.c: 82:   RD5 = 0;
  2416  05D4  1288               	bcf	8,5	;volatile
  2417                           
  2418                           ;lcd.c: 83:   TRISD0 = 0;
  2419  05D5  1683               	bsf	3,5	;RP0=1, select bank1
  2420  05D6  1303               	bcf	3,6	;RP1=0, select bank1
  2421  05D7  1008               	bcf	8,0	;volatile
  2422                           
  2423                           ;lcd.c: 84:   TRISD1 = 0;
  2424  05D8  1088               	bcf	8,1	;volatile
  2425                           
  2426                           ;lcd.c: 85:   TRISD2 = 0;
  2427  05D9  1108               	bcf	8,2	;volatile
  2428                           
  2429                           ;lcd.c: 86:   TRISD3 = 0;
  2430  05DA  1188               	bcf	8,3	;volatile
  2431                           
  2432                           ;lcd.c: 87:   TRISD4 = 0;
  2433  05DB  1208               	bcf	8,4	;volatile
  2434                           
  2435                           ;lcd.c: 88:   TRISD5 = 0;
  2436  05DC  1288               	bcf	8,5	;volatile
  2437  05DD                     l1122:
  2438                           
  2439                           ;lcd.c: 90:   _delay((unsigned long)((40)*(8000000/4000.0)));
  2440  05DD  3068               	movlw	104
  2441  05DE  00F6               	movwf	??_LCD_begin+1
  2442  05DF  30E4               	movlw	228
  2443  05E0  00F5               	movwf	??_LCD_begin
  2444  05E1                     u1137:
  2445  05E1  0BF5               	decfsz	??_LCD_begin,f
  2446  05E2  2DE1               	goto	u1137
  2447  05E3  0BF6               	decfsz	??_LCD_begin+1,f
  2448  05E4  2DE1               	goto	u1137
  2449  05E5  0000               	nop
  2450  05E6                     l1124:
  2451                           
  2452                           ;lcd.c: 91:   LCD_cmd(3);
  2453  05E6  3003               	movlw	3
  2454  05E7  120A  118A  23E9  120A  118A  	fcall	_LCD_cmd
  2455  05EC                     l1126:
  2456                           
  2457                           ;lcd.c: 92:   _delay((unsigned long)((5)*(8000000/4000.0)));
  2458  05EC  300D               	movlw	13
  2459  05ED  00F6               	movwf	??_LCD_begin+1
  2460  05EE  30FB               	movlw	251
  2461  05EF  00F5               	movwf	??_LCD_begin
  2462  05F0                     u1147:
  2463  05F0  0BF5               	decfsz	??_LCD_begin,f
  2464  05F1  2DF0               	goto	u1147
  2465  05F2  0BF6               	decfsz	??_LCD_begin+1,f
  2466  05F3  2DF0               	goto	u1147
  2467  05F4  2DF5               	nop2
  2468                           
  2469                           ;lcd.c: 93:   LCD_cmd(3);
  2470  05F5  3003               	movlw	3
  2471  05F6  120A  118A  23E9  120A  118A  	fcall	_LCD_cmd
  2472  05FB                     l1128:
  2473                           
  2474                           ;lcd.c: 94:   _delay((unsigned long)((5)*(8000000/4000.0)));
  2475  05FB  300D               	movlw	13
  2476  05FC  00F6               	movwf	??_LCD_begin+1
  2477  05FD  30FB               	movlw	251
  2478  05FE  00F5               	movwf	??_LCD_begin
  2479  05FF                     u1157:
  2480  05FF  0BF5               	decfsz	??_LCD_begin,f
  2481  0600  2DFF               	goto	u1157
  2482  0601  0BF6               	decfsz	??_LCD_begin+1,f
  2483  0602  2DFF               	goto	u1157
  2484  0603  2E04               	nop2
  2485  0604                     l1130:
  2486                           
  2487                           ;lcd.c: 95:   LCD_cmd(3);
  2488  0604  3003               	movlw	3
  2489  0605  120A  118A  23E9  120A  118A  	fcall	_LCD_cmd
  2490                           
  2491                           ;lcd.c: 96:   _delay((unsigned long)((5)*(8000000/4000.0)));
  2492  060A  300D               	movlw	13
  2493  060B  00F6               	movwf	??_LCD_begin+1
  2494  060C  30FB               	movlw	251
  2495  060D  00F5               	movwf	??_LCD_begin
  2496  060E                     u1167:
  2497  060E  0BF5               	decfsz	??_LCD_begin,f
  2498  060F  2E0E               	goto	u1167
  2499  0610  0BF6               	decfsz	??_LCD_begin+1,f
  2500  0611  2E0E               	goto	u1167
  2501  0612  2E13               	nop2
  2502  0613                     l1132:
  2503                           
  2504                           ;lcd.c: 97:   LCD_cmd(0x02);
  2505  0613  3002               	movlw	2
  2506  0614  120A  118A  23E9  120A  118A  	fcall	_LCD_cmd
  2507  0619                     l1134:
  2508                           
  2509                           ;lcd.c: 98:   _delay((unsigned long)((5)*(8000000/4000.0)));
  2510  0619  300D               	movlw	13
  2511  061A  00F6               	movwf	??_LCD_begin+1
  2512  061B  30FB               	movlw	251
  2513  061C  00F5               	movwf	??_LCD_begin
  2514  061D                     u1177:
  2515  061D  0BF5               	decfsz	??_LCD_begin,f
  2516  061E  2E1D               	goto	u1177
  2517  061F  0BF6               	decfsz	??_LCD_begin+1,f
  2518  0620  2E1D               	goto	u1177
  2519  0621  2E22               	nop2
  2520                           
  2521                           ;lcd.c: 99:   LCD_cmd(0x20 | (2 << 2));
  2522  0622  3028               	movlw	40
  2523  0623  120A  118A  23E9  120A  118A  	fcall	_LCD_cmd
  2524  0628                     l1136:
  2525                           
  2526                           ;lcd.c: 100:   _delay((unsigned long)((50)*(8000000/4000.0)));
  2527  0628  3082               	movlw	130
  2528  0629  00F6               	movwf	??_LCD_begin+1
  2529  062A  30DD               	movlw	221
  2530  062B  00F5               	movwf	??_LCD_begin
  2531  062C                     u1187:
  2532  062C  0BF5               	decfsz	??_LCD_begin,f
  2533  062D  2E2C               	goto	u1187
  2534  062E  0BF6               	decfsz	??_LCD_begin+1,f
  2535  062F  2E2C               	goto	u1187
  2536  0630  2E31               	nop2
  2537  0631                     l1138:
  2538                           
  2539                           ;lcd.c: 101:   LCD_cmd(0x0C);
  2540  0631  300C               	movlw	12
  2541  0632  120A  118A  23E9  120A  118A  	fcall	_LCD_cmd
  2542                           
  2543                           ;lcd.c: 102:   _delay((unsigned long)((50)*(8000000/4000.0)));
  2544  0637  3082               	movlw	130
  2545  0638  00F6               	movwf	??_LCD_begin+1
  2546  0639  30DD               	movlw	221
  2547  063A  00F5               	movwf	??_LCD_begin
  2548  063B                     u1197:
  2549  063B  0BF5               	decfsz	??_LCD_begin,f
  2550  063C  2E3B               	goto	u1197
  2551  063D  0BF6               	decfsz	??_LCD_begin+1,f
  2552  063E  2E3B               	goto	u1197
  2553  063F  2E40               	nop2
  2554  0640                     l1140:
  2555                           
  2556                           ;lcd.c: 103:   LCD_cmd(0x01);
  2557  0640  3001               	movlw	1
  2558  0641  120A  118A  23E9  120A  118A  	fcall	_LCD_cmd
  2559  0646                     l1142:
  2560                           
  2561                           ;lcd.c: 104:   _delay((unsigned long)((50)*(8000000/4000.0)));
  2562  0646  3082               	movlw	130
  2563  0647  00F6               	movwf	??_LCD_begin+1
  2564  0648  30DD               	movlw	221
  2565  0649  00F5               	movwf	??_LCD_begin
  2566  064A                     u1207:
  2567  064A  0BF5               	decfsz	??_LCD_begin,f
  2568  064B  2E4A               	goto	u1207
  2569  064C  0BF6               	decfsz	??_LCD_begin+1,f
  2570  064D  2E4A               	goto	u1207
  2571  064E  2E4F               	nop2
  2572                           
  2573                           ;lcd.c: 105:   LCD_cmd(0x04 | 0x02);
  2574  064F  3006               	movlw	6
  2575  0650  120A  118A  23E9  120A  118A  	fcall	_LCD_cmd
  2576  0655                     l1144:
  2577                           
  2578                           ;lcd.c: 106:   _delay((unsigned long)((50)*(8000000/4000.0)));
  2579  0655  3082               	movlw	130
  2580  0656  00F6               	movwf	??_LCD_begin+1
  2581  0657  30DD               	movlw	221
  2582  0658  00F5               	movwf	??_LCD_begin
  2583  0659                     u1217:
  2584  0659  0BF5               	decfsz	??_LCD_begin,f
  2585  065A  2E59               	goto	u1217
  2586  065B  0BF6               	decfsz	??_LCD_begin+1,f
  2587  065C  2E59               	goto	u1217
  2588  065D  2E5E               	nop2
  2589  065E                     l88:
  2590  065E  0008               	return
  2591  065F                     __end_of_LCD_begin:
  2592                           
  2593                           	psect	text13
  2594  03E9                     __ptext13:	
  2595 ;; *************** function _LCD_cmd *****************
  2596 ;; Defined at:
  2597 ;;		line 27 in file "lcd.c"
  2598 ;; Parameters:    Size  Location     Type
  2599 ;;  Command         1    wreg     unsigned char 
  2600 ;; Auto vars:     Size  Location     Type
  2601 ;;  Command         1    4[COMMON] unsigned char 
  2602 ;; Return value:  Size  Location     Type
  2603 ;;                  1    wreg      void 
  2604 ;; Registers used:
  2605 ;;		wreg, status,2, status,0, pclath, cstack
  2606 ;; Tracked objects:
  2607 ;;		On entry : 0/0
  2608 ;;		On exit  : 0/0
  2609 ;;		Unchanged: 0/0
  2610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2611 ;;      Params:         0       0       0       0       0
  2612 ;;      Locals:         1       0       0       0       0
  2613 ;;      Temps:          2       0       0       0       0
  2614 ;;      Totals:         3       0       0       0       0
  2615 ;;Total ram usage:        3 bytes
  2616 ;; Hardware stack levels used:    1
  2617 ;; Hardware stack levels required when called:    1
  2618 ;; This function calls:
  2619 ;;		_LCD_writeNibble
  2620 ;; This function is called by:
  2621 ;;		_LCD_goTo
  2622 ;;		_LCD_begin
  2623 ;; This function uses a non-reentrant model
  2624 ;;
  2625                           
  2626                           
  2627                           ;psect for function _LCD_cmd
  2628  03E9                     _LCD_cmd:
  2629                           
  2630                           ;incstack = 0
  2631                           ; Regs used in _LCD_cmd: [wreg+status,2+status,0+pclath+cstack]
  2632                           ;LCD_cmd@Command stored from wreg
  2633  03E9  00F4               	movwf	LCD_cmd@Command
  2634  03EA                     l1064:
  2635                           
  2636                           ;lcd.c: 27: void LCD_cmd(uint8_t Command);lcd.c: 28: {;lcd.c: 29:   RS = 0;
  2637  03EA  1283               	bcf	3,5	;RP0=0, select bank0
  2638  03EB  1303               	bcf	3,6	;RP1=0, select bank0
  2639  03EC  10B4               	bcf	_RS/(0+8),_RS& (0+7)
  2640  03ED                     l1066:
  2641                           
  2642                           ;lcd.c: 30:   LCD_writeNibble(Command >> 4);
  2643  03ED  0874               	movf	LCD_cmd@Command,w
  2644  03EE  00F2               	movwf	??_LCD_cmd
  2645  03EF  3004               	movlw	4
  2646  03F0                     u705:
  2647  03F0  1003               	clrc
  2648  03F1  0CF2               	rrf	??_LCD_cmd,f
  2649  03F2  3EFF               	addlw	-1
  2650  03F3  1D03               	skipz
  2651  03F4  2BF0               	goto	u705
  2652  03F5  0872               	movf	??_LCD_cmd,w
  2653  03F6  120A  118A  2570  120A  118A  	fcall	_LCD_writeNibble
  2654                           
  2655                           ;lcd.c: 31:   LCD_writeNibble(Command);
  2656  03FB  0874               	movf	LCD_cmd@Command,w
  2657  03FC  120A  118A  2570  120A  118A  	fcall	_LCD_writeNibble
  2658  0401                     l1068:
  2659                           
  2660                           ;lcd.c: 32:   if((Command == 0x01) || (Command == 0x02))
  2661  0401  0374               	decf	LCD_cmd@Command,w
  2662  0402  1903               	btfsc	3,2
  2663  0403  2C05               	goto	u711
  2664  0404  2C06               	goto	u710
  2665  0405                     u711:
  2666  0405  2C0C               	goto	l1072
  2667  0406                     u710:
  2668  0406                     l1070:
  2669  0406  3002               	movlw	2
  2670  0407  0674               	xorwf	LCD_cmd@Command,w
  2671  0408  1D03               	btfss	3,2
  2672  0409  2C0B               	goto	u721
  2673  040A  2C0C               	goto	u720
  2674  040B                     u721:
  2675  040B  2C15               	goto	l67
  2676  040C                     u720:
  2677  040C                     l1072:
  2678                           
  2679                           ;lcd.c: 33:     _delay((unsigned long)((2)*(8000000/4000.0)));
  2680  040C  3006               	movlw	6
  2681  040D  00F3               	movwf	??_LCD_cmd+1
  2682  040E  3030               	movlw	48
  2683  040F  00F2               	movwf	??_LCD_cmd
  2684  0410                     u1227:
  2685  0410  0BF2               	decfsz	??_LCD_cmd,f
  2686  0411  2C10               	goto	u1227
  2687  0412  0BF3               	decfsz	??_LCD_cmd+1,f
  2688  0413  2C10               	goto	u1227
  2689  0414  0000               	nop
  2690  0415                     l67:
  2691  0415  0008               	return
  2692  0416                     __end_of_LCD_cmd:
  2693                           
  2694                           	psect	text14
  2695  0570                     __ptext14:	
  2696 ;; *************** function _LCD_writeNibble *****************
  2697 ;; Defined at:
  2698 ;;		line 10 in file "lcd.c"
  2699 ;; Parameters:    Size  Location     Type
  2700 ;;  n               1    wreg     unsigned char 
  2701 ;; Auto vars:     Size  Location     Type
  2702 ;;  n               1    1[COMMON] unsigned char 
  2703 ;; Return value:  Size  Location     Type
  2704 ;;                  1    wreg      void 
  2705 ;; Registers used:
  2706 ;;		wreg, status,2, status,0
  2707 ;; Tracked objects:
  2708 ;;		On entry : 0/0
  2709 ;;		On exit  : 0/0
  2710 ;;		Unchanged: 0/0
  2711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2712 ;;      Params:         0       0       0       0       0
  2713 ;;      Locals:         1       0       0       0       0
  2714 ;;      Temps:          1       0       0       0       0
  2715 ;;      Totals:         2       0       0       0       0
  2716 ;;Total ram usage:        2 bytes
  2717 ;; Hardware stack levels used:    1
  2718 ;; This function calls:
  2719 ;;		Nothing
  2720 ;; This function is called by:
  2721 ;;		_LCD_cmd
  2722 ;;		_LCD_print
  2723 ;;		_LCD_putChar
  2724 ;; This function uses a non-reentrant model
  2725 ;;
  2726                           
  2727                           
  2728                           ;psect for function _LCD_writeNibble
  2729  0570                     _LCD_writeNibble:
  2730                           
  2731                           ;incstack = 0
  2732                           ; Regs used in _LCD_writeNibble: [wreg+status,2+status,0]
  2733                           ;LCD_writeNibble@n stored from wreg
  2734  0570  00F1               	movwf	LCD_writeNibble@n
  2735  0571                     l1026:
  2736                           
  2737                           ;lcd.c: 10: void LCD_writeNibble(uint8_t n);lcd.c: 11: {;lcd.c: 12:   RD0 = RS;
  2738  0571  1283               	bcf	3,5	;RP0=0, select bank0
  2739  0572  1303               	bcf	3,6	;RP1=0, select bank0
  2740  0573  18B4               	btfsc	_RS/(0+8),_RS& (0+7)
  2741  0574  2D76               	goto	u531
  2742  0575  2D7A               	goto	u530
  2743  0576                     u531:
  2744  0576  1283               	bcf	3,5	;RP0=0, select bank0
  2745  0577  1303               	bcf	3,6	;RP1=0, select bank0
  2746  0578  1408               	bsf	8,0	;volatile
  2747  0579  2D7D               	goto	u544
  2748  057A                     u530:
  2749  057A  1283               	bcf	3,5	;RP0=0, select bank0
  2750  057B  1303               	bcf	3,6	;RP1=0, select bank0
  2751  057C  1008               	bcf	8,0	;volatile
  2752  057D                     u544:
  2753                           
  2754                           ;lcd.c: 13:   RD2 = n & 0x01;
  2755  057D  1871               	btfsc	LCD_writeNibble@n,0
  2756  057E  2D80               	goto	u551
  2757  057F  2D84               	goto	u550
  2758  0580                     u551:
  2759  0580  1283               	bcf	3,5	;RP0=0, select bank0
  2760  0581  1303               	bcf	3,6	;RP1=0, select bank0
  2761  0582  1508               	bsf	8,2	;volatile
  2762  0583  2D87               	goto	u564
  2763  0584                     u550:
  2764  0584  1283               	bcf	3,5	;RP0=0, select bank0
  2765  0585  1303               	bcf	3,6	;RP1=0, select bank0
  2766  0586  1108               	bcf	8,2	;volatile
  2767  0587                     u564:
  2768  0587                     l1028:
  2769                           
  2770                           ;lcd.c: 14:   RD3 = (n >> 1) & 0x01;
  2771  0587  0871               	movf	LCD_writeNibble@n,w
  2772  0588  00F0               	movwf	??_LCD_writeNibble
  2773  0589  3001               	movlw	1
  2774  058A                     u575:
  2775  058A  1003               	clrc
  2776  058B  0CF0               	rrf	??_LCD_writeNibble,f
  2777  058C  3EFF               	addlw	-1
  2778  058D  1D03               	skipz
  2779  058E  2D8A               	goto	u575
  2780  058F  1870               	btfsc	??_LCD_writeNibble,0
  2781  0590  2D92               	goto	u581
  2782  0591  2D96               	goto	u580
  2783  0592                     u581:
  2784  0592  1283               	bcf	3,5	;RP0=0, select bank0
  2785  0593  1303               	bcf	3,6	;RP1=0, select bank0
  2786  0594  1588               	bsf	8,3	;volatile
  2787  0595  2D99               	goto	u594
  2788  0596                     u580:
  2789  0596  1283               	bcf	3,5	;RP0=0, select bank0
  2790  0597  1303               	bcf	3,6	;RP1=0, select bank0
  2791  0598  1188               	bcf	8,3	;volatile
  2792  0599                     u594:
  2793                           
  2794                           ;lcd.c: 15:   RD4 = (n >> 2) & 0x01;
  2795  0599  0871               	movf	LCD_writeNibble@n,w
  2796  059A  00F0               	movwf	??_LCD_writeNibble
  2797  059B  3002               	movlw	2
  2798  059C                     u605:
  2799  059C  1003               	clrc
  2800  059D  0CF0               	rrf	??_LCD_writeNibble,f
  2801  059E  3EFF               	addlw	-1
  2802  059F  1D03               	skipz
  2803  05A0  2D9C               	goto	u605
  2804  05A1  1870               	btfsc	??_LCD_writeNibble,0
  2805  05A2  2DA4               	goto	u611
  2806  05A3  2DA8               	goto	u610
  2807  05A4                     u611:
  2808  05A4  1283               	bcf	3,5	;RP0=0, select bank0
  2809  05A5  1303               	bcf	3,6	;RP1=0, select bank0
  2810  05A6  1608               	bsf	8,4	;volatile
  2811  05A7  2DAB               	goto	u624
  2812  05A8                     u610:
  2813  05A8  1283               	bcf	3,5	;RP0=0, select bank0
  2814  05A9  1303               	bcf	3,6	;RP1=0, select bank0
  2815  05AA  1208               	bcf	8,4	;volatile
  2816  05AB                     u624:
  2817                           
  2818                           ;lcd.c: 16:   RD5 = (n >> 3) & 0x01;
  2819  05AB  0871               	movf	LCD_writeNibble@n,w
  2820  05AC  00F0               	movwf	??_LCD_writeNibble
  2821  05AD  3003               	movlw	3
  2822  05AE                     u635:
  2823  05AE  1003               	clrc
  2824  05AF  0CF0               	rrf	??_LCD_writeNibble,f
  2825  05B0  3EFF               	addlw	-1
  2826  05B1  1D03               	skipz
  2827  05B2  2DAE               	goto	u635
  2828  05B3  1870               	btfsc	??_LCD_writeNibble,0
  2829  05B4  2DB6               	goto	u641
  2830  05B5  2DBA               	goto	u640
  2831  05B6                     u641:
  2832  05B6  1283               	bcf	3,5	;RP0=0, select bank0
  2833  05B7  1303               	bcf	3,6	;RP1=0, select bank0
  2834  05B8  1688               	bsf	8,5	;volatile
  2835  05B9  2DBD               	goto	u654
  2836  05BA                     u640:
  2837  05BA  1283               	bcf	3,5	;RP0=0, select bank0
  2838  05BB  1303               	bcf	3,6	;RP1=0, select bank0
  2839  05BC  1288               	bcf	8,5	;volatile
  2840  05BD                     u654:
  2841  05BD                     l1030:
  2842                           
  2843                           ;lcd.c: 19:   RD1 = 0;
  2844  05BD  1088               	bcf	8,1	;volatile
  2845  05BE                     l1032:
  2846                           
  2847                           ;lcd.c: 20:   _delay((unsigned long)((1)*(8000000/4000000.0)));
  2848  05BE  2DBF               	nop2	;2 cycle nop
  2849  05BF                     l1034:
  2850                           
  2851                           ;lcd.c: 21:   RD1 = 1;
  2852  05BF  1283               	bcf	3,5	;RP0=0, select bank0
  2853  05C0  1303               	bcf	3,6	;RP1=0, select bank0
  2854  05C1  1488               	bsf	8,1	;volatile
  2855  05C2                     l1036:
  2856                           
  2857                           ;lcd.c: 22:   _delay((unsigned long)((1)*(8000000/4000000.0)));
  2858  05C2  2DC3               	nop2	;2 cycle nop
  2859  05C3                     l1038:
  2860                           
  2861                           ;lcd.c: 23:   RD1 = 0;
  2862  05C3  1283               	bcf	3,5	;RP0=0, select bank0
  2863  05C4  1303               	bcf	3,6	;RP1=0, select bank0
  2864  05C5  1088               	bcf	8,1	;volatile
  2865  05C6                     l1040:
  2866                           
  2867                           ;lcd.c: 24:   _delay((unsigned long)((100)*(8000000/4000000.0)));
  2868  05C6  3042               	movlw	66
  2869  05C7  00F0               	movwf	??_LCD_writeNibble
  2870  05C8                     u1237:
  2871  05C8  0BF0               	decfsz	??_LCD_writeNibble,f
  2872  05C9  2DC8               	goto	u1237
  2873  05CA  0000               	nop
  2874  05CB                     l61:
  2875  05CB  0008               	return
  2876  05CC                     __end_of_LCD_writeNibble:
  2877  007E                     btemp	set	126	;btemp
  2878  007E                     wtemp0	set	126
  2879                           
  2880                           	psect	config
  2881                           
  2882                           ;Config register CONFIG1 @ 0x2007
  2883                           ;	Oscillator Selection bits
  2884                           ;	FOSC = LP, LP oscillator: Low-power crystal on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
  2885                           ;	Watchdog Timer Enable bit
  2886                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2887                           ;	Power-up Timer Enable bit
  2888                           ;	PWRTE = ON, PWRT enabled
  2889                           ;	RE3/MCLR pin function select bit
  2890                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2891                           ;	Code Protection bit
  2892                           ;	CP = ON, Program memory code protection is enabled
  2893                           ;	Data Code Protection bit
  2894                           ;	CPD = ON, Data memory code protection is enabled
  2895                           ;	Brown Out Reset Selection bits
  2896                           ;	BOREN = OFF, BOR disabled
  2897                           ;	Internal External Switchover bit
  2898                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2899                           ;	Fail-Safe Clock Monitor Enabled bit
  2900                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2901                           ;	Low Voltage Programming Enable bit
  2902                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2903                           ;	In-Circuit Debugger Mode bit
  2904                           ;	DEBUG = 0x1, unprogrammed default
  2905  2007                     	org	8199
  2906  2007  2000               	dw	8192
  2907                           
  2908                           ;Config register CONFIG2 @ 0x2008
  2909                           ;	Brown-out Reset Selection bit
  2910                           ;	BOR4V = BOR21V, Brown-out Reset set to 2.1V
  2911                           ;	Flash Program Memory Self Write Enable bits
  2912                           ;	WRT = OFF, Write protection off
  2913  2008                     	org	8200
  2914  2008  3EFF               	dw	16127

Data Sizes:
    Strings     24
    Constant    0
    Data        11
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      9      23
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    ds18b20_read@raw_temp_value	PTR unsigned int  size(1) Largest target is 2
		 -> raw_temp(BANK0[2]), 

    LCD_print@LCD_Str	PTR unsigned char  size(2) Largest target is 13
		 -> STR_2(CODE[11]), temp(BANK0[11]), STR_1(CODE[13]), 


Critical Paths under _main in COMMON

    _main->___lwdiv
    _ds18b20_read->_ds18b20_read_byte
    _ds18b20_read->_ds18b20_write_byte
    _ds18b20_write_byte->_ds18b20_write_bit
    _ds18b20_read_byte->_ds18b20_read_bit
    ___lwmod->___lwdiv
    ___lwdiv->___wmul
    _LCD_print->_LCD_writeNibble
    _LCD_goTo->_LCD_cmd
    _LCD_begin->_LCD_cmd
    _LCD_cmd->_LCD_writeNibble

Critical Paths under _main in BANK0

    _main->___lwmod

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    3810
                                              6 BANK0      3     3      0
                          _LCD_begin
                           _LCD_goTo
                          _LCD_print
                            ___lwdiv
                            ___lwmod
                             ___wmul
                       _ds18b20_read
 ---------------------------------------------------------------------------------
 (1) _ds18b20_read                                         3     3      0     281
                                              5 COMMON     3     3      0
                  _ds18b20_read_byte
                      _ds18b20_start
                 _ds18b20_write_byte
 ---------------------------------------------------------------------------------
 (2) _ds18b20_write_byte                                   3     3      0     112
                                              2 COMMON     3     3      0
                  _ds18b20_write_bit
 ---------------------------------------------------------------------------------
 (3) _ds18b20_write_bit                                    2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _ds18b20_start                                        1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ds18b20_read_byte                                    4     4      0      92
                                              1 COMMON     4     4      0
                   _ds18b20_read_bit
 ---------------------------------------------------------------------------------
 (3) _ds18b20_read_bit                                     1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     700
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              6     2      4     919
                                              0 BANK0      6     2      4
                            ___lwdiv (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              8     4      4     770
                                              6 COMMON     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _LCD_print                                            4     2      2     450
                                              2 COMMON     4     2      2
                    _LCD_writeNibble
 ---------------------------------------------------------------------------------
 (1) _LCD_goTo                                             4     3      1     514
                                              5 COMMON     4     3      1
                            _LCD_cmd
 ---------------------------------------------------------------------------------
 (1) _LCD_begin                                            2     2      0     176
                                              5 COMMON     2     2      0
                            _LCD_cmd
 ---------------------------------------------------------------------------------
 (2) _LCD_cmd                                              3     3      0     176
                                              2 COMMON     3     3      0
                    _LCD_writeNibble
 ---------------------------------------------------------------------------------
 (2) _LCD_writeNibble                                      2     2      0      88
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_begin
     _LCD_cmd
       _LCD_writeNibble
   _LCD_goTo
     _LCD_cmd
       _LCD_writeNibble
   _LCD_print
     _LCD_writeNibble
   ___lwdiv
     ___wmul (ARG)
   ___lwmod
     ___lwdiv (ARG)
       ___wmul (ARG)
     ___wmul (ARG)
   ___wmul
   _ds18b20_read
     _ds18b20_read_byte
       _ds18b20_read_bit
     _ds18b20_start
     _ds18b20_write_byte
       _ds18b20_write_bit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      9      17       5       28.7%
BITBANK0            50      0       1       4        1.2%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      25      12        0.0%
ABS                  0      0      25       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Feb 24 22:11:24 2021

                          pc 0002                           l61 05CB                           l67 0415  
                         l76 044B                           l85 0514                           l88 065E  
                         l98 03E8                           _RS 01A1                           fsr 0004  
        ___wmul@multiplicand 0072                          l101 0357                          l120 0379  
                        l106 033A                          l115 039D                          l124 056F  
                        l214 03AA                          l216 03C2                          l486 04CB  
                        l496 0487                          _RB1 0031                          _RD0 0040  
                        _RD1 0041                          _RD2 0042                          _RD3 0043  
                        _RD4 0044                          _RD5 0045                          u610 05A8  
                        u530 057A                          u611 05A4                          u531 0576  
                        u605 059C                          u550 0584                          u710 0406  
                        u551 0580                          u711 0405                          u640 05BA  
                        u624 05AB                          u544 057D                          u720 040C  
                        u800 051F                          u641 05B6                          u721 040B  
                        u705 03F0                          u801 051E                          u730 03DE  
                        u810 0537                          u635 05AE                          u731 03DD  
                        u811 0536                          u580 0596                          u564 0587  
                        u660 034B                          u820 0540                          u581 0592  
                        u661 0347                          u821 053F                          u654 05BD  
                        u910 04B3                          u830 03A4                          u750 033A  
                        u575 058A                          u911 04B2                          u831 03A3  
                        u751 0339                          u744 0327                          u905 04A3  
                        u745 0325                          u594 0599                          u930 04C7  
                        u690 039A                          u770 0378                          u674 034E  
                        u931 04C6                          u915 04AF                          u691 0399  
                        u771 0377                          u940 0454                          u860 03BE  
                        u764 0367                          u925 04BB                          u941 0453  
                        u861 03BD                          u845 03AB                          u685 038F  
                        u765 0365                          u790 0514                          u870 0490  
                        u791 0513                          u871 048F                          u855 03B2  
                        u960 0466                          u785 04DF                          u961 0465  
                        u890 04A2                          u970 0470                          u891 04A1  
                        u971 046F                          u955 0458                          u885 0494  
                        u990 0483                          u991 0482                          u975 046C  
                        u985 0477                          fsr0 0004                          indf 0000  
            __end_of_LCD_cmd 0416                         l1100 0330                         l1030 05BD  
                       l1110 035A                         l1102 0334                         l1040 05C6  
                       l1032 05BE                         l1120 05CC                         l1200 03A0  
                       l1112 036E                         l1104 0358                         l1034 05BF  
                       l1026 0571                         l1130 0604                         l1122 05DD  
                       l1202 03A4                         l1050 037A                         l1114 0372  
                       l1042 033C                         l1036 05C2                         l1028 0587  
                       l1140 0640                         l1132 0613                         l1124 05E6  
                       l1220 049A                         l1212 0488                         l1204 03B1  
                       l1060 039C                         l1052 0385                         l1116 0378  
                       l1044 034E                         l1300 07BA                         l1038 05C3  
                       l1070 0406                         l1142 0646                         l1134 0619  
                       l1126 05EC                         l1150 0420                         l1230 04BA  
                       l1222 049E                         l1214 048A                         l1206 03B8  
                       l1054 0389                         l1046 0352                         l1302 07C4  
                       l1072 040C                         l1064 03EA                         l1144 0655  
                       l1136 0628                         l1128 05FB                         l1152 0428  
                       l1232 04C1                         l1224 04A2                         l1216 0490  
                       l1240 0454                         l1208 03BE                         l1056 0394  
                       l1080 03D8                         l1048 0355                         l1304 07D0  
                       l1066 03ED                         l1138 0631                         l1154 0430  
                       l1146 0417                         l1170 0501                         l1162 04CC  
                       l1226 04B3                         l1218 0493                         l1234 04C7  
                       l1250 0470                         l1242 0457                         l1058 039A  
                       l1082 03DE                         l1074 03C3                         l1306 07D9  
                       l1068 0401                         l1332 0440                         l1148 0418  
                       l1156 0438                         l1164 04CD                         l1228 04B9  
                       l1252 0476                         l1244 045E                         l1084 03E5  
                       l1076 03C9                         l1092 0320                         l1180 052D  
                       l1172 0516                         l1260 065F                         l1166 04D1  
                       l1254 047D                         l1246 0462                         l1238 044C  
                       l1078 03D0                         l1190 054D                         l1182 0537  
                       l1174 051F                         l1270 0686                         l1262 0662  
                       l1168 04FD                         l1248 0466                         l1256 0483  
                       l1088 03E7                         l1192 055C                         l1280 06A6  
                       l1272 068C                         l1264 0670                         l1098 0321  
                       l1194 056E                         l1178 0521                         l1290 0704  
                       l1282 06BA                         l1274 0696                         l1266 0675  
                       l1188 0541                         l1292 0727                         l1284 06BF  
                       l1276 069C                         l1268 067D                         l1198 039E  
                       l1294 0759                         l1286 06C3                         l1278 06A0  
                       l1296 078B                         l1288 06EB                         l1298 07B0  
      __end_of_ds18b20_start 03E9                         STR_1 0013                         STR_2 0020  
                       u1000 0696                         u1001 0695                         u1010 069C  
                       u1011 069B                         u1030 06BA                         u1031 06B9  
                       u1025 06AB                         u1107 03E0                         u1117 0387  
                       u1207 064A                         u1127 0391                         u1217 0659  
                       u1137 05E1                         u1057 066A                         u1227 0410  
                       u1147 05F0                         u1067 07E1                         u1237 05C8  
                       u1157 05FF                         u1077 0350                         u1167 060E  
                       u1087 03CB                         u1177 061D                         u1097 03D5  
                       u1187 062C                         u1197 063B                         _main 065F  
                       _temp 0020                         btemp 007E                         start 0000  
           ?_LCD_writeNibble 0070           __size_of_LCD_begin 0093           __size_of_LCD_print 0049  
           __end_of_LCD_goTo 044C                        ?_main 0070             _ds18b20_read_bit 037A  
            __end_of___lwdiv 04CC              __end_of___lwmod 0488                        pclath 000A  
                LCD_goTo@col 0078                  LCD_goTo@row 0075                        status 0003  
                      wtemp0 007E              __initialization 07EB                 __end_of_main 07EB  
                     ??_main 0031                    ??_LCD_cmd 0072            __end_of_LCD_begin 065F  
 ds18b20_read@raw_temp_value 0077            __end_of_LCD_print 0515            _ds18b20_read_byte 0358  
                     _ANSELH 0189           ?_ds18b20_read_byte 0070                       _TRISB1 0431  
                     _TRISD0 0440                       _TRISD1 0441                       _TRISD2 0442  
                     _TRISD3 0443                       _TRISD4 0444                       _TRISD5 0445  
 __end_of_ds18b20_write_byte 033B          ??_ds18b20_read_byte 0071          ds18b20_write_byte@i 0074  
                     ___wmul 039E                    ??___lwdiv 007A                    ??___lwmod 002F  
    ds18b20_write_byte@value 0073    __end_of_ds18b20_read_byte 037A            _ds18b20_write_bit 033B  
         ?_ds18b20_write_bit 0070      __end_of__initialization 07FC                    ?_LCD_goTo 0075  
        ??_ds18b20_write_bit 0070               __pcstackCOMMON 0070                 __pidataBANK0 0301  
              ?_ds18b20_read 0070    __end_of_ds18b20_write_bit 0358                   __pbssBANK0 0035  
   __end_of_ds18b20_read_bit 039E                   ??_LCD_goTo 0076                   __pmaintext 065F  
         ds18b20_read_byte@i 0074                      ?___wmul 0070               ??_ds18b20_read 0075  
                    _LCD_cmd 03E9   __size_of_ds18b20_read_byte 0022                   __stringtab 0003  
           LCD_writeNibble@n 0071       ds18b20_read_byte@value 0073              __size_of___wmul 0025  
                    ___lwdiv 0488                      ___lwmod 044C     __size_of_LCD_writeNibble 005C  
     __size_of_ds18b20_start 0026                      __ptext1 0515                      __ptext2 031F  
                    __ptext3 033B                      __ptext4 03C3                      __ptext5 0358  
                    __ptext6 037A                      __ptext7 039E                      __ptext8 044C  
                    __ptext9 0488   __size_of_ds18b20_write_bit 001D                    _LCD_begin 05CC  
       end_of_initialization 07FC                    _LCD_print 04CC           _ds18b20_write_byte 031F  
        ?_ds18b20_write_byte 0070                   ?_LCD_begin 0070                _ds18b20_start 03C3  
                 ?_LCD_print 0072         __end_of_ds18b20_read 0570         ??_ds18b20_write_byte 0072  
          __size_of_LCD_goTo 0036               __end_of___wmul 03C3                __pbitbssBANK0 01A0  
        start_initialization 07EB            ??_LCD_writeNibble 0070       ds18b20_write_bit@value 0071  
                 LCD_print@i 0075               ?_ds18b20_start 0070            ?_ds18b20_read_bit 0070  
         ??_ds18b20_read_bit 0070                     ??___wmul 0074                   init_fetch0 030C  
                __pdataBANK0 0020                     ?_LCD_cmd 0070                    ___latbits 0002  
              __pcstackBANK0 002B                  ??_LCD_begin 0075                  ??_LCD_print 0074  
      ds18b20_read_bit@value 01A0             ___lwdiv@dividend 0078                     ?___lwdiv 0076  
                   ?___lwmod 002B                    __pstrings 0003              ??_ds18b20_start 0070  
           ___lwdiv@quotient 007B        __size_of_ds18b20_read 005B               ___wmul@product 0074  
                   _LCD_goTo 0416                  __stringbase 0012            ___wmul@multiplier 0070  
               _ds18b20_read 0515             __size_of_LCD_cmd 002D              _LCD_writeNibble 0570  
           __size_of___lwdiv 0044             __size_of___lwmod 003C           __end_of__stringtab 0013  
             LCD_cmd@Command 0074              ___lwdiv@divisor 0076              ___lwdiv@counter 007D  
                   __ptext10 04CC                     __ptext11 0416                     __ptext12 05CC  
                   __ptext13 03E9                     __ptext14 0570             LCD_print@LCD_Str 0072  
              __size_of_main 018C  __size_of_ds18b20_write_byte 001C                     _raw_temp 0035  
  __size_of_ds18b20_read_bit 0024                     init_ram0 0310             ___lwmod@dividend 002D  
    __end_of_LCD_writeNibble 05CC                    stringcode 000D              ___lwmod@divisor 002B  
            ___lwmod@counter 0030                     stringdir 000D                     stringtab 0003  
