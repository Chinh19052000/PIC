

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Jan 27 17:25:05 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	intentry,global,class=CODE,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.20
    17                           ; Generated 12/02/2020 GMT
    18                           ; 
    19                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F887 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  008F                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  0105                     	;# 
   114  0107                     	;# 
   115  0108                     	;# 
   116  0109                     	;# 
   117  010C                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  0185                     	;# 
   123  0187                     	;# 
   124  0188                     	;# 
   125  0189                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  0000                     	;# 
   129  0001                     	;# 
   130  0002                     	;# 
   131  0003                     	;# 
   132  0004                     	;# 
   133  0005                     	;# 
   134  0006                     	;# 
   135  0007                     	;# 
   136  0008                     	;# 
   137  0009                     	;# 
   138  000A                     	;# 
   139  000B                     	;# 
   140  000C                     	;# 
   141  000D                     	;# 
   142  000E                     	;# 
   143  000E                     	;# 
   144  000F                     	;# 
   145  0010                     	;# 
   146  0011                     	;# 
   147  0012                     	;# 
   148  0013                     	;# 
   149  0014                     	;# 
   150  0015                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0017                     	;# 
   154  0018                     	;# 
   155  0019                     	;# 
   156  001A                     	;# 
   157  001B                     	;# 
   158  001B                     	;# 
   159  001C                     	;# 
   160  001D                     	;# 
   161  001E                     	;# 
   162  001F                     	;# 
   163  0081                     	;# 
   164  0085                     	;# 
   165  0086                     	;# 
   166  0087                     	;# 
   167  0088                     	;# 
   168  0089                     	;# 
   169  008C                     	;# 
   170  008D                     	;# 
   171  008E                     	;# 
   172  008F                     	;# 
   173  0090                     	;# 
   174  0091                     	;# 
   175  0092                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0095                     	;# 
   181  0096                     	;# 
   182  0097                     	;# 
   183  0098                     	;# 
   184  0099                     	;# 
   185  009A                     	;# 
   186  009B                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  0105                     	;# 
   192  0107                     	;# 
   193  0108                     	;# 
   194  0109                     	;# 
   195  010C                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  0185                     	;# 
   201  0187                     	;# 
   202  0188                     	;# 
   203  0189                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206  0000                     	;# 
   207  0001                     	;# 
   208  0002                     	;# 
   209  0003                     	;# 
   210  0004                     	;# 
   211  0005                     	;# 
   212  0006                     	;# 
   213  0007                     	;# 
   214  0008                     	;# 
   215  0009                     	;# 
   216  000A                     	;# 
   217  000B                     	;# 
   218  000C                     	;# 
   219  000D                     	;# 
   220  000E                     	;# 
   221  000E                     	;# 
   222  000F                     	;# 
   223  0010                     	;# 
   224  0011                     	;# 
   225  0012                     	;# 
   226  0013                     	;# 
   227  0014                     	;# 
   228  0015                     	;# 
   229  0015                     	;# 
   230  0016                     	;# 
   231  0017                     	;# 
   232  0018                     	;# 
   233  0019                     	;# 
   234  001A                     	;# 
   235  001B                     	;# 
   236  001B                     	;# 
   237  001C                     	;# 
   238  001D                     	;# 
   239  001E                     	;# 
   240  001F                     	;# 
   241  0081                     	;# 
   242  0085                     	;# 
   243  0086                     	;# 
   244  0087                     	;# 
   245  0088                     	;# 
   246  0089                     	;# 
   247  008C                     	;# 
   248  008D                     	;# 
   249  008E                     	;# 
   250  008F                     	;# 
   251  0090                     	;# 
   252  0091                     	;# 
   253  0092                     	;# 
   254  0093                     	;# 
   255  0093                     	;# 
   256  0093                     	;# 
   257  0094                     	;# 
   258  0095                     	;# 
   259  0096                     	;# 
   260  0097                     	;# 
   261  0098                     	;# 
   262  0099                     	;# 
   263  009A                     	;# 
   264  009B                     	;# 
   265  009C                     	;# 
   266  009D                     	;# 
   267  009E                     	;# 
   268  009F                     	;# 
   269  0105                     	;# 
   270  0107                     	;# 
   271  0108                     	;# 
   272  0109                     	;# 
   273  010C                     	;# 
   274  010C                     	;# 
   275  010D                     	;# 
   276  010E                     	;# 
   277  010F                     	;# 
   278  0185                     	;# 
   279  0187                     	;# 
   280  0188                     	;# 
   281  0189                     	;# 
   282  018C                     	;# 
   283  018D                     	;# 
   284  0014                     _SSPCON	set	20
   285  0013                     _SSPBUF	set	19
   286  0006                     _PORTB	set	6
   287  0008                     _PORTD	set	8
   288  005E                     _PEIE	set	94
   289  005F                     _GIE	set	95
   290  0063                     _SSPIF	set	99
   291  0094                     _SSPSTAT	set	148
   292  0094                     _SSPSTATbits	set	148
   293  009F                     _ADCON1	set	159
   294  0088                     _TRISD	set	136
   295  0086                     _TRISB	set	134
   296  043B                     _TRISC3	set	1083
   297  043D                     _TRISC5	set	1085
   298  042D                     _TRISA5	set	1069
   299  0463                     _SSPIE	set	1123
   300  040F                     _nRBPU	set	1039
   301  0189                     _ANSELH	set	393
   302  0188                     _ANSEL	set	392
   303                           
   304                           	psect	cinit
   305  000F                     start_initialization:	
   306                           ; #config settings
   307                           
   308  000F                     __initialization:
   309  000F                     end_of_initialization:	
   310                           ;End of C runtime variable initialization code
   311                           
   312  000F                     __end_of__initialization:
   313  000F  0183               	clrf	3
   314  0010  120A  118A  2813   	ljmp	_main	;jump to C main() function
   315                           
   316                           	psect	cstackCOMMON
   317  0070                     __pcstackCOMMON:
   318  0070                     ?_SPI_read:
   319  0070                     ??_SPI_read:	
   320                           ; 1 bytes @ 0x0
   321                           
   322  0070                     ?_SPI_sendData:	
   323                           ; 1 bytes @ 0x0
   324                           
   325  0070                     ??_SPI_sendData:	
   326                           ; 1 bytes @ 0x0
   327                           
   328  0070                     ?_SPI_Slave_Read:	
   329                           ; 1 bytes @ 0x0
   330                           
   331  0070                     ?_main:	
   332                           ; 1 bytes @ 0x0
   333                           
   334  0070                     ?_SPI_receiveAndWait:	
   335                           ; 1 bytes @ 0x0
   336                           
   337  0070                     ??_SPI_receiveAndWait:	
   338                           ; 1 bytes @ 0x0
   339                           
   340  0070                     SPI_sendData@data:	
   341                           ; 1 bytes @ 0x0
   342                           
   343                           
   344                           ; 1 bytes @ 0x0
   345  0070                     	ds	1
   346  0071                     ??_SPI_Slave_Read:
   347                           
   348                           ; 1 bytes @ 0x1
   349  0071                     	ds	2
   350  0073                     ?_SPI_initialize:
   351  0073                     SPI_initialize@sDataSample:	
   352                           ; 1 bytes @ 0x3
   353                           
   354                           
   355                           ; 1 bytes @ 0x3
   356  0073                     	ds	1
   357  0074                     SPI_initialize@sClockIdle:
   358                           
   359                           ; 1 bytes @ 0x4
   360  0074                     	ds	1
   361  0075                     SPI_initialize@sTransmitEdge:
   362                           
   363                           ; 1 bytes @ 0x5
   364  0075                     	ds	1
   365  0076                     ??_SPI_initialize:
   366  0076                     SPI_initialize@sType:	
   367                           ; 1 bytes @ 0x6
   368                           
   369                           
   370                           ; 1 bytes @ 0x6
   371  0076                     	ds	1
   372  0077                     ??_main:
   373                           
   374                           ; 1 bytes @ 0x7
   375  0077                     	ds	2
   376                           
   377                           	psect	maintext
   378  0013                     __pmaintext:	
   379 ;;
   380 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   381 ;;
   382 ;; *************** function _main *****************
   383 ;; Defined at:
   384 ;;		line 40 in file "newmain.c"
   385 ;; Parameters:    Size  Location     Type
   386 ;;		None
   387 ;; Auto vars:     Size  Location     Type
   388 ;;		None
   389 ;; Return value:  Size  Location     Type
   390 ;;                  1    wreg      void 
   391 ;; Registers used:
   392 ;;		wreg, status,2, status,0, pclath, cstack
   393 ;; Tracked objects:
   394 ;;		On entry : B00/0
   395 ;;		On exit  : 0/0
   396 ;;		Unchanged: 0/0
   397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   398 ;;      Params:         0       0       0       0       0
   399 ;;      Locals:         0       0       0       0       0
   400 ;;      Temps:          2       0       0       0       0
   401 ;;      Totals:         2       0       0       0       0
   402 ;;Total ram usage:        2 bytes
   403 ;; Hardware stack levels required when called:    4
   404 ;; This function calls:
   405 ;;		_SPI_initialize
   406 ;; This function is called by:
   407 ;;		Startup code after reset
   408 ;; This function uses a non-reentrant model
   409 ;;
   410                           
   411                           
   412                           ;psect for function _main
   413  0013                     _main:
   414  0013                     l742:	
   415                           ;incstack = 0
   416                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   417                           
   418                           
   419                           ;newmain.c: 42:   nRBPU = 0;
   420  0013  1683               	bsf	3,5	;RP0=1, select bank1
   421  0014  1303               	bcf	3,6	;RP1=0, select bank1
   422  0015  1381               	bcf	1,7	;volatile
   423  0016                     l744:
   424                           
   425                           ;newmain.c: 43:   TRISB = 0xFF;
   426  0016  30FF               	movlw	255
   427  0017  0086               	movwf	6	;volatile
   428  0018                     l746:
   429                           
   430                           ;newmain.c: 44:   TRISD = 0x00;
   431  0018  0188               	clrf	8	;volatile
   432  0019                     l748:
   433                           
   434                           ;newmain.c: 45:   PORTD = 0x00;
   435  0019  1283               	bcf	3,5	;RP0=0, select bank0
   436  001A  1303               	bcf	3,6	;RP1=0, select bank0
   437  001B  0188               	clrf	8	;volatile
   438                           
   439                           ;newmain.c: 46:   PORTB = 0xFF;
   440  001C  30FF               	movlw	255
   441  001D  0086               	movwf	6	;volatile
   442  001E                     l750:
   443                           
   444                           ;newmain.c: 47:   ANSEL = ANSELH =0;
   445  001E  1683               	bsf	3,5	;RP0=1, select bank3
   446  001F  1703               	bsf	3,6	;RP1=1, select bank3
   447  0020  0189               	clrf	9	;volatile
   448  0021  0188               	clrf	8	;volatile
   449  0022                     l752:
   450                           
   451                           ;newmain.c: 48:   GIE = 1;
   452  0022  178B               	bsf	11,7	;volatile
   453  0023                     l754:
   454                           
   455                           ;newmain.c: 49:   PEIE = 1;
   456  0023  170B               	bsf	11,6	;volatile
   457  0024                     l756:
   458                           
   459                           ;newmain.c: 50:   SSPIF = 0;
   460  0024  1283               	bcf	3,5	;RP0=0, select bank0
   461  0025  1303               	bcf	3,6	;RP1=0, select bank0
   462  0026  118C               	bcf	12,3	;volatile
   463  0027                     l758:
   464                           
   465                           ;newmain.c: 51:   SSPIE = 1;
   466  0027  1683               	bsf	3,5	;RP0=1, select bank1
   467  0028  1303               	bcf	3,6	;RP1=0, select bank1
   468  0029  158C               	bsf	12,3	;volatile
   469  002A                     l760:
   470                           
   471                           ;newmain.c: 52:   ADCON1 = 0;
   472  002A  019F               	clrf	31	;volatile
   473  002B                     l762:
   474                           
   475                           ;newmain.c: 53:   TRISA5 = 1;
   476  002B  1685               	bsf	5,5	;volatile
   477  002C                     l764:
   478                           
   479                           ;newmain.c: 55:   SPI_initialize(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE
      +                          _LOW, SPI_IDLE_2_ACTIVE);
   480  002C  01F3               	clrf	SPI_initialize@sDataSample
   481  002D  01F4               	clrf	SPI_initialize@sClockIdle
   482  002E  01F5               	clrf	SPI_initialize@sTransmitEdge
   483  002F  3024               	movlw	36
   484  0030  120A  118A  2060  120A  118A  	fcall	_SPI_initialize
   485  0035                     l766:
   486                           
   487                           ;newmain.c: 58:   {;newmain.c: 60:     _delay((unsigned long)((5)*(8000000/4000.0)));
   488  0035  300D               	movlw	13
   489  0036  00F8               	movwf	??_main+1
   490  0037  30FB               	movlw	251
   491  0038  00F7               	movwf	??_main
   492  0039                     u57:
   493  0039  0BF7               	decfsz	??_main,f
   494  003A  2839               	goto	u57
   495  003B  0BF8               	decfsz	??_main+1,f
   496  003C  2839               	goto	u57
   497  003D  283E               	nop2
   498  003E  2835               	goto	l766
   499  003F  120A  118A  280C   	ljmp	start
   500  0042                     __end_of_main:
   501                           
   502                           	psect	text1
   503  0060                     __ptext1:	
   504 ;; *************** function _SPI_initialize *****************
   505 ;; Defined at:
   506 ;;		line 28 in file "SPI.c"
   507 ;; Parameters:    Size  Location     Type
   508 ;;  sType           1    wreg     enum E1264
   509 ;;  sDataSample     1    3[COMMON] enum E1272
   510 ;;  sClockIdle      1    4[COMMON] enum E1276
   511 ;;  sTransmitEdg    1    5[COMMON] enum E1280
   512 ;; Auto vars:     Size  Location     Type
   513 ;;  sType           1    6[COMMON] enum E1264
   514 ;; Return value:  Size  Location     Type
   515 ;;                  1    wreg      void 
   516 ;; Registers used:
   517 ;;		wreg, status,2, status,0
   518 ;; Tracked objects:
   519 ;;		On entry : 0/0
   520 ;;		On exit  : 0/0
   521 ;;		Unchanged: 0/0
   522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   523 ;;      Params:         3       0       0       0       0
   524 ;;      Locals:         1       0       0       0       0
   525 ;;      Temps:          0       0       0       0       0
   526 ;;      Totals:         4       0       0       0       0
   527 ;;Total ram usage:        4 bytes
   528 ;; Hardware stack levels used:    1
   529 ;; Hardware stack levels required when called:    3
   530 ;; This function calls:
   531 ;;		Nothing
   532 ;; This function is called by:
   533 ;;		_main
   534 ;; This function uses a non-reentrant model
   535 ;;
   536                           
   537                           
   538                           ;psect for function _SPI_initialize
   539  0060                     _SPI_initialize:
   540                           
   541                           ;incstack = 0
   542                           ; Regs used in _SPI_initialize: [wreg+status,2+status,0]
   543                           ;SPI_initialize@sType stored from wreg
   544  0060  00F6               	movwf	SPI_initialize@sType
   545  0061                     l732:
   546                           
   547                           ;SPI.c: 29:     TRISC5 = 0;
   548  0061  1683               	bsf	3,5	;RP0=1, select bank1
   549  0062  1303               	bcf	3,6	;RP1=0, select bank1
   550  0063  1287               	bcf	7,5	;volatile
   551                           
   552                           ;SPI.c: 30:     if (sType & 0b00000100)
   553  0064  1D76               	btfss	SPI_initialize@sType,2
   554  0065  2867               	goto	u41
   555  0066  2868               	goto	u40
   556  0067                     u41:
   557  0067  286C               	goto	l738
   558  0068                     u40:
   559  0068                     l734:
   560                           
   561                           ;SPI.c: 31:     {;SPI.c: 32:         SSPSTAT = sTransmitEdge;
   562  0068  0875               	movf	SPI_initialize@sTransmitEdge,w
   563  0069  0094               	movwf	20	;volatile
   564  006A                     l736:
   565                           
   566                           ;SPI.c: 33:         TRISC3 = 1;
   567  006A  1587               	bsf	7,3	;volatile
   568                           
   569                           ;SPI.c: 34:     }
   570  006B  2870               	goto	l78
   571  006C                     l738:
   572                           
   573                           ;SPI.c: 36:     {;SPI.c: 37:         SSPSTAT = sDataSample | sTransmitEdge;
   574  006C  0873               	movf	SPI_initialize@sDataSample,w
   575  006D  0475               	iorwf	SPI_initialize@sTransmitEdge,w
   576  006E  0094               	movwf	20	;volatile
   577  006F                     l740:
   578                           
   579                           ;SPI.c: 38:         TRISC3 = 0;
   580  006F  1187               	bcf	7,3	;volatile
   581  0070                     l78:	
   582                           ;SPI.c: 39:     }
   583                           
   584                           
   585                           ;SPI.c: 40:     SSPCON = sType | sClockIdle;
   586  0070  0876               	movf	SPI_initialize@sType,w
   587  0071  0474               	iorwf	SPI_initialize@sClockIdle,w
   588  0072  1283               	bcf	3,5	;RP0=0, select bank0
   589  0073  1303               	bcf	3,6	;RP1=0, select bank0
   590  0074  0094               	movwf	20	;volatile
   591  0075                     l79:
   592  0075  0008               	return
   593  0076                     __end_of_SPI_initialize:
   594                           
   595                           	psect	text2
   596  0042                     __ptext2:	
   597 ;; *************** function _SPI_Slave_Read *****************
   598 ;; Defined at:
   599 ;;		line 30 in file "newmain.c"
   600 ;; Parameters:    Size  Location     Type
   601 ;;		None
   602 ;; Auto vars:     Size  Location     Type
   603 ;;		None
   604 ;; Return value:  Size  Location     Type
   605 ;;                  1    wreg      void 
   606 ;; Registers used:
   607 ;;		wreg, status,2, status,0, pclath, cstack
   608 ;; Tracked objects:
   609 ;;		On entry : 0/0
   610 ;;		On exit  : 0/0
   611 ;;		Unchanged: 0/0
   612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   613 ;;      Params:         0       0       0       0       0
   614 ;;      Locals:         0       0       0       0       0
   615 ;;      Temps:          2       0       0       0       0
   616 ;;      Totals:         2       0       0       0       0
   617 ;;Total ram usage:        2 bytes
   618 ;; Hardware stack levels used:    1
   619 ;; Hardware stack levels required when called:    2
   620 ;; This function calls:
   621 ;;		_SPI_read
   622 ;;		_SPI_sendData
   623 ;; This function is called by:
   624 ;;		Interrupt level 1
   625 ;; This function uses a non-reentrant model
   626 ;;
   627                           
   628                           
   629                           ;psect for function _SPI_Slave_Read
   630  0042                     _SPI_Slave_Read:
   631  0042                     i1l694:
   632                           
   633                           ;newmain.c: 32:   if(SSPIF == 1)
   634  0042  1283               	bcf	3,5	;RP0=0, select bank0
   635  0043  1303               	bcf	3,6	;RP1=0, select bank0
   636  0044  1D8C               	btfss	12,3	;volatile
   637  0045  2847               	goto	u3_21
   638  0046  2848               	goto	u3_20
   639  0047                     u3_21:
   640  0047  2859               	goto	i1l40
   641  0048                     u3_20:
   642  0048                     i1l696:
   643                           
   644                           ;newmain.c: 33:   {;newmain.c: 34:     PORTD = SPI_read();
   645  0048  120A  118A  2076  120A  118A  	fcall	_SPI_read
   646  004D  1283               	bcf	3,5	;RP0=0, select bank0
   647  004E  1303               	bcf	3,6	;RP1=0, select bank0
   648  004F  0088               	movwf	8	;volatile
   649                           
   650                           ;newmain.c: 35:     SPI_sendData(PORTB);
   651  0050  0806               	movf	6,w	;volatile
   652  0051  120A  118A  2086  120A  118A  	fcall	_SPI_sendData
   653  0056                     i1l698:
   654                           
   655                           ;newmain.c: 36:     SSPIF = 0;
   656  0056  1283               	bcf	3,5	;RP0=0, select bank0
   657  0057  1303               	bcf	3,6	;RP1=0, select bank0
   658  0058  118C               	bcf	12,3	;volatile
   659  0059                     i1l40:
   660  0059  0872               	movf	??_SPI_Slave_Read+1,w
   661  005A  008A               	movwf	10
   662  005B  0E71               	swapf	??_SPI_Slave_Read,w
   663  005C  0083               	movwf	3
   664  005D  0EFE               	swapf	btemp,f
   665  005E  0E7E               	swapf	btemp,w
   666  005F  0009               	retfie
   667  0060                     __end_of_SPI_Slave_Read:
   668                           
   669                           	psect	intentry
   670  0004                     __pintentry:	
   671                           ;incstack = 0
   672                           ; Regs used in _SPI_Slave_Read: [wreg+status,2+status,0+pclath+cstack]
   673                           
   674  0004                     interrupt_function:
   675  007E                     saved_w	set	btemp
   676  0004  00FE               	movwf	btemp
   677  0005  0E03               	swapf	3,w
   678  0006  00F1               	movwf	??_SPI_Slave_Read
   679  0007  080A               	movf	10,w
   680  0008  00F2               	movwf	??_SPI_Slave_Read+1
   681  0009  120A  118A  2842   	ljmp	_SPI_Slave_Read
   682                           
   683                           	psect	text3
   684  0086                     __ptext3:	
   685 ;; *************** function _SPI_sendData *****************
   686 ;; Defined at:
   687 ;;		line 43 in file "SPI.c"
   688 ;; Parameters:    Size  Location     Type
   689 ;;  data            1    wreg     unsigned char 
   690 ;; Auto vars:     Size  Location     Type
   691 ;;  data            1    0[COMMON] unsigned char 
   692 ;; Return value:  Size  Location     Type
   693 ;;                  1    wreg      void 
   694 ;; Registers used:
   695 ;;		wreg
   696 ;; Tracked objects:
   697 ;;		On entry : 0/0
   698 ;;		On exit  : 0/0
   699 ;;		Unchanged: 0/0
   700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   701 ;;      Params:         0       0       0       0       0
   702 ;;      Locals:         1       0       0       0       0
   703 ;;      Temps:          0       0       0       0       0
   704 ;;      Totals:         1       0       0       0       0
   705 ;;Total ram usage:        1 bytes
   706 ;; Hardware stack levels used:    1
   707 ;; This function calls:
   708 ;;		Nothing
   709 ;; This function is called by:
   710 ;;		_SPI_Slave_Read
   711 ;; This function uses a non-reentrant model
   712 ;;
   713                           
   714                           
   715                           ;psect for function _SPI_sendData
   716  0086                     _SPI_sendData:
   717                           
   718                           ;incstack = 0
   719                           ; Regs used in _SPI_sendData: [wreg]
   720                           ;SPI_sendData@data stored from wreg
   721  0086  00F0               	movwf	SPI_sendData@data
   722  0087                     i1l682:
   723                           
   724                           ;SPI.c: 44:     SSPBUF = data;
   725  0087  0870               	movf	SPI_sendData@data,w
   726  0088  1283               	bcf	3,5	;RP0=0, select bank0
   727  0089  1303               	bcf	3,6	;RP1=0, select bank0
   728  008A  0093               	movwf	19	;volatile
   729  008B                     i1l82:
   730  008B  0008               	return
   731  008C                     __end_of_SPI_sendData:
   732                           
   733                           	psect	text4
   734  0076                     __ptext4:	
   735 ;; *************** function _SPI_read *****************
   736 ;; Defined at:
   737 ;;		line 14 in file "SPI.c"
   738 ;; Parameters:    Size  Location     Type
   739 ;;		None
   740 ;; Auto vars:     Size  Location     Type
   741 ;;		None
   742 ;; Return value:  Size  Location     Type
   743 ;;                  1    wreg      unsigned char 
   744 ;; Registers used:
   745 ;;		wreg, status,2, status,0, pclath, cstack
   746 ;; Tracked objects:
   747 ;;		On entry : 0/0
   748 ;;		On exit  : 0/0
   749 ;;		Unchanged: 0/0
   750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   751 ;;      Params:         0       0       0       0       0
   752 ;;      Locals:         0       0       0       0       0
   753 ;;      Temps:          0       0       0       0       0
   754 ;;      Totals:         0       0       0       0       0
   755 ;;Total ram usage:        0 bytes
   756 ;; Hardware stack levels used:    1
   757 ;; Hardware stack levels required when called:    1
   758 ;; This function calls:
   759 ;;		_SPI_receiveAndWait
   760 ;; This function is called by:
   761 ;;		_SPI_Slave_Read
   762 ;; This function uses a non-reentrant model
   763 ;;
   764                           
   765                           
   766                           ;psect for function _SPI_read
   767  0076                     _SPI_read:
   768  0076                     i1l676:	
   769                           ;incstack = 0
   770                           ; Regs used in _SPI_read: [wreg+status,2+status,0+pclath+cstack]
   771                           
   772                           
   773                           ;SPI.c: 16:     SPI_receiveAndWait();
   774  0076  120A  118A  207F  120A  118A  	fcall	_SPI_receiveAndWait
   775  007B                     i1l678:
   776                           
   777                           ;SPI.c: 17:     return (SSPBUF);
   778  007B  1283               	bcf	3,5	;RP0=0, select bank0
   779  007C  1303               	bcf	3,6	;RP1=0, select bank0
   780  007D  0813               	movf	19,w	;volatile
   781  007E                     i1l69:
   782  007E  0008               	return
   783  007F                     __end_of_SPI_read:
   784                           
   785                           	psect	text5
   786  007F                     __ptext5:	
   787 ;; *************** function _SPI_receiveAndWait *****************
   788 ;; Defined at:
   789 ;;		line 10 in file "SPI.c"
   790 ;; Parameters:    Size  Location     Type
   791 ;;		None
   792 ;; Auto vars:     Size  Location     Type
   793 ;;		None
   794 ;; Return value:  Size  Location     Type
   795 ;;                  1    wreg      void 
   796 ;; Registers used:
   797 ;;		None
   798 ;; Tracked objects:
   799 ;;		On entry : 0/0
   800 ;;		On exit  : 0/0
   801 ;;		Unchanged: 0/0
   802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   803 ;;      Params:         0       0       0       0       0
   804 ;;      Locals:         0       0       0       0       0
   805 ;;      Temps:          0       0       0       0       0
   806 ;;      Totals:         0       0       0       0       0
   807 ;;Total ram usage:        0 bytes
   808 ;; Hardware stack levels used:    1
   809 ;; This function calls:
   810 ;;		Nothing
   811 ;; This function is called by:
   812 ;;		_SPI_read
   813 ;; This function uses a non-reentrant model
   814 ;;
   815                           
   816                           
   817                           ;psect for function _SPI_receiveAndWait
   818  007F                     _SPI_receiveAndWait:
   819  007F                     i1l674:	
   820                           ;incstack = 0
   821                           ; Regs used in _SPI_receiveAndWait: []
   822                           
   823  007F                     i1l63:	
   824                           ;SPI.c: 11:     while (!SSPSTATbits.BF);
   825                           
   826  007F  1683               	bsf	3,5	;RP0=1, select bank1
   827  0080  1303               	bcf	3,6	;RP1=0, select bank1
   828  0081  1C14               	btfss	20,0	;volatile
   829  0082  2884               	goto	u1_21
   830  0083  2885               	goto	u1_20
   831  0084                     u1_21:
   832  0084  287F               	goto	i1l63
   833  0085                     u1_20:
   834  0085                     i1l66:
   835  0085  0008               	return
   836  0086                     __end_of_SPI_receiveAndWait:
   837  007E                     btemp	set	126	;btemp
   838  007E                     wtemp0	set	126
   839                           
   840                           	psect	config
   841                           
   842                           ;Config register CONFIG1 @ 0x2007
   843                           ;	Oscillator Selection bits
   844                           ;	FOSC = EXTRC_CLKOUT, RC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, RC on RA7/
      +                          OSC1/CLKIN
   845                           ;	Watchdog Timer Enable bit
   846                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   847                           ;	Power-up Timer Enable bit
   848                           ;	PWRTE = OFF, PWRT disabled
   849                           ;	RE3/MCLR pin function select bit
   850                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   851                           ;	Code Protection bit
   852                           ;	CP = OFF, Program memory code protection is disabled
   853                           ;	Data Code Protection bit
   854                           ;	CPD = OFF, Data memory code protection is disabled
   855                           ;	Brown Out Reset Selection bits
   856                           ;	BOREN = OFF, BOR disabled
   857                           ;	Internal External Switchover bit
   858                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   859                           ;	Fail-Safe Clock Monitor Enabled bit
   860                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   861                           ;	Low Voltage Programming Enable bit
   862                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   863                           ;	In-Circuit Debugger Mode bit
   864                           ;	DEBUG = 0x1, unprogrammed default
   865  2007                     	org	8199
   866  2007  20D7               	dw	8407
   867                           
   868                           ;Config register CONFIG2 @ 0x2008
   869                           ;	Brown-out Reset Selection bit
   870                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   871                           ;	Flash Program Memory Self Write Enable bits
   872                           ;	WRT = OFF, Write protection off
   873  2008                     	org	8200
   874  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9       9
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_SPI_initialize

Critical Paths under _SPI_Slave_Read in COMMON

    _SPI_Slave_Read->_SPI_sendData

Critical Paths under _main in BANK0

    None.

Critical Paths under _SPI_Slave_Read in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _SPI_Slave_Read in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _SPI_Slave_Read in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _SPI_Slave_Read in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     360
                                              7 COMMON     2     2      0
                     _SPI_initialize
 ---------------------------------------------------------------------------------
 (1) _SPI_initialize                                       4     1      3     360
                                              3 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _SPI_Slave_Read                                       2     2      0      15
                                              1 COMMON     2     2      0
                           _SPI_read
                       _SPI_sendData
 ---------------------------------------------------------------------------------
 (3) _SPI_sendData                                         1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _SPI_read                                             0     0      0       0
                 _SPI_receiveAndWait
 ---------------------------------------------------------------------------------
 (4) _SPI_receiveAndWait                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SPI_initialize

 _SPI_Slave_Read (ROOT)
   _SPI_read
     _SPI_receiveAndWait
   _SPI_sendData

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Jan 27 17:25:05 2021

                _SSPSTATbits 0094                           l78 0070                           l79 0075  
                         u40 0068                           u41 0067                           u57 0039  
                        l740 006F                          l732 0061                          l734 0068  
                        l750 001E                          l742 0013                          l736 006A  
                        l760 002A                          l752 0022                          l744 0016  
                        l738 006C                          l762 002B                          l754 0023  
                        l746 0018                          l764 002C                          l756 0024  
                        l748 0019                          l766 0035                          l758 0027  
                        _GIE 005F        __size_of_SPI_sendData 0006                         _PEIE 005E  
                       i1l40 0059                         i1l63 007F                         i1l66 0085  
                       i1l82 008B                         i1l69 007E                         u1_20 0085  
                       u1_21 0084                         u3_20 0048                         u3_21 0047  
                       _main 0013                         btemp 007E               _SPI_Slave_Read 0042  
                       start 000C                 _SPI_sendData 0086      __size_of_SPI_initialize 0016  
                      ?_main 0070                        _ANSEL 0188                        i1l674 007F  
                      i1l682 0087                        i1l676 0076                        i1l678 007B  
                      i1l694 0042                        i1l696 0048                        i1l698 0056  
                      _PORTB 0006                        _PORTD 0008                        _TRISB 0086  
                      _TRISD 0088                        _SSPIE 0463                        _SSPIF 0063  
                      _nRBPU 040F                        pclath 000A             __end_of_SPI_read 007F  
     __end_of_SPI_Slave_Read 0060                        status 0003                        wtemp0 007E  
            __initialization 000F                 __end_of_main 0042                       ??_main 0077  
                     _ADCON1 009F                       _ANSELH 0189              ?_SPI_Slave_Read 0070  
                     _TRISA5 042D                       _TRISC3 043B                       _TRISC5 043D  
                     _SSPBUF 0013                       _SSPCON 0014                       saved_w 007E  
    __end_of__initialization 000F               __pcstackCOMMON 0070               _SPI_initialize 0060  
 __end_of_SPI_receiveAndWait 0086                    ?_SPI_read 0070                   __pmaintext 0013  
     __end_of_SPI_initialize 0076                   __pintentry 0004                   ??_SPI_read 0070  
                    _SSPSTAT 0094    SPI_initialize@sDataSample 0073              ?_SPI_initialize 0073  
                    __ptext1 0060                      __ptext2 0042                      __ptext3 0086  
                    __ptext4 0076                      __ptext5 007F             ??_SPI_Slave_Read 0071  
       end_of_initialization 000F             SPI_sendData@data 0070          start_initialization 000F  
          __size_of_SPI_read 0009           _SPI_receiveAndWait 007F          ?_SPI_receiveAndWait 0070  
              ?_SPI_sendData 0070         ??_SPI_receiveAndWait 0070                    ___latbits 0002  
           ??_SPI_initialize 0076               ??_SPI_sendData 0070            interrupt_function 0004  
                   _SPI_read 0076         __end_of_SPI_sendData 008C                __size_of_main 002F  
    __size_of_SPI_Slave_Read 001E          SPI_initialize@sType 0076                     intlevel1 0000  
   SPI_initialize@sClockIdle 0074  SPI_initialize@sTransmitEdge 0075  __size_of_SPI_receiveAndWait 0007  
