

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Jan 31 16:21:47 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,merge=1,delta=2
    10                           	psect	text4,local,class=CODE,merge=1,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.20
    15                           ; Generated 12/02/2020 GMT
    16                           ; 
    17                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F887 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  008F                     	;# 
    93  0090                     	;# 
    94  0091                     	;# 
    95  0092                     	;# 
    96  0093                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0094                     	;# 
   100  0095                     	;# 
   101  0096                     	;# 
   102  0097                     	;# 
   103  0098                     	;# 
   104  0099                     	;# 
   105  009A                     	;# 
   106  009B                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  009F                     	;# 
   111  0105                     	;# 
   112  0107                     	;# 
   113  0108                     	;# 
   114  0109                     	;# 
   115  010C                     	;# 
   116  010C                     	;# 
   117  010D                     	;# 
   118  010E                     	;# 
   119  010F                     	;# 
   120  0185                     	;# 
   121  0187                     	;# 
   122  0188                     	;# 
   123  0189                     	;# 
   124  018C                     	;# 
   125  018D                     	;# 
   126  0000                     	;# 
   127  0001                     	;# 
   128  0002                     	;# 
   129  0003                     	;# 
   130  0004                     	;# 
   131  0005                     	;# 
   132  0006                     	;# 
   133  0007                     	;# 
   134  0008                     	;# 
   135  0009                     	;# 
   136  000A                     	;# 
   137  000B                     	;# 
   138  000C                     	;# 
   139  000D                     	;# 
   140  000E                     	;# 
   141  000E                     	;# 
   142  000F                     	;# 
   143  0010                     	;# 
   144  0011                     	;# 
   145  0012                     	;# 
   146  0013                     	;# 
   147  0014                     	;# 
   148  0015                     	;# 
   149  0015                     	;# 
   150  0016                     	;# 
   151  0017                     	;# 
   152  0018                     	;# 
   153  0019                     	;# 
   154  001A                     	;# 
   155  001B                     	;# 
   156  001B                     	;# 
   157  001C                     	;# 
   158  001D                     	;# 
   159  001E                     	;# 
   160  001F                     	;# 
   161  0081                     	;# 
   162  0085                     	;# 
   163  0086                     	;# 
   164  0087                     	;# 
   165  0088                     	;# 
   166  0089                     	;# 
   167  008C                     	;# 
   168  008D                     	;# 
   169  008E                     	;# 
   170  008F                     	;# 
   171  0090                     	;# 
   172  0091                     	;# 
   173  0092                     	;# 
   174  0093                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0094                     	;# 
   178  0095                     	;# 
   179  0096                     	;# 
   180  0097                     	;# 
   181  0098                     	;# 
   182  0099                     	;# 
   183  009A                     	;# 
   184  009B                     	;# 
   185  009C                     	;# 
   186  009D                     	;# 
   187  009E                     	;# 
   188  009F                     	;# 
   189  0105                     	;# 
   190  0107                     	;# 
   191  0108                     	;# 
   192  0109                     	;# 
   193  010C                     	;# 
   194  010C                     	;# 
   195  010D                     	;# 
   196  010E                     	;# 
   197  010F                     	;# 
   198  0185                     	;# 
   199  0187                     	;# 
   200  0188                     	;# 
   201  0189                     	;# 
   202  018C                     	;# 
   203  018D                     	;# 
   204  0000                     	;# 
   205  0001                     	;# 
   206  0002                     	;# 
   207  0003                     	;# 
   208  0004                     	;# 
   209  0005                     	;# 
   210  0006                     	;# 
   211  0007                     	;# 
   212  0008                     	;# 
   213  0009                     	;# 
   214  000A                     	;# 
   215  000B                     	;# 
   216  000C                     	;# 
   217  000D                     	;# 
   218  000E                     	;# 
   219  000E                     	;# 
   220  000F                     	;# 
   221  0010                     	;# 
   222  0011                     	;# 
   223  0012                     	;# 
   224  0013                     	;# 
   225  0014                     	;# 
   226  0015                     	;# 
   227  0015                     	;# 
   228  0016                     	;# 
   229  0017                     	;# 
   230  0018                     	;# 
   231  0019                     	;# 
   232  001A                     	;# 
   233  001B                     	;# 
   234  001B                     	;# 
   235  001C                     	;# 
   236  001D                     	;# 
   237  001E                     	;# 
   238  001F                     	;# 
   239  0081                     	;# 
   240  0085                     	;# 
   241  0086                     	;# 
   242  0087                     	;# 
   243  0088                     	;# 
   244  0089                     	;# 
   245  008C                     	;# 
   246  008D                     	;# 
   247  008E                     	;# 
   248  008F                     	;# 
   249  0090                     	;# 
   250  0091                     	;# 
   251  0092                     	;# 
   252  0093                     	;# 
   253  0093                     	;# 
   254  0093                     	;# 
   255  0094                     	;# 
   256  0095                     	;# 
   257  0096                     	;# 
   258  0097                     	;# 
   259  0098                     	;# 
   260  0099                     	;# 
   261  009A                     	;# 
   262  009B                     	;# 
   263  009C                     	;# 
   264  009D                     	;# 
   265  009E                     	;# 
   266  009F                     	;# 
   267  0105                     	;# 
   268  0107                     	;# 
   269  0108                     	;# 
   270  0109                     	;# 
   271  010C                     	;# 
   272  010C                     	;# 
   273  010D                     	;# 
   274  010E                     	;# 
   275  010F                     	;# 
   276  0185                     	;# 
   277  0187                     	;# 
   278  0188                     	;# 
   279  0189                     	;# 
   280  018C                     	;# 
   281  018D                     	;# 
   282  0014                     _SSPCON	set	20
   283  0013                     _SSPBUF	set	19
   284  0008                     _PORTD	set	8
   285  0006                     _PORTB	set	6
   286  003F                     _RC7	set	63
   287  0094                     _SSPSTAT	set	148
   288  0094                     _SSPSTATbits	set	148
   289  0088                     _TRISD	set	136
   290  0086                     _TRISB	set	134
   291  009F                     _ADCON1	set	159
   292  043B                     _TRISC3	set	1083
   293  043D                     _TRISC5	set	1085
   294  043F                     _TRISC7	set	1087
   295  040F                     _nRBPU	set	1039
   296  0189                     _ANSELH	set	393
   297                           
   298                           	psect	cinit
   299  07FC                     start_initialization:	
   300                           ; #config settings
   301                           
   302  07FC                     __initialization:
   303  07FC                     end_of_initialization:	
   304                           ;End of C runtime variable initialization code
   305                           
   306  07FC                     __end_of__initialization:
   307  07FC  0183               	clrf	3
   308  07FD  120A  118A  2FA4   	ljmp	_main	;jump to C main() function
   309                           
   310                           	psect	cstackCOMMON
   311  0070                     __pcstackCOMMON:
   312  0070                     ?_SPI_init:
   313  0070                     ?_SPI_sendData:	
   314                           ; 1 bytes @ 0x0
   315                           
   316  0070                     ??_SPI_sendData:	
   317                           ; 1 bytes @ 0x0
   318                           
   319  0070                     ?_SPI_read:	
   320                           ; 1 bytes @ 0x0
   321                           
   322  0070                     ??_SPI_read:	
   323                           ; 1 bytes @ 0x0
   324                           
   325  0070                     ?_main:	
   326                           ; 1 bytes @ 0x0
   327                           
   328  0070                     ?_SPI_receiveAndWait:	
   329                           ; 1 bytes @ 0x0
   330                           
   331  0070                     ??_SPI_receiveAndWait:	
   332                           ; 1 bytes @ 0x0
   333                           
   334  0070                     SPI_init@sDataSample:	
   335                           ; 1 bytes @ 0x0
   336                           
   337  0070                     SPI_sendData@data:	
   338                           ; 1 bytes @ 0x0
   339                           
   340                           
   341                           ; 1 bytes @ 0x0
   342  0070                     	ds	1
   343  0071                     SPI_init@sClockIdle:
   344                           
   345                           ; 1 bytes @ 0x1
   346  0071                     	ds	1
   347  0072                     SPI_init@sTransmitEdge:
   348                           
   349                           ; 1 bytes @ 0x2
   350  0072                     	ds	1
   351  0073                     ??_SPI_init:
   352  0073                     SPI_init@sType:	
   353                           ; 1 bytes @ 0x3
   354                           
   355                           
   356                           ; 1 bytes @ 0x3
   357  0073                     	ds	1
   358  0074                     ??_main:
   359                           
   360                           ; 1 bytes @ 0x4
   361  0074                     	ds	3
   362                           
   363                           	psect	maintext
   364  07A4                     __pmaintext:	
   365 ;;
   366 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   367 ;;
   368 ;; *************** function _main *****************
   369 ;; Defined at:
   370 ;;		line 10 in file "main.c"
   371 ;; Parameters:    Size  Location     Type
   372 ;;		None
   373 ;; Auto vars:     Size  Location     Type
   374 ;;		None
   375 ;; Return value:  Size  Location     Type
   376 ;;                  1    wreg      void 
   377 ;; Registers used:
   378 ;;		wreg, status,2, status,0, pclath, cstack
   379 ;; Tracked objects:
   380 ;;		On entry : B00/0
   381 ;;		On exit  : 0/0
   382 ;;		Unchanged: 0/0
   383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   384 ;;      Params:         0       0       0       0       0
   385 ;;      Locals:         0       0       0       0       0
   386 ;;      Temps:          3       0       0       0       0
   387 ;;      Totals:         3       0       0       0       0
   388 ;;Total ram usage:        3 bytes
   389 ;; Hardware stack levels required when called:    2
   390 ;; This function calls:
   391 ;;		_SPI_init
   392 ;;		_SPI_read
   393 ;;		_SPI_sendData
   394 ;; This function is called by:
   395 ;;		Startup code after reset
   396 ;; This function uses a non-reentrant model
   397 ;;
   398                           
   399                           
   400                           ;psect for function _main
   401  07A4                     _main:
   402  07A4                     l720:	
   403                           ;incstack = 0
   404                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   405                           
   406                           
   407                           ;main.c: 11:     nRBPU = 0;
   408  07A4  1683               	bsf	3,5	;RP0=1, select bank1
   409  07A5  1303               	bcf	3,6	;RP1=0, select bank1
   410  07A6  1381               	bcf	1,7	;volatile
   411  07A7                     l722:
   412                           
   413                           ;main.c: 12:     ANSELH = 0;
   414  07A7  1683               	bsf	3,5	;RP0=1, select bank3
   415  07A8  1703               	bsf	3,6	;RP1=1, select bank3
   416  07A9  0189               	clrf	9	;volatile
   417                           
   418                           ;main.c: 13:     ADCON1 = 0;
   419  07AA  1683               	bsf	3,5	;RP0=1, select bank1
   420  07AB  1303               	bcf	3,6	;RP1=0, select bank1
   421  07AC  019F               	clrf	31	;volatile
   422  07AD                     l724:
   423                           
   424                           ;main.c: 14:     TRISB = 0xFF;
   425  07AD  30FF               	movlw	255
   426  07AE  0086               	movwf	6	;volatile
   427  07AF                     l726:
   428                           
   429                           ;main.c: 15:     TRISD = 0x00;
   430  07AF  0188               	clrf	8	;volatile
   431                           
   432                           ;main.c: 16:     PORTB = 0xFF;
   433  07B0  30FF               	movlw	255
   434  07B1  1283               	bcf	3,5	;RP0=0, select bank0
   435  07B2  1303               	bcf	3,6	;RP1=0, select bank0
   436  07B3  0086               	movwf	6	;volatile
   437  07B4                     l728:
   438                           
   439                           ;main.c: 17:     TRISC7 = 0;
   440  07B4  1683               	bsf	3,5	;RP0=1, select bank1
   441  07B5  1303               	bcf	3,6	;RP1=0, select bank1
   442  07B6  1387               	bcf	7,7	;volatile
   443  07B7                     l730:
   444                           
   445                           ;main.c: 18:     RC7 = 1;
   446  07B7  1283               	bcf	3,5	;RP0=0, select bank0
   447  07B8  1303               	bcf	3,6	;RP1=0, select bank0
   448  07B9  1787               	bsf	7,7	;volatile
   449  07BA                     l732:
   450                           
   451                           ;main.c: 19:     SPI_init(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LO
      +                          W, SPI_IDLE_2_ACTIVE);
   452  07BA  01F0               	clrf	SPI_init@sDataSample
   453  07BB  01F1               	clrf	SPI_init@sClockIdle
   454  07BC  01F2               	clrf	SPI_init@sTransmitEdge
   455  07BD  3020               	movlw	32
   456  07BE  120A  118A  278E  120A  118A  	fcall	_SPI_init
   457  07C3                     l734:
   458                           
   459                           ;main.c: 21:         RC7 = 0;
   460  07C3  1283               	bcf	3,5	;RP0=0, select bank0
   461  07C4  1303               	bcf	3,6	;RP1=0, select bank0
   462  07C5  1387               	bcf	7,7	;volatile
   463  07C6                     l736:
   464                           
   465                           ;main.c: 22:         _delay((unsigned long)((1)*(8000000/4000.0)));
   466  07C6  3003               	movlw	3
   467  07C7  00F5               	movwf	??_main+1
   468  07C8  3097               	movlw	151
   469  07C9  00F4               	movwf	??_main
   470  07CA                     u47:
   471  07CA  0BF4               	decfsz	??_main,f
   472  07CB  2FCA               	goto	u47
   473  07CC  0BF5               	decfsz	??_main+1,f
   474  07CD  2FCA               	goto	u47
   475  07CE  2FCF               	nop2
   476                           
   477                           ;main.c: 23:         SPI_sendData(PORTB);
   478  07CF  1283               	bcf	3,5	;RP0=0, select bank0
   479  07D0  1303               	bcf	3,6	;RP1=0, select bank0
   480  07D1  0806               	movf	6,w	;volatile
   481  07D2  120A  118A  2778  120A  118A  	fcall	_SPI_sendData
   482                           
   483                           ;main.c: 24:         PORTD = SPI_read();
   484  07D7  120A  118A  2785  120A  118A  	fcall	_SPI_read
   485  07DC  1283               	bcf	3,5	;RP0=0, select bank0
   486  07DD  1303               	bcf	3,6	;RP1=0, select bank0
   487  07DE  0088               	movwf	8	;volatile
   488  07DF                     l738:
   489                           
   490                           ;main.c: 25:         _delay((unsigned long)((1)*(8000000/4000.0)));
   491  07DF  3003               	movlw	3
   492  07E0  00F5               	movwf	??_main+1
   493  07E1  3097               	movlw	151
   494  07E2  00F4               	movwf	??_main
   495  07E3                     u57:
   496  07E3  0BF4               	decfsz	??_main,f
   497  07E4  2FE3               	goto	u57
   498  07E5  0BF5               	decfsz	??_main+1,f
   499  07E6  2FE3               	goto	u57
   500  07E7  2FE8               	nop2
   501  07E8                     l740:
   502                           
   503                           ;main.c: 26:         RC7 = 1;
   504  07E8  1283               	bcf	3,5	;RP0=0, select bank0
   505  07E9  1303               	bcf	3,6	;RP1=0, select bank0
   506  07EA  1787               	bsf	7,7	;volatile
   507  07EB                     l742:
   508                           
   509                           ;main.c: 27:         _delay((unsigned long)((100)*(8000000/4000.0)));
   510  07EB  3002               	movlw	2
   511  07EC  00F6               	movwf	??_main+2
   512  07ED  3004               	movlw	4
   513  07EE  00F5               	movwf	??_main+1
   514  07EF  30BA               	movlw	186
   515  07F0  00F4               	movwf	??_main
   516  07F1                     u67:
   517  07F1  0BF4               	decfsz	??_main,f
   518  07F2  2FF1               	goto	u67
   519  07F3  0BF5               	decfsz	??_main+1,f
   520  07F4  2FF1               	goto	u67
   521  07F5  0BF6               	decfsz	??_main+2,f
   522  07F6  2FF1               	goto	u67
   523  07F7  0000               	nop
   524  07F8  2FC3               	goto	l734
   525  07F9  120A  118A  2800   	ljmp	start
   526  07FC                     __end_of_main:
   527                           
   528                           	psect	text1
   529  0778                     __ptext1:	
   530 ;; *************** function _SPI_sendData *****************
   531 ;; Defined at:
   532 ;;		line 42 in file "SPI.c"
   533 ;; Parameters:    Size  Location     Type
   534 ;;  data            1    wreg     unsigned char 
   535 ;; Auto vars:     Size  Location     Type
   536 ;;  data            1    0[COMMON] unsigned char 
   537 ;; Return value:  Size  Location     Type
   538 ;;                  1    wreg      void 
   539 ;; Registers used:
   540 ;;		wreg
   541 ;; Tracked objects:
   542 ;;		On entry : 0/0
   543 ;;		On exit  : 0/0
   544 ;;		Unchanged: 0/0
   545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   546 ;;      Params:         0       0       0       0       0
   547 ;;      Locals:         1       0       0       0       0
   548 ;;      Temps:          0       0       0       0       0
   549 ;;      Totals:         1       0       0       0       0
   550 ;;Total ram usage:        1 bytes
   551 ;; Hardware stack levels used:    1
   552 ;; This function calls:
   553 ;;		Nothing
   554 ;; This function is called by:
   555 ;;		_main
   556 ;; This function uses a non-reentrant model
   557 ;;
   558                           
   559                           
   560                           ;psect for function _SPI_sendData
   561  0778                     _SPI_sendData:
   562                           
   563                           ;incstack = 0
   564                           ; Regs used in _SPI_sendData: [wreg]
   565                           ;SPI_sendData@data stored from wreg
   566  0778  00F0               	movwf	SPI_sendData@data
   567  0779                     l672:
   568                           
   569                           ;SPI.c: 43:     SSPBUF = data;
   570  0779  0870               	movf	SPI_sendData@data,w
   571  077A  1283               	bcf	3,5	;RP0=0, select bank0
   572  077B  1303               	bcf	3,6	;RP1=0, select bank0
   573  077C  0093               	movwf	19	;volatile
   574  077D                     l68:
   575  077D  0008               	return
   576  077E                     __end_of_SPI_sendData:
   577                           
   578                           	psect	text2
   579  0785                     __ptext2:	
   580 ;; *************** function _SPI_read *****************
   581 ;; Defined at:
   582 ;;		line 14 in file "SPI.c"
   583 ;; Parameters:    Size  Location     Type
   584 ;;		None
   585 ;; Auto vars:     Size  Location     Type
   586 ;;		None
   587 ;; Return value:  Size  Location     Type
   588 ;;                  1    wreg      unsigned char 
   589 ;; Registers used:
   590 ;;		wreg, status,2, status,0, pclath, cstack
   591 ;; Tracked objects:
   592 ;;		On entry : 0/0
   593 ;;		On exit  : 0/0
   594 ;;		Unchanged: 0/0
   595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   596 ;;      Params:         0       0       0       0       0
   597 ;;      Locals:         0       0       0       0       0
   598 ;;      Temps:          0       0       0       0       0
   599 ;;      Totals:         0       0       0       0       0
   600 ;;Total ram usage:        0 bytes
   601 ;; Hardware stack levels used:    1
   602 ;; Hardware stack levels required when called:    1
   603 ;; This function calls:
   604 ;;		_SPI_receiveAndWait
   605 ;; This function is called by:
   606 ;;		_main
   607 ;; This function uses a non-reentrant model
   608 ;;
   609                           
   610                           
   611                           ;psect for function _SPI_read
   612  0785                     _SPI_read:
   613  0785                     l674:	
   614                           ;incstack = 0
   615                           ; Regs used in _SPI_read: [wreg+status,2+status,0+pclath+cstack]
   616                           
   617                           
   618                           ;SPI.c: 16:     SPI_receiveAndWait();
   619  0785  120A  118A  277E  120A  118A  	fcall	_SPI_receiveAndWait
   620  078A                     l676:
   621                           
   622                           ;SPI.c: 17:     return (SSPBUF);
   623  078A  1283               	bcf	3,5	;RP0=0, select bank0
   624  078B  1303               	bcf	3,6	;RP1=0, select bank0
   625  078C  0813               	movf	19,w	;volatile
   626  078D                     l55:
   627  078D  0008               	return
   628  078E                     __end_of_SPI_read:
   629                           
   630                           	psect	text3
   631  077E                     __ptext3:	
   632 ;; *************** function _SPI_receiveAndWait *****************
   633 ;; Defined at:
   634 ;;		line 10 in file "SPI.c"
   635 ;; Parameters:    Size  Location     Type
   636 ;;		None
   637 ;; Auto vars:     Size  Location     Type
   638 ;;		None
   639 ;; Return value:  Size  Location     Type
   640 ;;                  1    wreg      void 
   641 ;; Registers used:
   642 ;;		None
   643 ;; Tracked objects:
   644 ;;		On entry : 0/0
   645 ;;		On exit  : 0/0
   646 ;;		Unchanged: 0/0
   647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   648 ;;      Params:         0       0       0       0       0
   649 ;;      Locals:         0       0       0       0       0
   650 ;;      Temps:          0       0       0       0       0
   651 ;;      Totals:         0       0       0       0       0
   652 ;;Total ram usage:        0 bytes
   653 ;; Hardware stack levels used:    1
   654 ;; This function calls:
   655 ;;		Nothing
   656 ;; This function is called by:
   657 ;;		_SPI_read
   658 ;; This function uses a non-reentrant model
   659 ;;
   660                           
   661                           
   662                           ;psect for function _SPI_receiveAndWait
   663  077E                     _SPI_receiveAndWait:
   664  077E                     l660:	
   665                           ;incstack = 0
   666                           ; Regs used in _SPI_receiveAndWait: []
   667                           
   668  077E                     l49:	
   669                           ;SPI.c: 11:     while (!SSPSTATbits.BF);
   670                           
   671  077E  1683               	bsf	3,5	;RP0=1, select bank1
   672  077F  1303               	bcf	3,6	;RP1=0, select bank1
   673  0780  1C14               	btfss	20,0	;volatile
   674  0781  2F83               	goto	u11
   675  0782  2F84               	goto	u10
   676  0783                     u11:
   677  0783  2F7E               	goto	l49
   678  0784                     u10:
   679  0784                     l52:
   680  0784  0008               	return
   681  0785                     __end_of_SPI_receiveAndWait:
   682                           
   683                           	psect	text4
   684  078E                     __ptext4:	
   685 ;; *************** function _SPI_init *****************
   686 ;; Defined at:
   687 ;;		line 28 in file "SPI.c"
   688 ;; Parameters:    Size  Location     Type
   689 ;;  sType           1    wreg     enum E1264
   690 ;;  sDataSample     1    0[COMMON] enum E1272
   691 ;;  sClockIdle      1    1[COMMON] enum E1276
   692 ;;  sTransmitEdg    1    2[COMMON] enum E1280
   693 ;; Auto vars:     Size  Location     Type
   694 ;;  sType           1    3[COMMON] enum E1264
   695 ;; Return value:  Size  Location     Type
   696 ;;                  1    wreg      void 
   697 ;; Registers used:
   698 ;;		wreg, status,2, status,0
   699 ;; Tracked objects:
   700 ;;		On entry : 0/0
   701 ;;		On exit  : 0/0
   702 ;;		Unchanged: 0/0
   703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   704 ;;      Params:         3       0       0       0       0
   705 ;;      Locals:         1       0       0       0       0
   706 ;;      Temps:          0       0       0       0       0
   707 ;;      Totals:         4       0       0       0       0
   708 ;;Total ram usage:        4 bytes
   709 ;; Hardware stack levels used:    1
   710 ;; This function calls:
   711 ;;		Nothing
   712 ;; This function is called by:
   713 ;;		_main
   714 ;; This function uses a non-reentrant model
   715 ;;
   716                           
   717                           
   718                           ;psect for function _SPI_init
   719  078E                     _SPI_init:
   720                           
   721                           ;incstack = 0
   722                           ; Regs used in _SPI_init: [wreg+status,2+status,0]
   723                           ;SPI_init@sType stored from wreg
   724  078E  00F3               	movwf	SPI_init@sType
   725  078F                     l710:
   726                           
   727                           ;SPI.c: 29:     TRISC5 = 0;
   728  078F  1683               	bsf	3,5	;RP0=1, select bank1
   729  0790  1303               	bcf	3,6	;RP1=0, select bank1
   730  0791  1287               	bcf	7,5	;volatile
   731                           
   732                           ;SPI.c: 30:     if (sType & 0b00000100)
   733  0792  1D73               	btfss	SPI_init@sType,2
   734  0793  2F95               	goto	u31
   735  0794  2F96               	goto	u30
   736  0795                     u31:
   737  0795  2F9A               	goto	l716
   738  0796                     u30:
   739  0796                     l712:
   740                           
   741                           ;SPI.c: 31:     {;SPI.c: 32:         SSPSTAT = sTransmitEdge;
   742  0796  0872               	movf	SPI_init@sTransmitEdge,w
   743  0797  0094               	movwf	20	;volatile
   744  0798                     l714:
   745                           
   746                           ;SPI.c: 33:         TRISC3 = 1;
   747  0798  1587               	bsf	7,3	;volatile
   748                           
   749                           ;SPI.c: 34:     } else
   750  0799  2F9E               	goto	l64
   751  079A                     l716:
   752                           
   753                           ;SPI.c: 35:     {;SPI.c: 36:         SSPSTAT = sDataSample | sTransmitEdge;
   754  079A  0870               	movf	SPI_init@sDataSample,w
   755  079B  0472               	iorwf	SPI_init@sTransmitEdge,w
   756  079C  0094               	movwf	20	;volatile
   757  079D                     l718:
   758                           
   759                           ;SPI.c: 37:         TRISC3 = 0;
   760  079D  1187               	bcf	7,3	;volatile
   761  079E                     l64:	
   762                           ;SPI.c: 38:     }
   763                           
   764                           
   765                           ;SPI.c: 39:     SSPCON = sType | sClockIdle;
   766  079E  0873               	movf	SPI_init@sType,w
   767  079F  0471               	iorwf	SPI_init@sClockIdle,w
   768  07A0  1283               	bcf	3,5	;RP0=0, select bank0
   769  07A1  1303               	bcf	3,6	;RP1=0, select bank0
   770  07A2  0094               	movwf	20	;volatile
   771  07A3                     l65:
   772  07A3  0008               	return
   773  07A4                     __end_of_SPI_init:
   774  007E                     btemp	set	126	;btemp
   775  007E                     wtemp0	set	126
   776                           
   777                           	psect	config
   778                           
   779                           ;Config register CONFIG1 @ 0x2007
   780                           ;	Oscillator Selection bits
   781                           ;	FOSC = EXTRC_CLKOUT, RC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, RC on RA7/
      +                          OSC1/CLKIN
   782                           ;	Watchdog Timer Enable bit
   783                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   784                           ;	Power-up Timer Enable bit
   785                           ;	PWRTE = OFF, PWRT disabled
   786                           ;	RE3/MCLR pin function select bit
   787                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   788                           ;	Code Protection bit
   789                           ;	CP = OFF, Program memory code protection is disabled
   790                           ;	Data Code Protection bit
   791                           ;	CPD = OFF, Data memory code protection is disabled
   792                           ;	Brown Out Reset Selection bits
   793                           ;	BOREN = OFF, BOR disabled
   794                           ;	Internal External Switchover bit
   795                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   796                           ;	Fail-Safe Clock Monitor Enabled bit
   797                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   798                           ;	Low Voltage Programming Enable bit
   799                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   800                           ;	In-Circuit Debugger Mode bit
   801                           ;	DEBUG = 0x1, unprogrammed default
   802  2007                     	org	8199
   803  2007  20D7               	dw	8407
   804                           
   805                           ;Config register CONFIG2 @ 0x2008
   806                           ;	Brown-out Reset Selection bit
   807                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   808                           ;	Flash Program Memory Self Write Enable bits
   809                           ;	WRT = OFF, Write protection off
   810  2008                     	org	8200
   811  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_SPI_init

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     375
                                              4 COMMON     3     3      0
                           _SPI_init
                           _SPI_read
                       _SPI_sendData
 ---------------------------------------------------------------------------------
 (1) _SPI_sendData                                         1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SPI_read                                             0     0      0       0
                 _SPI_receiveAndWait
 ---------------------------------------------------------------------------------
 (2) _SPI_receiveAndWait                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI_init                                             4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SPI_init
   _SPI_read
     _SPI_receiveAndWait
   _SPI_sendData

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Jan 31 16:21:47 2021

                _SSPSTATbits 0094                           l52 0784                           l55 078D  
                         l64 079E                           l65 07A3                           l49 077E  
                         l68 077D                           u10 0784                           u11 0783  
                         u30 0796                           u31 0795                           u47 07CA  
                         u57 07E3                           u67 07F1                          l710 078F  
                        l712 0796                          l720 07A4                          l714 0798  
                        l730 07B7                          l722 07A7                          l716 079A  
                        l660 077E                          l740 07E8                          l732 07BA  
                        l724 07AD                          l718 079D                          l742 07EB  
                        l734 07C3                          l726 07AF                          l672 0779  
                        l736 07C6                          l728 07B4                          l674 0785  
                        l738 07DF                          l676 078A                          _RC7 003F  
      __size_of_SPI_sendData 0006                         _main 07A4                         btemp 007E  
                       start 0000                 _SPI_sendData 0778                        ?_main 0070  
                      _PORTB 0006                        _PORTD 0008                        _TRISB 0086  
                      _TRISD 0088                        _nRBPU 040F             __end_of_SPI_init 07A4  
           __end_of_SPI_read 078E                        status 0003                        wtemp0 007E  
            __initialization 07FC                 __end_of_main 07FC                       ??_main 0074  
                     _ADCON1 009F                       _ANSELH 0189                       _TRISC3 043B  
                     _TRISC5 043D                       _TRISC7 043F                       _SSPBUF 0013  
                     _SSPCON 0014      __end_of__initialization 07FC               __pcstackCOMMON 0070  
 __end_of_SPI_receiveAndWait 0785                    ?_SPI_init 0070                    ?_SPI_read 0070  
                 __pmaintext 07A4                   ??_SPI_init 0073                   ??_SPI_read 0070  
                    _SSPSTAT 0094          SPI_init@sDataSample 0070                      __ptext1 0778  
                    __ptext2 0785                      __ptext3 077E                      __ptext4 078E  
      SPI_init@sTransmitEdge 0072         end_of_initialization 07FC             SPI_sendData@data 0070  
              SPI_init@sType 0073          start_initialization 07FC            __size_of_SPI_init 0016  
          __size_of_SPI_read 0009           _SPI_receiveAndWait 077E          ?_SPI_receiveAndWait 0070  
              ?_SPI_sendData 0070         ??_SPI_receiveAndWait 0070                    ___latbits 0002  
             ??_SPI_sendData 0070           SPI_init@sClockIdle 0071                     _SPI_init 078E  
                   _SPI_read 0785         __end_of_SPI_sendData 077E                __size_of_main 0058  
__size_of_SPI_receiveAndWait 0007  
