

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Mar 04 19:52:48 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.20
    18                           ; Generated 12/02/2020 GMT
    19                           ; 
    20                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F887 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  0087                     	;# 
    90  0088                     	;# 
    91  0089                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  008F                     	;# 
    96  0090                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0095                     	;# 
   104  0096                     	;# 
   105  0097                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  009F                     	;# 
   114  0105                     	;# 
   115  0107                     	;# 
   116  0108                     	;# 
   117  0109                     	;# 
   118  010C                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010F                     	;# 
   123  0185                     	;# 
   124  0187                     	;# 
   125  0188                     	;# 
   126  0189                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0008                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  000E                     	;# 
   145  000F                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001B                     	;# 
   160  001C                     	;# 
   161  001D                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  0086                     	;# 
   167  0087                     	;# 
   168  0088                     	;# 
   169  0089                     	;# 
   170  008C                     	;# 
   171  008D                     	;# 
   172  008E                     	;# 
   173  008F                     	;# 
   174  0090                     	;# 
   175  0091                     	;# 
   176  0092                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0094                     	;# 
   181  0095                     	;# 
   182  0096                     	;# 
   183  0097                     	;# 
   184  0098                     	;# 
   185  0099                     	;# 
   186  009A                     	;# 
   187  009B                     	;# 
   188  009C                     	;# 
   189  009D                     	;# 
   190  009E                     	;# 
   191  009F                     	;# 
   192  0105                     	;# 
   193  0107                     	;# 
   194  0108                     	;# 
   195  0109                     	;# 
   196  010C                     	;# 
   197  010C                     	;# 
   198  010D                     	;# 
   199  010E                     	;# 
   200  010F                     	;# 
   201  0185                     	;# 
   202  0187                     	;# 
   203  0188                     	;# 
   204  0189                     	;# 
   205  018C                     	;# 
   206  018D                     	;# 
   207  0000                     	;# 
   208  0001                     	;# 
   209  0002                     	;# 
   210  0003                     	;# 
   211  0004                     	;# 
   212  0005                     	;# 
   213  0006                     	;# 
   214  0007                     	;# 
   215  0008                     	;# 
   216  0009                     	;# 
   217  000A                     	;# 
   218  000B                     	;# 
   219  000C                     	;# 
   220  000D                     	;# 
   221  000E                     	;# 
   222  000E                     	;# 
   223  000F                     	;# 
   224  0010                     	;# 
   225  0011                     	;# 
   226  0012                     	;# 
   227  0013                     	;# 
   228  0014                     	;# 
   229  0015                     	;# 
   230  0015                     	;# 
   231  0016                     	;# 
   232  0017                     	;# 
   233  0018                     	;# 
   234  0019                     	;# 
   235  001A                     	;# 
   236  001B                     	;# 
   237  001B                     	;# 
   238  001C                     	;# 
   239  001D                     	;# 
   240  001E                     	;# 
   241  001F                     	;# 
   242  0081                     	;# 
   243  0085                     	;# 
   244  0086                     	;# 
   245  0087                     	;# 
   246  0088                     	;# 
   247  0089                     	;# 
   248  008C                     	;# 
   249  008D                     	;# 
   250  008E                     	;# 
   251  008F                     	;# 
   252  0090                     	;# 
   253  0091                     	;# 
   254  0092                     	;# 
   255  0093                     	;# 
   256  0093                     	;# 
   257  0093                     	;# 
   258  0094                     	;# 
   259  0095                     	;# 
   260  0096                     	;# 
   261  0097                     	;# 
   262  0098                     	;# 
   263  0099                     	;# 
   264  009A                     	;# 
   265  009B                     	;# 
   266  009C                     	;# 
   267  009D                     	;# 
   268  009E                     	;# 
   269  009F                     	;# 
   270  0105                     	;# 
   271  0107                     	;# 
   272  0108                     	;# 
   273  0109                     	;# 
   274  010C                     	;# 
   275  010C                     	;# 
   276  010D                     	;# 
   277  010E                     	;# 
   278  010F                     	;# 
   279  0185                     	;# 
   280  0187                     	;# 
   281  0188                     	;# 
   282  0189                     	;# 
   283  018C                     	;# 
   284  018D                     	;# 
   285  001A                     _RCREG	set	26
   286  0019                     _TXREG	set	25
   287  0033                     _RB3	set	51
   288  0065                     _RCIF	set	101
   289  00C1                     _OERR	set	193
   290  0064                     _TXIF	set	100
   291  00C6                     _RX9	set	198
   292  00C4                     _CREN	set	196
   293  00C7                     _SPEN	set	199
   294  0086                     _TRISB	set	134
   295  0099                     _SPBRG	set	153
   296  04C6                     _TX9	set	1222
   297  04C5                     _TXEN	set	1221
   298  04C4                     _SYNC	set	1220
   299  04C2                     _BRGH	set	1218
   300  043F                     _TRISC7	set	1087
   301  043E                     _TRISC6	set	1086
   302                           
   303                           	psect	strings
   304  0003                     __pstrings:
   305  0003                     stringtab:
   306  0003                     __stringtab:
   307  0003                     stringcode:	
   308                           ;	String table - string pointers are 1 byte each
   309                           
   310  0003                     stringdir:
   311  0003  3000               	movlw	high stringdir
   312  0004  008A               	movwf	10
   313  0005  0804               	movf	4,w
   314  0006  0A84               	incf	4,f
   315  0007  0782               	addwf	2,f
   316  0008                     __stringbase:
   317  0008  3400               	retlw	0
   318  0009                     __end_of__stringtab:
   319  0009                     STR_1:
   320  0009  3447               	retlw	71	;'G'
   321  000A  3469               	retlw	105	;'i'
   322  000B  3461               	retlw	97	;'a'
   323  000C  346F               	retlw	111	;'o'
   324  000D  3420               	retlw	32	;' '
   325  000E  3474               	retlw	116	;'t'
   326  000F  3469               	retlw	105	;'i'
   327  0010  3465               	retlw	101	;'e'
   328  0011  3470               	retlw	112	;'p'
   329  0012  3420               	retlw	32	;' '
   330  0013  3455               	retlw	85	;'U'
   331  0014  3441               	retlw	65	;'A'
   332  0015  3452               	retlw	82	;'R'
   333  0016  3454               	retlw	84	;'T'
   334  0017  3420               	retlw	32	;' '
   335  0018  3464               	retlw	100	;'d'
   336  0019  3461               	retlw	97	;'a'
   337  001A  3420               	retlw	32	;' '
   338  001B  3464               	retlw	100	;'d'
   339  001C  3475               	retlw	117	;'u'
   340  001D  346F               	retlw	111	;'o'
   341  001E  3463               	retlw	99	;'c'
   342  001F  3420               	retlw	32	;' '
   343  0020  346B               	retlw	107	;'k'
   344  0021  3468               	retlw	104	;'h'
   345  0022  346F               	retlw	111	;'o'
   346  0023  3469               	retlw	105	;'i'
   347  0024  3420               	retlw	32	;' '
   348  0025  3474               	retlw	116	;'t'
   349  0026  3461               	retlw	97	;'a'
   350  0027  346F               	retlw	111	;'o'
   351  0028  3400               	retlw	0
   352  0029                     STR_3:
   353  0029  3420               	retlw	32	;' '
   354  002A  344C               	retlw	76	;'L'
   355  002B  3445               	retlw	69	;'E'
   356  002C  3444               	retlw	68	;'D'
   357  002D  342D               	retlw	45	;'-'
   358  002E  343E               	retlw	62	;'>'
   359  002F  3420               	retlw	32	;' '
   360  0030  344F               	retlw	79	;'O'
   361  0031  3446               	retlw	70	;'F'
   362  0032  3446               	retlw	70	;'F'
   363  0033  3420               	retlw	32	;' '
   364  0034  3400               	retlw	0
   365  0035                     STR_2:
   366  0035  3420               	retlw	32	;' '
   367  0036  344C               	retlw	76	;'L'
   368  0037  3445               	retlw	69	;'E'
   369  0038  3444               	retlw	68	;'D'
   370  0039  3420               	retlw	32	;' '
   371  003A  342D               	retlw	45	;'-'
   372  003B  343E               	retlw	62	;'>'
   373  003C  3420               	retlw	32	;' '
   374  003D  344F               	retlw	79	;'O'
   375  003E  344E               	retlw	78	;'N'
   376  003F  3420               	retlw	32	;' '
   377  0040  3400               	retlw	0
   378                           
   379                           	psect	cinit
   380  07FC                     start_initialization:	
   381                           ; #config settings
   382                           
   383  07FC                     __initialization:
   384  07FC                     end_of_initialization:	
   385                           ;End of C runtime variable initialization code
   386                           
   387  07FC                     __end_of__initialization:
   388  07FC  0183               	clrf	3
   389  07FD  120A  118A  2F11   	ljmp	_main	;jump to C main() function
   390                           
   391                           	psect	cstackCOMMON
   392  0070                     __pcstackCOMMON:
   393  0070                     ?_UART_sendChar:
   394  0070                     ??_UART_sendChar:	
   395                           ; 1 bytes @ 0x0
   396                           
   397  0070                     ?_UART_getChar:	
   398                           ; 1 bytes @ 0x0
   399                           
   400  0070                     ??_UART_getChar:	
   401                           ; 1 bytes @ 0x0
   402                           
   403  0070                     ?_UART_sendString:	
   404                           ; 1 bytes @ 0x0
   405                           
   406  0070                     ?_main:	
   407                           ; 1 bytes @ 0x0
   408                           
   409  0070                     ?___aldiv:	
   410                           ; 1 bytes @ 0x0
   411                           
   412  0070                     UART_sendChar@bt:	
   413                           ; 4 bytes @ 0x0
   414                           
   415  0070                     ___aldiv@divisor:	
   416                           ; 1 bytes @ 0x0
   417                           
   418                           
   419                           ; 4 bytes @ 0x0
   420  0070                     	ds	1
   421  0071                     ??_UART_sendString:
   422                           
   423                           ; 1 bytes @ 0x1
   424  0071                     	ds	1
   425  0072                     UART_sendString@str:
   426                           
   427                           ; 1 bytes @ 0x2
   428  0072                     	ds	2
   429  0074                     ___aldiv@dividend:
   430                           
   431                           ; 4 bytes @ 0x4
   432  0074                     	ds	4
   433  0078                     ??___aldiv:
   434                           
   435                           ; 1 bytes @ 0x8
   436  0078                     	ds	1
   437  0079                     ??_UART_init:
   438  0079                     ??_main:	
   439                           ; 1 bytes @ 0x9
   440                           
   441                           
   442                           ; 1 bytes @ 0x9
   443  0079                     	ds	1
   444  007A                     main@getValue:
   445                           
   446                           ; 1 bytes @ 0xA
   447  007A                     	ds	1
   448                           
   449                           	psect	cstackBANK0
   450  0020                     __pcstackBANK0:
   451  0020                     ___aldiv@counter:
   452                           
   453                           ; 1 bytes @ 0x0
   454  0020                     	ds	1
   455  0021                     ___aldiv@sign:
   456                           
   457                           ; 1 bytes @ 0x1
   458  0021                     	ds	1
   459  0022                     ___aldiv@quotient:
   460                           
   461                           ; 4 bytes @ 0x2
   462  0022                     	ds	4
   463  0026                     ?_UART_init:
   464  0026                     UART_init@Baud_rate:	
   465                           ; 1 bytes @ 0x6
   466                           
   467                           
   468                           ; 4 bytes @ 0x6
   469  0026                     	ds	4
   470                           
   471                           	psect	maintext
   472  0711                     __pmaintext:	
   473 ;;
   474 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   475 ;;
   476 ;; *************** function _main *****************
   477 ;; Defined at:
   478 ;;		line 22 in file "main_UART.c"
   479 ;; Parameters:    Size  Location     Type
   480 ;;		None
   481 ;; Auto vars:     Size  Location     Type
   482 ;;  getValue        1   10[COMMON] unsigned char 
   483 ;; Return value:  Size  Location     Type
   484 ;;                  1    wreg      void 
   485 ;; Registers used:
   486 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   487 ;; Tracked objects:
   488 ;;		On entry : B00/0
   489 ;;		On exit  : 0/0
   490 ;;		Unchanged: 0/0
   491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   492 ;;      Params:         0       0       0       0       0
   493 ;;      Locals:         1       0       0       0       0
   494 ;;      Temps:          1       0       0       0       0
   495 ;;      Totals:         2       0       0       0       0
   496 ;;Total ram usage:        2 bytes
   497 ;; Hardware stack levels required when called:    2
   498 ;; This function calls:
   499 ;;		_UART_getChar
   500 ;;		_UART_init
   501 ;;		_UART_sendChar
   502 ;;		_UART_sendString
   503 ;; This function is called by:
   504 ;;		Startup code after reset
   505 ;; This function uses a non-reentrant model
   506 ;;
   507                           
   508                           
   509                           ;psect for function _main
   510  0711                     _main:
   511  0711                     l846:	
   512                           ;incstack = 0
   513                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   514                           
   515                           
   516                           ;main_UART.c: 24:     char getValue;;main_UART.c: 25:     TRISB = 0x00;
   517  0711  1683               	bsf	3,5	;RP0=1, select bank1
   518  0712  1303               	bcf	3,6	;RP1=0, select bank1
   519  0713  0186               	clrf	6	;volatile
   520  0714                     l848:
   521                           
   522                           ;main_UART.c: 26:     UART_init(9600);
   523  0714  3000               	movlw	0
   524  0715  1283               	bcf	3,5	;RP0=0, select bank0
   525  0716  1303               	bcf	3,6	;RP1=0, select bank0
   526  0717  00A9               	movwf	UART_init@Baud_rate+3
   527  0718  3000               	movlw	0
   528  0719  00A8               	movwf	UART_init@Baud_rate+2
   529  071A  3025               	movlw	37
   530  071B  00A7               	movwf	UART_init@Baud_rate+1
   531  071C  3080               	movlw	128
   532  071D  00A6               	movwf	UART_init@Baud_rate
   533  071E  120A  118A  26DF  120A  118A  	fcall	_UART_init
   534  0723                     l850:
   535                           
   536                           ;main_UART.c: 27:     UART_sendString("Giao tiep UART da duoc khoi tao");
   537  0723  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   538  0724  120A  118A  26C0  120A  118A  	fcall	_UART_sendString
   539  0729                     l852:
   540                           
   541                           ;main_UART.c: 29:     {;main_UART.c: 30:         getValue = UART_getChar();
   542  0729  120A  118A  26B2  120A  118A  	fcall	_UART_getChar
   543  072E  00F9               	movwf	??_main
   544  072F  0879               	movf	??_main,w
   545  0730  00FA               	movwf	main@getValue
   546  0731                     l854:
   547                           
   548                           ;main_UART.c: 31:         if (getValue == '1')
   549  0731  3031               	movlw	49
   550  0732  067A               	xorwf	main@getValue,w
   551  0733  1D03               	btfss	3,2
   552  0734  2F36               	goto	u311
   553  0735  2F37               	goto	u310
   554  0736                     u311:
   555  0736  2F46               	goto	l862
   556  0737                     u310:
   557  0737                     l856:
   558                           
   559                           ;main_UART.c: 32:         {;main_UART.c: 33:             RB3 = 1;
   560  0737  1283               	bcf	3,5	;RP0=0, select bank0
   561  0738  1303               	bcf	3,6	;RP1=0, select bank0
   562  0739  1586               	bsf	6,3	;volatile
   563  073A                     l858:
   564                           
   565                           ;main_UART.c: 34:             UART_sendString(" LED -> ON ");
   566  073A  302D               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   567  073B  120A  118A  26C0  120A  118A  	fcall	_UART_sendString
   568  0740                     l860:
   569                           
   570                           ;main_UART.c: 35:             UART_sendChar(10);
   571  0740  300A               	movlw	10
   572  0741  120A  118A  26A8  120A  118A  	fcall	_UART_sendChar
   573  0746                     l862:
   574                           
   575                           ;main_UART.c: 37:         if (getValue == '0')
   576  0746  3030               	movlw	48
   577  0747  067A               	xorwf	main@getValue,w
   578  0748  1D03               	btfss	3,2
   579  0749  2F4B               	goto	u321
   580  074A  2F4C               	goto	u320
   581  074B                     u321:
   582  074B  2F29               	goto	l852
   583  074C                     u320:
   584  074C                     l864:
   585                           
   586                           ;main_UART.c: 38:         {;main_UART.c: 39:             RB3 = 0;
   587  074C  1283               	bcf	3,5	;RP0=0, select bank0
   588  074D  1303               	bcf	3,6	;RP1=0, select bank0
   589  074E  1186               	bcf	6,3	;volatile
   590  074F                     l866:
   591                           
   592                           ;main_UART.c: 40:             UART_sendString(" LED-> OFF ");
   593  074F  3021               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   594  0750  120A  118A  26C0  120A  118A  	fcall	_UART_sendString
   595  0755                     l868:
   596                           
   597                           ;main_UART.c: 41:             UART_sendChar(10);
   598  0755  300A               	movlw	10
   599  0756  120A  118A  26A8  120A  118A  	fcall	_UART_sendChar
   600  075B  2F29               	goto	l852
   601  075C  120A  118A  2800   	ljmp	start
   602  075F                     __end_of_main:
   603                           
   604                           	psect	text1
   605  06C0                     __ptext1:	
   606 ;; *************** function _UART_sendString *****************
   607 ;; Defined at:
   608 ;;		line 49 in file "uart.c"
   609 ;; Parameters:    Size  Location     Type
   610 ;;  str             1    wreg     PTR unsigned char 
   611 ;;		 -> STR_3(12), STR_2(12), STR_1(32), 
   612 ;; Auto vars:     Size  Location     Type
   613 ;;  str             1    2[COMMON] PTR unsigned char 
   614 ;;		 -> STR_3(12), STR_2(12), STR_1(32), 
   615 ;; Return value:  Size  Location     Type
   616 ;;                  1    wreg      void 
   617 ;; Registers used:
   618 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   619 ;; Tracked objects:
   620 ;;		On entry : 0/0
   621 ;;		On exit  : 0/0
   622 ;;		Unchanged: 0/0
   623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   624 ;;      Params:         0       0       0       0       0
   625 ;;      Locals:         1       0       0       0       0
   626 ;;      Temps:          1       0       0       0       0
   627 ;;      Totals:         2       0       0       0       0
   628 ;;Total ram usage:        2 bytes
   629 ;; Hardware stack levels used:    1
   630 ;; Hardware stack levels required when called:    1
   631 ;; This function calls:
   632 ;;		_UART_sendChar
   633 ;; This function is called by:
   634 ;;		_main
   635 ;; This function uses a non-reentrant model
   636 ;;
   637                           
   638                           
   639                           ;psect for function _UART_sendString
   640  06C0                     _UART_sendString:
   641                           
   642                           ;incstack = 0
   643                           ; Regs used in _UART_sendString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   644                           ;UART_sendString@str stored from wreg
   645  06C0  00F2               	movwf	UART_sendString@str
   646  06C1                     l838:
   647                           
   648                           ;uart.c: 50:     while (*str) {
   649  06C1  2ED2               	goto	l844
   650  06C2                     l840:
   651                           
   652                           ;uart.c: 51:         UART_sendChar(*str++);
   653  06C2  0872               	movf	UART_sendString@str,w
   654  06C3  0084               	movwf	4
   655  06C4  120A  118A  2003  120A  118A  	fcall	stringdir
   656  06C9  120A  118A  26A8  120A  118A  	fcall	_UART_sendChar
   657  06CE                     l842:
   658  06CE  3001               	movlw	1
   659  06CF  00F1               	movwf	??_UART_sendString
   660  06D0  0871               	movf	??_UART_sendString,w
   661  06D1  07F2               	addwf	UART_sendString@str,f
   662  06D2                     l844:
   663                           
   664                           ;uart.c: 50:     while (*str) {
   665  06D2  0872               	movf	UART_sendString@str,w
   666  06D3  0084               	movwf	4
   667  06D4  120A  118A  2003  120A  118A  	fcall	stringdir
   668  06D9  3A00               	xorlw	0
   669  06DA  1D03               	skipz
   670  06DB  2EDD               	goto	u301
   671  06DC  2EDE               	goto	u300
   672  06DD                     u301:
   673  06DD  2EC2               	goto	l840
   674  06DE                     u300:
   675  06DE                     l52:
   676  06DE  0008               	return
   677  06DF                     __end_of_UART_sendString:
   678                           
   679                           	psect	text2
   680  06A8                     __ptext2:	
   681 ;; *************** function _UART_sendChar *****************
   682 ;; Defined at:
   683 ;;		line 33 in file "uart.c"
   684 ;; Parameters:    Size  Location     Type
   685 ;;  bt              1    wreg     unsigned char 
   686 ;; Auto vars:     Size  Location     Type
   687 ;;  bt              1    0[COMMON] unsigned char 
   688 ;; Return value:  Size  Location     Type
   689 ;;                  1    wreg      void 
   690 ;; Registers used:
   691 ;;		wreg
   692 ;; Tracked objects:
   693 ;;		On entry : 0/0
   694 ;;		On exit  : 0/0
   695 ;;		Unchanged: 0/0
   696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   697 ;;      Params:         0       0       0       0       0
   698 ;;      Locals:         1       0       0       0       0
   699 ;;      Temps:          0       0       0       0       0
   700 ;;      Totals:         1       0       0       0       0
   701 ;;Total ram usage:        1 bytes
   702 ;; Hardware stack levels used:    1
   703 ;; This function calls:
   704 ;;		Nothing
   705 ;; This function is called by:
   706 ;;		_UART_sendString
   707 ;;		_main
   708 ;; This function uses a non-reentrant model
   709 ;;
   710                           
   711                           
   712                           ;psect for function _UART_sendChar
   713  06A8                     _UART_sendChar:
   714                           
   715                           ;incstack = 0
   716                           ; Regs used in _UART_sendChar: [wreg]
   717                           ;UART_sendChar@bt stored from wreg
   718  06A8  00F0               	movwf	UART_sendChar@bt
   719  06A9                     l768:
   720  06A9                     l36:	
   721                           ;uart.c: 34:     while (!TXIF);
   722                           
   723  06A9  1283               	bcf	3,5	;RP0=0, select bank0
   724  06AA  1303               	bcf	3,6	;RP1=0, select bank0
   725  06AB  1E0C               	btfss	12,4	;volatile
   726  06AC  2EAE               	goto	u171
   727  06AD  2EAF               	goto	u170
   728  06AE                     u171:
   729  06AE  2EA9               	goto	l36
   730  06AF                     u170:
   731  06AF                     l770:
   732                           
   733                           ;uart.c: 35:     TXREG = bt;
   734  06AF  0870               	movf	UART_sendChar@bt,w
   735  06B0  0099               	movwf	25	;volatile
   736  06B1                     l39:
   737  06B1  0008               	return
   738  06B2                     __end_of_UART_sendChar:
   739                           
   740                           	psect	text3
   741  06DF                     __ptext3:	
   742 ;; *************** function _UART_init *****************
   743 ;; Defined at:
   744 ;;		line 10 in file "uart.c"
   745 ;; Parameters:    Size  Location     Type
   746 ;;  Baud_rate       4    6[BANK0 ] long 
   747 ;; Auto vars:     Size  Location     Type
   748 ;;		None
   749 ;; Return value:  Size  Location     Type
   750 ;;                  1    wreg      void 
   751 ;; Registers used:
   752 ;;		wreg, status,2, status,0, pclath, cstack
   753 ;; Tracked objects:
   754 ;;		On entry : 0/0
   755 ;;		On exit  : 0/0
   756 ;;		Unchanged: 0/0
   757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   758 ;;      Params:         0       4       0       0       0
   759 ;;      Locals:         0       0       0       0       0
   760 ;;      Temps:          0       0       0       0       0
   761 ;;      Totals:         0       4       0       0       0
   762 ;;Total ram usage:        4 bytes
   763 ;; Hardware stack levels used:    1
   764 ;; Hardware stack levels required when called:    1
   765 ;; This function calls:
   766 ;;		___aldiv
   767 ;; This function is called by:
   768 ;;		_main
   769 ;; This function uses a non-reentrant model
   770 ;;
   771                           
   772                           
   773                           ;psect for function _UART_init
   774  06DF                     _UART_init:
   775  06DF                     l812:	
   776                           ;incstack = 0
   777                           ; Regs used in _UART_init: [wreg+status,2+status,0+pclath+cstack]
   778                           
   779                           
   780                           ;uart.c: 12:     TRISC6 = 0;
   781  06DF  1683               	bsf	3,5	;RP0=1, select bank1
   782  06E0  1303               	bcf	3,6	;RP1=0, select bank1
   783  06E1  1307               	bcf	7,6	;volatile
   784                           
   785                           ;uart.c: 13:     TRISC7 = 1;
   786  06E2  1787               	bsf	7,7	;volatile
   787  06E3                     l814:
   788                           
   789                           ;uart.c: 16:     SPBRG = ((20000000 / 16) / Baud_rate) - 1;
   790  06E3  1283               	bcf	3,5	;RP0=0, select bank0
   791  06E4  1303               	bcf	3,6	;RP1=0, select bank0
   792  06E5  0829               	movf	UART_init@Baud_rate+3,w
   793  06E6  00F3               	movwf	___aldiv@divisor+3
   794  06E7  0828               	movf	UART_init@Baud_rate+2,w
   795  06E8  00F2               	movwf	___aldiv@divisor+2
   796  06E9  0827               	movf	UART_init@Baud_rate+1,w
   797  06EA  00F1               	movwf	___aldiv@divisor+1
   798  06EB  0826               	movf	UART_init@Baud_rate,w
   799  06EC  00F0               	movwf	___aldiv@divisor
   800  06ED  3000               	movlw	0
   801  06EE  00F7               	movwf	___aldiv@dividend+3
   802  06EF  3013               	movlw	19
   803  06F0  00F6               	movwf	___aldiv@dividend+2
   804  06F1  3012               	movlw	18
   805  06F2  00F5               	movwf	___aldiv@dividend+1
   806  06F3  30D0               	movlw	208
   807  06F4  00F4               	movwf	___aldiv@dividend
   808  06F5  120A  118A  275F  120A  118A  	fcall	___aldiv
   809  06FA  0870               	movf	?___aldiv,w
   810  06FB  3EFF               	addlw	255
   811  06FC  1683               	bsf	3,5	;RP0=1, select bank1
   812  06FD  1303               	bcf	3,6	;RP1=0, select bank1
   813  06FE  0099               	movwf	25	;volatile
   814  06FF                     l816:
   815                           
   816                           ;uart.c: 17:     BRGH = 1;
   817  06FF  1518               	bsf	24,2	;volatile
   818  0700                     l818:
   819                           
   820                           ;uart.c: 20:     SYNC = 0;
   821  0700  1218               	bcf	24,4	;volatile
   822  0701                     l820:
   823                           
   824                           ;uart.c: 21:     SPEN = 1;
   825  0701  1283               	bcf	3,5	;RP0=0, select bank0
   826  0702  1303               	bcf	3,6	;RP1=0, select bank0
   827  0703  1798               	bsf	24,7	;volatile
   828  0704                     l822:
   829                           
   830                           ;uart.c: 24:     TXEN = 1;
   831  0704  1683               	bsf	3,5	;RP0=1, select bank1
   832  0705  1303               	bcf	3,6	;RP1=0, select bank1
   833  0706  1698               	bsf	24,5	;volatile
   834  0707                     l824:
   835                           
   836                           ;uart.c: 25:     CREN = 1;
   837  0707  1283               	bcf	3,5	;RP0=0, select bank0
   838  0708  1303               	bcf	3,6	;RP1=0, select bank0
   839  0709  1618               	bsf	24,4	;volatile
   840  070A                     l826:
   841                           
   842                           ;uart.c: 28:     TX9 = 0;
   843  070A  1683               	bsf	3,5	;RP0=1, select bank1
   844  070B  1303               	bcf	3,6	;RP1=0, select bank1
   845  070C  1318               	bcf	24,6	;volatile
   846  070D                     l828:
   847                           
   848                           ;uart.c: 29:     RX9 = 0;
   849  070D  1283               	bcf	3,5	;RP0=0, select bank0
   850  070E  1303               	bcf	3,6	;RP1=0, select bank0
   851  070F  1318               	bcf	24,6	;volatile
   852  0710                     l33:
   853  0710  0008               	return
   854  0711                     __end_of_UART_init:
   855                           
   856                           	psect	text4
   857  075F                     __ptext4:	
   858 ;; *************** function ___aldiv *****************
   859 ;; Defined at:
   860 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\aldiv.c"
   861 ;; Parameters:    Size  Location     Type
   862 ;;  divisor         4    0[COMMON] long 
   863 ;;  dividend        4    4[COMMON] long 
   864 ;; Auto vars:     Size  Location     Type
   865 ;;  quotient        4    2[BANK0 ] long 
   866 ;;  sign            1    1[BANK0 ] unsigned char 
   867 ;;  counter         1    0[BANK0 ] unsigned char 
   868 ;; Return value:  Size  Location     Type
   869 ;;                  4    0[COMMON] long 
   870 ;; Registers used:
   871 ;;		wreg, status,2, status,0
   872 ;; Tracked objects:
   873 ;;		On entry : 0/0
   874 ;;		On exit  : 0/0
   875 ;;		Unchanged: 0/0
   876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   877 ;;      Params:         8       0       0       0       0
   878 ;;      Locals:         0       6       0       0       0
   879 ;;      Temps:          1       0       0       0       0
   880 ;;      Totals:         9       6       0       0       0
   881 ;;Total ram usage:       15 bytes
   882 ;; Hardware stack levels used:    1
   883 ;; This function calls:
   884 ;;		Nothing
   885 ;; This function is called by:
   886 ;;		_UART_init
   887 ;; This function uses a non-reentrant model
   888 ;;
   889                           
   890                           
   891                           ;psect for function ___aldiv
   892  075F                     ___aldiv:
   893  075F                     l772:	
   894                           ;incstack = 0
   895                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
   896                           
   897  075F  1283               	bcf	3,5	;RP0=0, select bank0
   898  0760  1303               	bcf	3,6	;RP1=0, select bank0
   899  0761  01A1               	clrf	___aldiv@sign
   900  0762                     l774:
   901  0762  1FF3               	btfss	___aldiv@divisor+3,7
   902  0763  2F65               	goto	u181
   903  0764  2F66               	goto	u180
   904  0765                     u181:
   905  0765  2F73               	goto	l225
   906  0766                     u180:
   907  0766                     l776:
   908  0766  09F0               	comf	___aldiv@divisor,f
   909  0767  09F1               	comf	___aldiv@divisor+1,f
   910  0768  09F2               	comf	___aldiv@divisor+2,f
   911  0769  09F3               	comf	___aldiv@divisor+3,f
   912  076A  0AF0               	incf	___aldiv@divisor,f
   913  076B  1903               	skipnz
   914  076C  0AF1               	incf	___aldiv@divisor+1,f
   915  076D  1903               	skipnz
   916  076E  0AF2               	incf	___aldiv@divisor+2,f
   917  076F  1903               	skipnz
   918  0770  0AF3               	incf	___aldiv@divisor+3,f
   919  0771  01A1               	clrf	___aldiv@sign
   920  0772  0AA1               	incf	___aldiv@sign,f
   921  0773                     l225:
   922  0773  1FF7               	btfss	___aldiv@dividend+3,7
   923  0774  2F76               	goto	u191
   924  0775  2F77               	goto	u190
   925  0776                     u191:
   926  0776  2F86               	goto	l782
   927  0777                     u190:
   928  0777                     l778:
   929  0777  09F4               	comf	___aldiv@dividend,f
   930  0778  09F5               	comf	___aldiv@dividend+1,f
   931  0779  09F6               	comf	___aldiv@dividend+2,f
   932  077A  09F7               	comf	___aldiv@dividend+3,f
   933  077B  0AF4               	incf	___aldiv@dividend,f
   934  077C  1903               	skipnz
   935  077D  0AF5               	incf	___aldiv@dividend+1,f
   936  077E  1903               	skipnz
   937  077F  0AF6               	incf	___aldiv@dividend+2,f
   938  0780  1903               	skipnz
   939  0781  0AF7               	incf	___aldiv@dividend+3,f
   940  0782                     l780:
   941  0782  3001               	movlw	1
   942  0783  00F8               	movwf	??___aldiv
   943  0784  0878               	movf	??___aldiv,w
   944  0785  06A1               	xorwf	___aldiv@sign,f
   945  0786                     l782:
   946  0786  3000               	movlw	0
   947  0787  00A5               	movwf	___aldiv@quotient+3
   948  0788  3000               	movlw	0
   949  0789  00A4               	movwf	___aldiv@quotient+2
   950  078A  3000               	movlw	0
   951  078B  00A3               	movwf	___aldiv@quotient+1
   952  078C  3000               	movlw	0
   953  078D  00A2               	movwf	___aldiv@quotient
   954  078E                     l784:
   955  078E  0873               	movf	___aldiv@divisor+3,w
   956  078F  0472               	iorwf	___aldiv@divisor+2,w
   957  0790  0471               	iorwf	___aldiv@divisor+1,w
   958  0791  0470               	iorwf	___aldiv@divisor,w
   959  0792  1903               	skipnz
   960  0793  2F95               	goto	u201
   961  0794  2F96               	goto	u200
   962  0795                     u201:
   963  0795  2FE3               	goto	l804
   964  0796                     u200:
   965  0796                     l786:
   966  0796  01A0               	clrf	___aldiv@counter
   967  0797  0AA0               	incf	___aldiv@counter,f
   968  0798  2FA6               	goto	l790
   969  0799                     l788:
   970  0799  3001               	movlw	1
   971  079A  00F8               	movwf	??___aldiv
   972  079B                     u215:
   973  079B  1003               	clrc
   974  079C  0DF0               	rlf	___aldiv@divisor,f
   975  079D  0DF1               	rlf	___aldiv@divisor+1,f
   976  079E  0DF2               	rlf	___aldiv@divisor+2,f
   977  079F  0DF3               	rlf	___aldiv@divisor+3,f
   978  07A0  0BF8               	decfsz	??___aldiv,f
   979  07A1  2F9B               	goto	u215
   980  07A2  3001               	movlw	1
   981  07A3  00F8               	movwf	??___aldiv
   982  07A4  0878               	movf	??___aldiv,w
   983  07A5  07A0               	addwf	___aldiv@counter,f
   984  07A6                     l790:
   985  07A6  1FF3               	btfss	___aldiv@divisor+3,7
   986  07A7  2FA9               	goto	u221
   987  07A8  2FAA               	goto	u220
   988  07A9                     u221:
   989  07A9  2F99               	goto	l788
   990  07AA                     u220:
   991  07AA                     l792:
   992  07AA  3001               	movlw	1
   993  07AB  00F8               	movwf	??___aldiv
   994  07AC                     u235:
   995  07AC  1003               	clrc
   996  07AD  0DA2               	rlf	___aldiv@quotient,f
   997  07AE  0DA3               	rlf	___aldiv@quotient+1,f
   998  07AF  0DA4               	rlf	___aldiv@quotient+2,f
   999  07B0  0DA5               	rlf	___aldiv@quotient+3,f
  1000  07B1  0BF8               	decfsz	??___aldiv,f
  1001  07B2  2FAC               	goto	u235
  1002  07B3                     l794:
  1003  07B3  0873               	movf	___aldiv@divisor+3,w
  1004  07B4  0277               	subwf	___aldiv@dividend+3,w
  1005  07B5  1D03               	skipz
  1006  07B6  2FC1               	goto	u245
  1007  07B7  0872               	movf	___aldiv@divisor+2,w
  1008  07B8  0276               	subwf	___aldiv@dividend+2,w
  1009  07B9  1D03               	skipz
  1010  07BA  2FC1               	goto	u245
  1011  07BB  0871               	movf	___aldiv@divisor+1,w
  1012  07BC  0275               	subwf	___aldiv@dividend+1,w
  1013  07BD  1D03               	skipz
  1014  07BE  2FC1               	goto	u245
  1015  07BF  0870               	movf	___aldiv@divisor,w
  1016  07C0  0274               	subwf	___aldiv@dividend,w
  1017  07C1                     u245:
  1018  07C1  1C03               	skipc
  1019  07C2  2FC4               	goto	u241
  1020  07C3  2FC5               	goto	u240
  1021  07C4                     u241:
  1022  07C4  2FD4               	goto	l800
  1023  07C5                     u240:
  1024  07C5                     l796:
  1025  07C5  0870               	movf	___aldiv@divisor,w
  1026  07C6  02F4               	subwf	___aldiv@dividend,f
  1027  07C7  0871               	movf	___aldiv@divisor+1,w
  1028  07C8  1C03               	skipc
  1029  07C9  0F71               	incfsz	___aldiv@divisor+1,w
  1030  07CA  02F5               	subwf	___aldiv@dividend+1,f
  1031  07CB  0872               	movf	___aldiv@divisor+2,w
  1032  07CC  1C03               	skipc
  1033  07CD  0F72               	incfsz	___aldiv@divisor+2,w
  1034  07CE  02F6               	subwf	___aldiv@dividend+2,f
  1035  07CF  0873               	movf	___aldiv@divisor+3,w
  1036  07D0  1C03               	skipc
  1037  07D1  0F73               	incfsz	___aldiv@divisor+3,w
  1038  07D2  02F7               	subwf	___aldiv@dividend+3,f
  1039  07D3                     l798:
  1040  07D3  1422               	bsf	___aldiv@quotient,0
  1041  07D4                     l800:
  1042  07D4  3001               	movlw	1
  1043  07D5                     u255:
  1044  07D5  1003               	clrc
  1045  07D6  0CF3               	rrf	___aldiv@divisor+3,f
  1046  07D7  0CF2               	rrf	___aldiv@divisor+2,f
  1047  07D8  0CF1               	rrf	___aldiv@divisor+1,f
  1048  07D9  0CF0               	rrf	___aldiv@divisor,f
  1049  07DA  3EFF               	addlw	-1
  1050  07DB  1D03               	skipz
  1051  07DC  2FD5               	goto	u255
  1052  07DD                     l802:
  1053  07DD  3001               	movlw	1
  1054  07DE  02A0               	subwf	___aldiv@counter,f
  1055  07DF  1D03               	btfss	3,2
  1056  07E0  2FE2               	goto	u261
  1057  07E1  2FE3               	goto	u260
  1058  07E2                     u261:
  1059  07E2  2FAA               	goto	l792
  1060  07E3                     u260:
  1061  07E3                     l804:
  1062  07E3  0821               	movf	___aldiv@sign,w
  1063  07E4  1903               	btfsc	3,2
  1064  07E5  2FE7               	goto	u271
  1065  07E6  2FE8               	goto	u270
  1066  07E7                     u271:
  1067  07E7  2FF3               	goto	l808
  1068  07E8                     u270:
  1069  07E8                     l806:
  1070  07E8  09A2               	comf	___aldiv@quotient,f
  1071  07E9  09A3               	comf	___aldiv@quotient+1,f
  1072  07EA  09A4               	comf	___aldiv@quotient+2,f
  1073  07EB  09A5               	comf	___aldiv@quotient+3,f
  1074  07EC  0AA2               	incf	___aldiv@quotient,f
  1075  07ED  1903               	skipnz
  1076  07EE  0AA3               	incf	___aldiv@quotient+1,f
  1077  07EF  1903               	skipnz
  1078  07F0  0AA4               	incf	___aldiv@quotient+2,f
  1079  07F1  1903               	skipnz
  1080  07F2  0AA5               	incf	___aldiv@quotient+3,f
  1081  07F3                     l808:
  1082  07F3  0825               	movf	___aldiv@quotient+3,w
  1083  07F4  00F3               	movwf	?___aldiv+3
  1084  07F5  0824               	movf	___aldiv@quotient+2,w
  1085  07F6  00F2               	movwf	?___aldiv+2
  1086  07F7  0823               	movf	___aldiv@quotient+1,w
  1087  07F8  00F1               	movwf	?___aldiv+1
  1088  07F9  0822               	movf	___aldiv@quotient,w
  1089  07FA  00F0               	movwf	?___aldiv
  1090  07FB                     l235:
  1091  07FB  0008               	return
  1092  07FC                     __end_of___aldiv:
  1093                           
  1094                           	psect	text5
  1095  06B2                     __ptext5:	
  1096 ;; *************** function _UART_getChar *****************
  1097 ;; Defined at:
  1098 ;;		line 38 in file "uart.c"
  1099 ;; Parameters:    Size  Location     Type
  1100 ;;		None
  1101 ;; Auto vars:     Size  Location     Type
  1102 ;;		None
  1103 ;; Return value:  Size  Location     Type
  1104 ;;                  1    wreg      unsigned char 
  1105 ;; Registers used:
  1106 ;;		wreg
  1107 ;; Tracked objects:
  1108 ;;		On entry : 0/0
  1109 ;;		On exit  : 0/0
  1110 ;;		Unchanged: 0/0
  1111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1112 ;;      Params:         0       0       0       0       0
  1113 ;;      Locals:         0       0       0       0       0
  1114 ;;      Temps:          0       0       0       0       0
  1115 ;;      Totals:         0       0       0       0       0
  1116 ;;Total ram usage:        0 bytes
  1117 ;; Hardware stack levels used:    1
  1118 ;; This function calls:
  1119 ;;		Nothing
  1120 ;; This function is called by:
  1121 ;;		_main
  1122 ;; This function uses a non-reentrant model
  1123 ;;
  1124                           
  1125                           
  1126                           ;psect for function _UART_getChar
  1127  06B2                     _UART_getChar:
  1128  06B2                     l830:	
  1129                           ;incstack = 0
  1130                           ; Regs used in _UART_getChar: [wreg]
  1131                           
  1132                           
  1133                           ;uart.c: 39:     if (OERR)
  1134  06B2  1283               	bcf	3,5	;RP0=0, select bank0
  1135  06B3  1303               	bcf	3,6	;RP1=0, select bank0
  1136  06B4  1C98               	btfss	24,1	;volatile
  1137  06B5  2EB7               	goto	u281
  1138  06B6  2EB8               	goto	u280
  1139  06B7                     u281:
  1140  06B7  2EBA               	goto	l43
  1141  06B8                     u280:
  1142  06B8                     l832:
  1143                           
  1144                           ;uart.c: 40:     {;uart.c: 41:         CREN = 0;
  1145  06B8  1218               	bcf	24,4	;volatile
  1146                           
  1147                           ;uart.c: 42:         CREN = 1;
  1148  06B9  1618               	bsf	24,4	;volatile
  1149  06BA                     l43:
  1150  06BA  1E8C               	btfss	12,5	;volatile
  1151  06BB  2EBD               	goto	u291
  1152  06BC  2EBE               	goto	u290
  1153  06BD                     u291:
  1154  06BD  2EBA               	goto	l43
  1155  06BE                     u290:
  1156  06BE                     l834:
  1157                           
  1158                           ;uart.c: 46:     return RCREG;
  1159  06BE  081A               	movf	26,w	;volatile
  1160  06BF                     l46:
  1161  06BF  0008               	return
  1162  06C0                     __end_of_UART_getChar:
  1163  007E                     btemp	set	126	;btemp
  1164  007E                     wtemp0	set	126
  1165                           
  1166                           	psect	config
  1167                           
  1168                           ;Config register CONFIG1 @ 0x2007
  1169                           ;	Oscillator Selection bits
  1170                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  1171                           ;	Watchdog Timer Enable bit
  1172                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1173                           ;	Power-up Timer Enable bit
  1174                           ;	PWRTE = OFF, PWRT disabled
  1175                           ;	RE3/MCLR pin function select bit
  1176                           ;	MCLRE = 0x1, unprogrammed default
  1177                           ;	Code Protection bit
  1178                           ;	CP = OFF, Program memory code protection is disabled
  1179                           ;	Data Code Protection bit
  1180                           ;	CPD = OFF, Data memory code protection is disabled
  1181                           ;	Brown Out Reset Selection bits
  1182                           ;	BOREN = ON, BOR enabled
  1183                           ;	Internal External Switchover bit
  1184                           ;	IESO = 0x1, unprogrammed default
  1185                           ;	Fail-Safe Clock Monitor Enabled bit
  1186                           ;	FCMEN = 0x1, unprogrammed default
  1187                           ;	Low Voltage Programming Enable bit
  1188                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1189                           ;	In-Circuit Debugger Mode bit
  1190                           ;	DEBUG = 0x1, unprogrammed default
  1191  2007                     	org	8199
  1192  2007  2FF2               	dw	12274
  1193                           
  1194                           ;Config register CONFIG2 @ 0x2008
  1195                           ;	Brown-out Reset Selection bit
  1196                           ;	BOR4V = 0x1, unprogrammed default
  1197                           ;	Flash Program Memory Self Write Enable bits
  1198                           ;	WRT = OFF, Write protection off
  1199  2008                     	org	8200
  1200  2008  3FFF               	dw	16383

Data Sizes:
    Strings     56
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      11
    BANK0            80     10      10
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    UART_sendString@str	PTR unsigned char  size(1) Largest target is 32
		 -> STR_3(CODE[12]), STR_2(CODE[12]), STR_1(CODE[32]), 


Critical Paths under _main in COMMON

    _UART_sendString->_UART_sendChar
    _UART_init->___aldiv

Critical Paths under _main in BANK0

    _main->_UART_init
    _UART_init->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     783
                                              9 COMMON     2     2      0
                       _UART_getChar
                          _UART_init
                      _UART_sendChar
                    _UART_sendString
 ---------------------------------------------------------------------------------
 (1) _UART_sendString                                      2     2      0     166
                                              1 COMMON     2     2      0
                      _UART_sendChar
 ---------------------------------------------------------------------------------
 (2) _UART_sendChar                                        1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_init                                            4     0      4     550
                                              6 BANK0      4     0      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     452
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _UART_getChar                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_getChar
   _UART_init
     ___aldiv
   _UART_sendChar
   _UART_sendString
     _UART_sendChar

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      A       A       5       12.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Mar 04 19:52:48 2021

                       pc 0002                        l33 0710                        l43 06BA  
                      l36 06A9                        l52 06DE                        l46 06BF  
                      l39 06B1                        fsr 0004                       l225 0773  
                     l235 07FB                       l800 07D4                       l802 07DD  
                     l804 07E3                       l820 0701                       l812 06DF  
                     l830 06B2                       l806 07E8                       l822 0704  
                     l814 06E3                       l832 06B8                       l808 07F3  
                     l824 0707                       l816 06FF                       l840 06C2  
                     l834 06BE                       l826 070A                       l818 0700  
                     l770 06AF                       l842 06CE                       l850 0723  
                     l780 0782                       l772 075F                       l828 070D  
                     l844 06D2                       l860 0740                       l852 0729  
                     l790 07A6                       l782 0786                       l774 0762  
                     l838 06C1                       l862 0746                       l854 0731  
                     l846 0711                       l792 07AA                       l784 078E  
                     l776 0766                       l768 06A9                       l864 074C  
                     l856 0737                       l848 0714                       l794 07B3  
                     l786 0796                       l778 0777                       l866 074F  
                     l858 073A                       l796 07C5                       l788 0799  
                     l868 0755                       l798 07D3                       _RB3 0033  
                     u200 0796                       u201 0795                       u220 07AA  
                     u300 06DE                       u221 07A9                       u301 06DD  
                     u310 0737                       u215 079B                       u311 0736  
                     u240 07C5                       u320 074C                       u241 07C4  
                     u321 074B                       u170 06AF                       u235 07AC  
                     u171 06AE                       u260 07E3                       u180 0766  
                     u261 07E2                       u245 07C1                       u181 0765  
                     u270 07E8                       u190 0777                       u271 07E7  
                     u255 07D5                       u191 0776                       u280 06B8  
                     u281 06B7                       u290 06BE                       u291 06BD  
                     _RX9 00C6                       _TX9 04C6                       fsr0 0004  
                    STR_1 0009                      STR_2 0035                      STR_3 0029  
                    _BRGH 04C2                      _CREN 00C4                      _RCIF 0065  
                    _OERR 00C1                      _SPEN 00C7                      _TXEN 04C5  
                    _TXIF 0064                      _SYNC 04C4                      _main 0711  
                    btemp 007E                      start 0000              main@getValue 007A  
         __end_of___aldiv 07FC                     ?_main 0070                     _RCREG 001A  
                   _SPBRG 0099                     _TRISB 0086                     _TXREG 0019  
      __size_of_UART_init 0032                     pclath 000A                     status 0003  
                   wtemp0 007E           _UART_sendString 06C0           __initialization 07FC  
            __end_of_main 075F                    ??_main 0079                    _TRISC6 043E  
                  _TRISC7 043F                 ??___aldiv 0078         __end_of_UART_init 0711  
 __end_of_UART_sendString 06DF   __end_of__initialization 07FC            __pcstackCOMMON 0070  
   __end_of_UART_sendChar 06B2           UART_sendChar@bt 0070                __pmaintext 0711  
              __stringtab 0003          ?_UART_sendString 0070                   ___aldiv 075F  
           ?_UART_getChar 0070                   __ptext1 06C0                   __ptext2 06A8  
                 __ptext3 06DF                   __ptext4 075F                   __ptext5 06B2  
        ___aldiv@dividend 0074      end_of_initialization 07FC          ___aldiv@quotient 0022  
          ??_UART_getChar 0070                 _UART_init 06DF                ?_UART_init 0026  
     start_initialization 07FC                 ___latbits 0002             __pcstackBANK0 0020  
    __end_of_UART_getChar 06C0                  ?___aldiv 0070    __size_of_UART_sendChar 000A  
               __pstrings 0003               ??_UART_init 0079        UART_init@Baud_rate 0026  
         ___aldiv@divisor 0070           ___aldiv@counter 0020        UART_sendString@str 0072  
__size_of_UART_sendString 001F               __stringbase 0008             _UART_sendChar 06A8  
        __size_of___aldiv 009D        __end_of__stringtab 0009     __size_of_UART_getChar 000E  
          ?_UART_sendChar 0070             __size_of_main 004E              _UART_getChar 06B2  
       ??_UART_sendString 0071                 stringcode 0003                  stringdir 0003  
                stringtab 0003              ___aldiv@sign 0021           ??_UART_sendChar 0070  
